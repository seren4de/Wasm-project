Input file: copy_sparseemcc.wasm
  binary:    copy_sparseemcc.wasm

Functions:           37
  Imported:           4
  Non-imported:      33
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 10.81% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:       940
  call:              37 (3.94% of all instructions)
  call_indirect:      5 (0.53% of all instructions, 11.90% of all calls)

Globals:
  #0 i32
     init: i32.const 5244128
     6 × global.get   7 × global.set  13 total (46/54% split)
  #1 i32
     init: i32.const 0
     2 × global.get   1 × global.set   3 total (67/33% split)
  #2 i32
     init: i32.const 0
     1 × global.get   1 × global.set   2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      7 (21.21% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (3.03%) × [-32]
    1  (3.03%) × [-16]
   31 (93.94%) × []
  functions with stack allocation total: 2 (6.06%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"copy_sparseemcc.wasm",1,3.030303,"[-32]",-32,32
sp_csv_line:"copy_sparseemcc.wasm",1,3.030303,"[-16]",-16,16
sp_csv_line:"copy_sparseemcc.wasm",31,93.93939,"[]",0,0

Counts of function types (9 unique types):
    1  (2.70%) × [i32, i32] -> [i32]
    1  (2.70%) × [i32, i64, i32, i32] -> [i32]
    2  (5.41%) × [i32, i32, i32, i32] -> [i32]
    2  (5.41%) × [i32, i64, i32] -> [i64]
    3  (8.11%) × [i32, i32, i32] -> [i32]
    6 (16.22%) × [] -> []
    7 (18.92%) × [] -> [i32]
    7 (18.92%) × [i32] -> []
    8 (21.62%) × [i32] -> [i32]

Functions with at least one call_indirect: 3 (9.09% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [] -> []
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  total classes: 3

CSV data for further analysis: copy_sparseemcc.wasm,940,37,5,11.904762,37,4,3,3,1,3,1.6666666666666667,1,17,5,29.411764,5,29.411764,5,29.411764

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"copy_sparseemcc.wasm",0,1,1,"i32.load"
"copy_sparseemcc.wasm",1,1,1,"i32.load"
"copy_sparseemcc.wasm",2,1,3,"i32.load"
