Input file: bprintemcc.wasm
  binary:    bprintemcc.wasm

Functions:          136
  Imported:           7
  Non-imported:     129
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         13
  Of those, unique functions:    13 (i.e., at least 9.56% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     19420
  call:             325 (1.67% of all instructions)
  call_indirect:     22 (0.11% of all instructions, 6.34% of all calls)

Globals:
  #0 i32
     init: i32.const 5247184
     42 × global.get   77 × global.set  119 total (35/65% split)
  #1 i32
     init: i32.const 0
      2 × global.get    1 × global.set    3 total (67/33% split)
  #2 i32
     init: i32.const 0
      1 × global.get    1 × global.set    2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     43 (33.33% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.78%) × [-560]
    1  (0.78%) × [-160]
    1  (0.78%) × [-80]
    2  (1.55%) × [-256]
    2  (1.55%) × [-240]
    2  (1.55%) × [-208]
    4  (3.10%) × [-32]
   10  (7.75%) × [-16]
  106 (82.17%) × []
  functions with stack allocation total: 23 (17.83%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"bprintemcc.wasm",1,0.7751938,"[-560]",-560,560
sp_csv_line:"bprintemcc.wasm",1,0.7751938,"[-160]",-160,160
sp_csv_line:"bprintemcc.wasm",1,0.7751938,"[-80]",-80,80
sp_csv_line:"bprintemcc.wasm",2,1.5503876,"[-256]",-256,256
sp_csv_line:"bprintemcc.wasm",2,1.5503876,"[-240]",-240,240
sp_csv_line:"bprintemcc.wasm",2,1.5503876,"[-208]",-208,208
sp_csv_line:"bprintemcc.wasm",4,3.1007752,"[-32]",-32,32
sp_csv_line:"bprintemcc.wasm",10,7.751938,"[-16]",-16,16
sp_csv_line:"bprintemcc.wasm",106,82.17054,"[]",0,0

Counts of function types (24 unique types):
    1  (0.74%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (0.74%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.74%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.74%) × [i32, i64, i32, i32] -> [i32]
    1  (0.74%) × [i32, f64, i32, i32, i32, i32] -> [i32]
    1  (0.74%) × [i64, i32, i32] -> [i32]
    1  (0.74%) × [i64, i64] -> [f64]
    1  (0.74%) × [f64] -> [i64]
    1  (0.74%) × [f64, i32] -> [f64]
    2  (1.47%) × [i32, i32, i32] -> []
    2  (1.47%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.47%) × [i32, i64, i64, i32] -> []
    2  (1.47%) × [i64, i32] -> [i32]
    3  (2.21%) × [i32, i32, i32, i32] -> []
    3  (2.21%) × [i32, i32, i32, i32, i32] -> []
    3  (2.21%) × [i32, i64, i32] -> [i64]
    4  (2.94%) × [i32, i32, i32, i32] -> [i32]
    5  (3.68%) × [i32, i32] -> []
    9  (6.62%) × [] -> []
   11  (8.09%) × [i32] -> []
   14 (10.29%) × [] -> [i32]
   16 (11.76%) × [i32, i32] -> [i32]
   16 (11.76%) × [i32, i32, i32] -> [i32]
   35 (25.74%) × [i32] -> [i32]

Functions with at least one call_indirect: 14 (10.85% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [    4,    4]   length:   1   unique funcs:    1   type: [] -> []
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    6,    7]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    8,    9]   length:   2   unique funcs:    2   type: [i32] -> [i32]
         range: [   10,   10]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32, f64, i32, i32, i32, i32] -> [i32]
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  10 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               35
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     3 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     2 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source: local.(get|tee)   type [i32, f64, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  7 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #2
    type: [i32, f64, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #3
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 2
  class #4
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 3
  class #5
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #6
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 8
  total classes: 7

CSV data for further analysis: bprintemcc.wasm,19420,325,22,6.340058,136,13,8,7,1,8,3.142857142857143,2,290,47,16.206896,47,16.206896,31,10.689655

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"bprintemcc.wasm",0,1,1,"i32.load"
"bprintemcc.wasm",1,2,1,"i32.load"
"bprintemcc.wasm",2,1,1,"local.(get|tee)"
"bprintemcc.wasm",3,2,2,"i32.load"
"bprintemcc.wasm",4,3,3,"local.(get|tee)"
"bprintemcc.wasm",5,1,6,"local.(get|tee)"
"bprintemcc.wasm",6,3,8,"i32.load"
