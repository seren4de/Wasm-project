Input file: gen_init_cpioemcc.wasm
  binary:    gen_init_cpioemcc.wasm

Functions:          201
  Imported:          13
  Non-imported:     188
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         17
  Of those, unique functions:    17 (i.e., at least 8.46% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     30425
  call:             635 (2.09% of all instructions)
  call_indirect:     12 (0.04% of all instructions, 1.85% of all calls)

Globals:
  #0 i32
     init: i32.const 5252608
      69 × global.get   131 × global.set   200 total (34/66% split)
  #1 i32
     init: i32.const 0
       2 × global.get     1 × global.set     3 total (67/33% split)
  #2 i32
     init: i32.const 0
       1 × global.get     1 × global.set     2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     70 (37.23% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.53%) × [-8976]
    1  (0.53%) × [-1056]
    1  (0.53%) × [-560]
    1  (0.53%) × [-432]
    1  (0.53%) × [-336]
    1  (0.53%) × [-304]
    1  (0.53%) × [-256]
    1  (0.53%) × [-208]
    1  (0.53%) × [-160]
    1  (0.53%) × [-144]
    1  (0.53%) × [-128]
    1  (0.53%) × [-112]
    1  (0.53%) × [-96]
    1  (0.53%) × [-48]
    2  (1.06%) × [-80]
    7  (3.72%) × [-32]
   23 (12.23%) × [-16]
  142 (75.53%) × []
  functions with stack allocation total: 46 (24.47%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-8976]",-8976,8976
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-1056]",-1056,1056
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-560]",-560,560
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-432]",-432,432
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-336]",-336,336
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-304]",-304,304
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-256]",-256,256
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-208]",-208,208
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-160]",-160,160
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-144]",-144,144
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-128]",-128,128
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-112]",-112,112
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-96]",-96,96
sp_csv_line:"gen_init_cpioemcc.wasm",1,0.5319149,"[-48]",-48,48
sp_csv_line:"gen_init_cpioemcc.wasm",2,1.0638298,"[-80]",-80,80
sp_csv_line:"gen_init_cpioemcc.wasm",7,3.7234042,"[-32]",-32,32
sp_csv_line:"gen_init_cpioemcc.wasm",23,12.234042,"[-16]",-16,16
sp_csv_line:"gen_init_cpioemcc.wasm",142,75.53191,"[]",0,0

Counts of function types (38 unique types):
    1  (0.50%) × [i32] -> [i64]
    1  (0.50%) × [i32, i32] -> [i64]
    1  (0.50%) × [i32, i32, i32] -> []
    1  (0.50%) × [i32, i32, i32, i32, i32] -> []
    1  (0.50%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (0.50%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.50%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.50%) × [i32, i32, i64] -> []
    1  (0.50%) × [i32, i64, i32] -> [i32]
    1  (0.50%) × [i32, i64, i32, i32] -> [i32]
    1  (0.50%) × [i32, i64, i64] -> []
    1  (0.50%) × [i32, f32] -> []
    1  (0.50%) × [i32, f64] -> []
    1  (0.50%) × [i32, f64, i32, i32, i32, i32] -> [i32]
    1  (0.50%) × [i64, i32, i32] -> [i32]
    1  (0.50%) × [i64, i64] -> [i32]
    1  (0.50%) × [i64, i64] -> [f32]
    1  (0.50%) × [i64, i64] -> [f64]
    1  (0.50%) × [f64] -> [i64]
    2  (1.00%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.00%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    2  (1.00%) × [i32, i32, i32, i64] -> [i64]
    2  (1.00%) × [i32, i64] -> []
    2  (1.00%) × [i64, i32] -> [i32]
    2  (1.00%) × [i64, i64, i64, i64] -> [i32]
    2  (1.00%) × [f64, i32] -> [f64]
    3  (1.49%) × [i32, i32, i32, i32] -> []
    3  (1.49%) × [i32, i64, i32] -> [i64]
    3  (1.49%) × [i32, i64, i64, i32] -> []
    4  (1.99%) × [i32, i32] -> []
    7  (3.48%) × [i32, i64, i64, i64, i64] -> []
    9  (4.48%) × [i32, i32, i32, i32] -> [i32]
   11  (5.47%) × [] -> []
   13  (6.47%) × [] -> [i32]
   13  (6.47%) × [i32] -> []
   29 (14.43%) × [i32, i32, i32] -> [i32]
   36 (17.91%) × [i32] -> [i32]
   37 (18.41%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 10 (5.32% of all functions)

Table elements initialization:
         range: [    1,    6]   length:   6   unique funcs:    6   type: [i32] -> [i32]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [] -> []
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    9,   10]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   11,   12]   length:   2   unique funcs:    2   type: [i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [   14,   14]   length:   1   unique funcs:    1   type: [i32, f64, i32, i32, i32, i32] -> [i32]
         range: [   15,   15]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   16,   17]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  9 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               36
         functions matching by type and present in table (regardless at which table index):    8
         functions matching by type and present in permissable table index range:              8
     1 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     7 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               29
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     1 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source: local.(get|tee)   type [i32, f64, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  6 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 8
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #3
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #4
    type: [i32, f64, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #5
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 7
  total classes: 6

CSV data for further analysis: gen_init_cpioemcc.wasm,30425,635,12,1.854714,201,17,7,6,1,7,2,1,258,41,15.891473,41,15.891473,31,12.015504

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"gen_init_cpioemcc.wasm",0,1,1,"i32.load"
"gen_init_cpioemcc.wasm",1,8,1,"local.(get|tee)"
"gen_init_cpioemcc.wasm",2,1,1,"local.(get|tee)"
"gen_init_cpioemcc.wasm",3,2,1,"i32.load"
"gen_init_cpioemcc.wasm",4,1,1,"local.(get|tee)"
"gen_init_cpioemcc.wasm",5,4,7,"i32.load"
