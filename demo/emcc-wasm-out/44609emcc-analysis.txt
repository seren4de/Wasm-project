Input file: 44609emcc.wasm
  binary:    44609emcc.wasm

Functions:           35
  Imported:           7
  Non-imported:      28
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 17.14% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:       467
  call:              32 (6.85% of all instructions)
  call_indirect:      3 (0.64% of all instructions, 8.57% of all calls)

Globals:
  #0 i32
     init: i32.const 5245264
      6 × global.get   10 × global.set   16 total (38/62% split)
  #1 i32
     init: i32.const 0
      2 × global.get    1 × global.set    3 total (67/33% split)
  #2 i32
     init: i32.const 0
      1 × global.get    1 × global.set    2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      7 (25.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (3.57%) × [-32]
    2  (7.14%) × [-16]
   25 (89.29%) × []
  functions with stack allocation total: 3 (10.71%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"44609emcc.wasm",1,3.5714285,"[-32]",-32,32
sp_csv_line:"44609emcc.wasm",2,7.142857,"[-16]",-16,16
sp_csv_line:"44609emcc.wasm",25,89.28571,"[]",0,0

Counts of function types (9 unique types):
    1  (2.86%) × [i32, i32, i32] -> [i32]
    1  (2.86%) × [i32, i32, i32, i32] -> [i32]
    1  (2.86%) × [i32, i64, i32, i32] -> [i32]
    3  (8.57%) × [i32, i32] -> [i32]
    3  (8.57%) × [i32, i64, i32] -> [i64]
    6 (17.14%) × [] -> []
    6 (17.14%) × [i32] -> []
    7 (20.00%) × [] -> [i32]
    7 (20.00%) × [i32] -> [i32]

Functions with at least one call_indirect: 2 (7.14% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [] -> []
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  total classes: 3

CSV data for further analysis: 44609emcc.wasm,467,32,3,8.571428,35,6,4,3,1,1,1,1,10,4,40,4,40,4,40

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"44609emcc.wasm",0,1,1,"i32.load"
"44609emcc.wasm",1,1,1,"i32.load"
"44609emcc.wasm",2,2,1,"i32.load"
