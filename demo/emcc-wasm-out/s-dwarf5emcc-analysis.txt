Input file: s-dwarf5emcc.wasm
  binary:    s-dwarf5emcc.wasm

Functions:           67
  Imported:           3
  Non-imported:      64
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          1
  Of those, unique functions:     1 (i.e., at least 1.49% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      9835
  call:             224 (2.28% of all instructions)
  call_indirect:      5 (0.05% of all instructions, 2.18% of all calls)

Globals:
  #0 i32
     init: i32.const 5244016
     31 × global.get   42 × global.set   73 total (42/58% split)
  #1 i32
     init: i32.const 0
      2 × global.get    1 × global.set    3 total (67/33% split)
  #2 i32
     init: i32.const 0
      1 × global.get    1 × global.set    2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     32 (50.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.56%) × [-8976]
    1  (1.56%) × [-432]
    1  (1.56%) × [-336]
    1  (1.56%) × [-160]
    1  (1.56%) × [-128]
    1  (1.56%) × [-112]
    1  (1.56%) × [-96]
    1  (1.56%) × [-80]
    1  (1.56%) × [-48]
    1  (1.56%) × [-32]
    8 (12.50%) × [-16]
   46 (71.88%) × []
  functions with stack allocation total: 18 (28.12%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-8976]",-8976,8976
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-432]",-432,432
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-336]",-336,336
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-160]",-160,160
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-128]",-128,128
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-112]",-112,112
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-96]",-96,96
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-80]",-80,80
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-48]",-48,48
sp_csv_line:"s-dwarf5emcc.wasm",1,1.5625,"[-32]",-32,32
sp_csv_line:"s-dwarf5emcc.wasm",8,12.5,"[-16]",-16,16
sp_csv_line:"s-dwarf5emcc.wasm",46,71.875,"[]",0,0

Counts of function types (26 unique types):
    1  (1.49%) × [i32] -> [f64]
    1  (1.49%) × [i32, i32] -> [i64]
    1  (1.49%) × [i32, i32] -> [f64]
    1  (1.49%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (1.49%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (1.49%) × [i32, i32, i32, f64] -> [f64]
    1  (1.49%) × [i32, i64] -> []
    1  (1.49%) × [i32, i64, i64] -> []
    1  (1.49%) × [i32, f32] -> []
    1  (1.49%) × [i32, f64] -> []
    1  (1.49%) × [i64, i64] -> [i32]
    1  (1.49%) × [i64, i64] -> [f64]
    1  (1.49%) × [f64, i32] -> [f64]
    1  (1.49%) × [f64, i32, i32, f64] -> [f64]
    2  (2.99%) × [i32, i32] -> []
    2  (2.99%) × [i32, i32, i32, i32] -> []
    2  (2.99%) × [i32, i32, i32, f64] -> [f32]
    2  (2.99%) × [i64, i64, i64, i64] -> [i32]
    3  (4.48%) × [i32, i32] -> [i32]
    3  (4.48%) × [i32, i64, i64, i32] -> []
    5  (7.46%) × [i32, i32, i32, f64] -> [i32]
    6  (8.96%) × [] -> []
    6  (8.96%) × [i32] -> []
    6  (8.96%) × [i32] -> [i32]
    7 (10.45%) × [i32, i64, i64, i64, i64] -> []
    9 (13.43%) × [] -> [i32]

Functions with at least one call_indirect: 4 (6.25% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [] -> []
  1 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                0
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                0
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 3
  total classes: 3

CSV data for further analysis: s-dwarf5emcc.wasm,9835,224,5,2.183406,67,1,1,3,1,3,1.6666666666666667,1,6,1,16.666666,1,16.666666,1,16.666666

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"s-dwarf5emcc.wasm",0,1,1,"i32.load"
"s-dwarf5emcc.wasm",1,0,1,"i32.load"
"s-dwarf5emcc.wasm",2,0,3,"i32.load"
