Input file: disptraceemcc.wasm
  binary:    disptraceemcc.wasm

Functions:          155
  Imported:           9
  Non-imported:     146
  Exported:          10

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         10
  Of those, unique functions:    10 (i.e., at least 6.45% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     18811
  call:             393 (2.09% of all instructions)
  call_indirect:     15 (0.08% of all instructions, 3.68% of all calls)

Globals:
  #0 i32
     init: i32.const 5254224
     35 × global.get   66 × global.set  101 total (35/65% split)
  #1 i32
     init: i32.const 0
      2 × global.get    1 × global.set    3 total (67/33% split)
  #2 i32
     init: i32.const 0
      1 × global.get    1 × global.set    2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     36 (24.66% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.68%) × [-560]
    1  (0.68%) × [-304]
    1  (0.68%) × [-256]
    1  (0.68%) × [-208]
    1  (0.68%) × [-160]
    1  (0.68%) × [-128]
    1  (0.68%) × [-112]
    2  (1.37%) × [-80]
    4  (2.74%) × [-32]
   15 (10.27%) × [-16]
  118 (80.82%) × []
  functions with stack allocation total: 28 (19.18%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"disptraceemcc.wasm",1,0.6849315,"[-560]",-560,560
sp_csv_line:"disptraceemcc.wasm",1,0.6849315,"[-304]",-304,304
sp_csv_line:"disptraceemcc.wasm",1,0.6849315,"[-256]",-256,256
sp_csv_line:"disptraceemcc.wasm",1,0.6849315,"[-208]",-208,208
sp_csv_line:"disptraceemcc.wasm",1,0.6849315,"[-160]",-160,160
sp_csv_line:"disptraceemcc.wasm",1,0.6849315,"[-128]",-128,128
sp_csv_line:"disptraceemcc.wasm",1,0.6849315,"[-112]",-112,112
sp_csv_line:"disptraceemcc.wasm",2,1.369863,"[-80]",-80,80
sp_csv_line:"disptraceemcc.wasm",4,2.739726,"[-32]",-32,32
sp_csv_line:"disptraceemcc.wasm",15,10.2739725,"[-16]",-16,16
sp_csv_line:"disptraceemcc.wasm",118,80.821915,"[]",0,0

Counts of function types (31 unique types):
    1  (0.65%) × [i32] -> [i64]
    1  (0.65%) × [i32, i32] -> [i64]
    1  (0.65%) × [i32, i32, i32] -> []
    1  (0.65%) × [i32, i32, i32, i32] -> []
    1  (0.65%) × [i32, i32, i32, i32, i32] -> []
    1  (0.65%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (0.65%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.65%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.65%) × [i32, i32, i32, i64] -> [i64]
    1  (0.65%) × [i32, i64, i32, i32] -> [i32]
    1  (0.65%) × [i32, i64, i64, i64, i64] -> []
    1  (0.65%) × [i32, f64, i32, i32, i32, i32] -> [i32]
    1  (0.65%) × [i64, i32] -> [i64]
    1  (0.65%) × [i64, i32, i32, i32, i32, i32] -> []
    1  (0.65%) × [i64, i64] -> [f64]
    1  (0.65%) × [f64] -> [i64]
    1  (0.65%) × [f64, i32] -> [f64]
    2  (1.29%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.29%) × [i32, i64, i64, i32] -> []
    2  (1.29%) × [i64, i32, i32] -> [i32]
    3  (1.94%) × [i32, i64, i32] -> [i64]
    3  (1.94%) × [i64, i32] -> [i32]
    4  (2.58%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    5  (3.23%) × [i32, i32] -> []
    8  (5.16%) × [i32, i32, i32, i32] -> [i32]
   10  (6.45%) × [i32] -> []
   11  (7.10%) × [] -> []
   11  (7.10%) × [] -> [i32]
   15  (9.68%) × [i32, i32, i32] -> [i32]
   30 (19.35%) × [i32, i32] -> [i32]
   32 (20.65%) × [i32] -> [i32]

Functions with at least one call_indirect: 12 (8.22% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [] -> []
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    3,    4]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    5,    6]   length:   2   unique funcs:    2   type: [i32] -> [i32]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32, f64, i32, i32, i32, i32] -> [i32]
         range: [    9,    9]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   10,   10]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  8 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               32
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               15
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     2 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source: local.(get|tee)   type [i32, f64, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  6 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #3
    type: [i32, f64, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #4
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 2
  class #5
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 9
  total classes: 6

CSV data for further analysis: disptraceemcc.wasm,18811,393,15,3.6764705,155,10,8,6,1,9,2.5,1,190,36,18.947369,36,18.947369,34,17.894737

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"disptraceemcc.wasm",0,1,1,"i32.load"
"disptraceemcc.wasm",1,2,1,"i32.load"
"disptraceemcc.wasm",2,1,1,"local.(get|tee)"
"disptraceemcc.wasm",3,1,1,"local.(get|tee)"
"disptraceemcc.wasm",4,2,2,"i32.load"
"disptraceemcc.wasm",5,3,9,"i32.load"
