Input file: dtemcc.wasm
  binary:    dtemcc.wasm

Functions:          147
  Imported:           9
  Non-imported:     138
  Exported:          10

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          9
  Of those, unique functions:     9 (i.e., at least 6.12% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     17744
  call:             397 (2.24% of all instructions)
  call_indirect:      9 (0.05% of all instructions, 2.22% of all calls)

Globals:
  #0 i32
     init: i32.const 5250240
     32 × global.get   59 × global.set   91 total (35/65% split)
  #1 i32
     init: i32.const 0
      2 × global.get    1 × global.set    3 total (67/33% split)
  #2 i32
     init: i32.const 0
      1 × global.get    1 × global.set    2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     33 (23.91% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.72%) × [-560]
    1  (0.72%) × [-304]
    1  (0.72%) × [-256]
    1  (0.72%) × [-208]
    1  (0.72%) × [-160]
    1  (0.72%) × [-112]
    1  (0.72%) × [-80]
    1  (0.72%) × [-64]
    3  (2.17%) × [-32]
   13  (9.42%) × [-16]
  114 (82.61%) × []
  functions with stack allocation total: 24 (17.39%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-560]",-560,560
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-304]",-304,304
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-256]",-256,256
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-208]",-208,208
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-160]",-160,160
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-112]",-112,112
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-80]",-80,80
sp_csv_line:"dtemcc.wasm",1,0.7246377,"[-64]",-64,64
sp_csv_line:"dtemcc.wasm",3,2.173913,"[-32]",-32,32
sp_csv_line:"dtemcc.wasm",13,9.42029,"[-16]",-16,16
sp_csv_line:"dtemcc.wasm",114,82.608696,"[]",0,0

Counts of function types (31 unique types):
    1  (0.68%) × [i32, i32] -> [i64]
    1  (0.68%) × [i32, i32, i32, i32] -> []
    1  (0.68%) × [i32, i32, i32, i32, i32] -> []
    1  (0.68%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (0.68%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.68%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.68%) × [i32, i64] -> []
    1  (0.68%) × [i32, i64, i32] -> [i32]
    1  (0.68%) × [i32, i64, i32, i32] -> [i32]
    1  (0.68%) × [i32, f64, i32, i32, i32, i32] -> [i32]
    1  (0.68%) × [i64] -> []
    1  (0.68%) × [i64, i32] -> [i64]
    1  (0.68%) × [i64, i32, i32, i32, i32, i32] -> []
    1  (0.68%) × [i64, i64] -> [f64]
    1  (0.68%) × [f64] -> [i64]
    1  (0.68%) × [f64, i32] -> [f64]
    2  (1.36%) × [i32] -> [i64]
    2  (1.36%) × [i32, i32, i32] -> []
    2  (1.36%) × [i32, i64, i64, i32] -> []
    2  (1.36%) × [i64, i32, i32] -> [i32]
    3  (2.04%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    3  (2.04%) × [i32, i64, i32] -> [i64]
    3  (2.04%) × [i64, i32] -> [i32]
    4  (2.72%) × [i32, i32] -> []
    4  (2.72%) × [i32, i32, i32, i32] -> [i32]
   10  (6.80%) × [] -> []
   11  (7.48%) × [] -> [i32]
   11  (7.48%) × [i32] -> []
   14  (9.52%) × [i32, i32, i32] -> [i32]
   26 (17.69%) × [i32] -> [i32]
   34 (23.13%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 7 (5.07% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [] -> []
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, f64, i32, i32, i32, i32] -> [i32]
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [    9,    9]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  9 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     5 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source: local.(get|tee)   type [i32, f64, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  5 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #3
    type: [i32, f64, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #4
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 5
  total classes: 5

CSV data for further analysis: dtemcc.wasm,17744,397,9,2.2167487,147,9,5,5,1,5,1.8,1,88,15,17.045454,15,17.045454,13,14.772727

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"dtemcc.wasm",0,1,1,"i32.load"
"dtemcc.wasm",1,1,1,"local.(get|tee)"
"dtemcc.wasm",2,2,1,"i32.load"
"dtemcc.wasm",3,1,1,"local.(get|tee)"
"dtemcc.wasm",4,2,5,"i32.load"
