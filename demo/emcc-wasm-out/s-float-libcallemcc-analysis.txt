Input file: s-float-libcallemcc.wasm
  binary:    s-float-libcallemcc.wasm

Functions:           28
  Imported:           3
  Non-imported:      25
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          1
  Of those, unique functions:     1 (i.e., at least 3.57% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:       654
  call:              27 (4.13% of all instructions)
  call_indirect:      1 (0.15% of all instructions, 3.57% of all calls)

Globals:
  #0 i32
     init: i32.const 5248480
     7 × global.get   8 × global.set  15 total (47/53% split)
  #1 i32
     init: i32.const 0
     2 × global.get   1 × global.set   3 total (67/33% split)
  #2 i32
     init: i32.const 0
     1 × global.get   1 × global.set   2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      8 (32.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (4.00%) × [-16]
   24 (96.00%) × []
  functions with stack allocation total: 1 (4.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-float-libcallemcc.wasm",1,4,"[-16]",-16,16
sp_csv_line:"s-float-libcallemcc.wasm",24,96,"[]",0,0

Counts of function types (11 unique types):
    1  (3.57%) × [i32] -> [i32]
    1  (3.57%) × [i32] -> [f64]
    1  (3.57%) × [i32, f32] -> [f32]
    1  (3.57%) × [f32] -> [i32]
    2  (7.14%) × [i32] -> [f32]
    2  (7.14%) × [f32] -> [f32]
    2  (7.14%) × [f64] -> [f64]
    3 (10.71%) × [i32, i32] -> [i32]
    4 (14.29%) × [i32] -> []
    5 (17.86%) × [] -> []
    6 (21.43%) × [] -> [i32]

Functions with at least one call_indirect: 1 (4.00% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [] -> []
  1 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  1 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  total classes: 1

CSV data for further analysis: s-float-libcallemcc.wasm,654,27,1,3.5714285,28,1,1,1,1,1,1,1,5,1,20,1,20,1,20

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"s-float-libcallemcc.wasm",0,1,1,"i32.load"
