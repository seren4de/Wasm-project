Input file: m68kmakeemcc.wasm
  binary:    m68kmakeemcc.wasm

Functions:          155
  Imported:           7
  Non-imported:     148
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         11
  Of those, unique functions:    11 (i.e., at least 7.10% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     23329
  call:             510 (2.19% of all instructions)
  call_indirect:     20 (0.09% of all instructions, 3.77% of all calls)

Globals:
  #0 i32
     init: i32.const 5534032
     53 × global.get   96 × global.set  149 total (36/64% split)
  #1 i32
     init: i32.const 0
      2 × global.get    1 × global.set    3 total (67/33% split)
  #2 i32
     init: i32.const 0
      1 × global.get    1 × global.set    2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     54 (36.49% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.68%) × [-1056]
    1  (0.68%) × [-560]
    1  (0.68%) × [-160]
    1  (0.68%) × [-80]
    2  (1.35%) × [-256]
    2  (1.35%) × [-240]
    2  (1.35%) × [-208]
    4  (2.70%) × [-32]
    9  (6.08%) × [-16]
  125 (84.46%) × []
  functions with stack allocation total: 23 (15.54%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"m68kmakeemcc.wasm",1,0.6756757,"[-1056]",-1056,1056
sp_csv_line:"m68kmakeemcc.wasm",1,0.6756757,"[-560]",-560,560
sp_csv_line:"m68kmakeemcc.wasm",1,0.6756757,"[-160]",-160,160
sp_csv_line:"m68kmakeemcc.wasm",1,0.6756757,"[-80]",-80,80
sp_csv_line:"m68kmakeemcc.wasm",2,1.3513514,"[-256]",-256,256
sp_csv_line:"m68kmakeemcc.wasm",2,1.3513514,"[-240]",-240,240
sp_csv_line:"m68kmakeemcc.wasm",2,1.3513514,"[-208]",-208,208
sp_csv_line:"m68kmakeemcc.wasm",4,2.7027028,"[-32]",-32,32
sp_csv_line:"m68kmakeemcc.wasm",9,6.081081,"[-16]",-16,16
sp_csv_line:"m68kmakeemcc.wasm",125,84.45946,"[]",0,0

Counts of function types (23 unique types):
    1  (0.65%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.65%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.65%) × [i32, i64, i32, i32] -> [i32]
    1  (0.65%) × [i32, f64, i32, i32, i32, i32] -> [i32]
    1  (0.65%) × [i64, i32, i32] -> [i32]
    1  (0.65%) × [i64, i64] -> [f64]
    1  (0.65%) × [f64] -> [i64]
    1  (0.65%) × [f64, i32] -> [f64]
    2  (1.29%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.29%) × [i32, i64, i64, i32] -> []
    2  (1.29%) × [i64, i32] -> [i32]
    3  (1.94%) × [i32, i32, i32, i32] -> []
    3  (1.94%) × [i32, i64, i32] -> [i64]
    4  (2.58%) × [i32, i32, i32, i32, i32] -> []
    5  (3.23%) × [i32, i32, i32] -> []
    7  (4.52%) × [i32, i32, i32, i32] -> [i32]
    9  (5.81%) × [] -> []
    9  (5.81%) × [i32, i32] -> []
   11  (7.10%) × [] -> [i32]
   14  (9.03%) × [i32] -> []
   19 (12.26%) × [i32, i32, i32] -> [i32]
   28 (18.06%) × [i32, i32] -> [i32]
   29 (18.71%) × [i32] -> [i32]

Functions with at least one call_indirect: 13 (8.78% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [] -> []
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    6,    7]   length:   2   unique funcs:    2   type: [i32] -> [i32]
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    9,    9]   length:   1   unique funcs:    1   type: [i32, f64, i32, i32, i32, i32] -> [i32]
         range: [   10,   10]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  9 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               29
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               28
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     2 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source: local.(get|tee)   type [i32, f64, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  7 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #3
    type: [i32, f64, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #4
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 2
  class #5
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #6
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 8
  total classes: 7

CSV data for further analysis: m68kmakeemcc.wasm,23329,510,20,3.7735848,155,11,8,7,1,8,2.857142857142857,1,374,39,10.427808,39,10.427808,31,8.28877

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"m68kmakeemcc.wasm",0,1,1,"i32.load"
"m68kmakeemcc.wasm",1,2,1,"i32.load"
"m68kmakeemcc.wasm",2,1,1,"local.(get|tee)"
"m68kmakeemcc.wasm",3,1,1,"local.(get|tee)"
"m68kmakeemcc.wasm",4,2,2,"i32.load"
"m68kmakeemcc.wasm",5,1,6,"local.(get|tee)"
"m68kmakeemcc.wasm",6,3,8,"i32.load"
