Input file: test_perraremcc.wasm
  binary:    test_perraremcc.wasm

Functions:           58
  Imported:           6
  Non-imported:      52
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 10.34% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      1484
  call:              71 (4.78% of all instructions)
  call_indirect:      6 (0.40% of all instructions, 7.79% of all calls)

Globals:
  #0 i32
     init: i32.const 5247632
      9 × global.get   16 × global.set   25 total (36/64% split)
  #1 i32
     init: i32.const 0
      2 × global.get    1 × global.set    3 total (67/33% split)
  #2 i32
     init: i32.const 0
      1 × global.get    1 × global.set    2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     10 (19.23% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.92%) × [-32]
    4  (7.69%) × [-16]
   47 (90.38%) × []
  functions with stack allocation total: 5 (9.62%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_perraremcc.wasm",1,1.9230769,"[-32]",-32,32
sp_csv_line:"test_perraremcc.wasm",4,7.6923075,"[-16]",-16,16
sp_csv_line:"test_perraremcc.wasm",47,90.38461,"[]",0,0

Counts of function types (9 unique types):
    1  (1.72%) × [i32, i64, i32, i32] -> [i32]
    3  (5.17%) × [i32, i32, i32, i32] -> [i32]
    3  (5.17%) × [i32, i64, i32] -> [i64]
    4  (6.90%) × [i32, i32, i32] -> [i32]
    7 (12.07%) × [] -> []
    8 (13.79%) × [i32] -> []
   10 (17.24%) × [] -> [i32]
   11 (18.97%) × [i32] -> [i32]
   11 (18.97%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 4 (7.69% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [] -> []
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                7
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     4 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  total classes: 3

CSV data for further analysis: test_perraremcc.wasm,1484,71,6,7.7922077,58,6,4,3,1,4,2,1,26,7,26.923077,7,26.923077,7,26.923077

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_perraremcc.wasm",0,1,1,"i32.load"
"test_perraremcc.wasm",1,2,1,"i32.load"
"test_perraremcc.wasm",2,1,4,"i32.load"
