Input file: function_pointersemcc.wasm
  binary:    function_pointersemcc.wasm

Functions:           19
  Imported:           1
  Non-imported:      18
  Exported:           9

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          3
  Of those, unique functions:     3 (i.e., at least 15.79% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:       236
  call:              13 (5.51% of all instructions)
  call_indirect:      2 (0.85% of all instructions, 13.33% of all calls)

Globals:
  #0 i32
     init: i32.const 5243920
     7 × global.get   8 × global.set  15 total (47/53% split)
  #1 i32
     init: i32.const 0
     2 × global.get   1 × global.set   3 total (67/33% split)
  #2 i32
     init: i32.const 0
     1 × global.get   1 × global.set   2 total (50/50% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      8 (44.44% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   18(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"function_pointersemcc.wasm",18,100,"[]",0,0

Counts of function types (4 unique types):
    4 (21.05%) × [i32] -> []
    4 (21.05%) × [i32] -> [i32]
    5 (26.32%) × [] -> []
    6 (31.58%) × [] -> [i32]

Functions with at least one call_indirect: 2 (11.11% of all functions)

Table elements initialization:
         range: [    1,    2]   length:   2   unique funcs:    2   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [] -> []
  2 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  total classes: 2

CSV data for further analysis: function_pointersemcc.wasm,236,13,2,13.333333,19,3,1,2,1,1,1,1,9,3,33.333332,3,33.333332,1,11.111111

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"function_pointersemcc.wasm",0,1,1,"i32.load"
"function_pointersemcc.wasm",1,2,1,"local.(get|tee)"
