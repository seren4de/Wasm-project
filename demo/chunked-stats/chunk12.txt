rm_elememcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

floydwarshallemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

count_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

18226emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

watchdog-simpleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

additionarrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

funperfect2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

counting_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

other_binary_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

k_means_clusteringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

exp_return_valemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_i64_precise_neededemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

10-controlemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

missing_returnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

insertion_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

p92emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

outemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

enfaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

hosttypeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

spewGemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

host_byte_orderemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

49emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

bisbicemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

bug1491666emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

zeroesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p84emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionevenoddemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13630emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

functionfirst&lastemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

radix_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

shell_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

genincemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

while50emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

symboltablehashemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

collatzemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

8-evalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

nota7emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

generate-a-wordemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

exploit_me_1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

2860emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

LongDoubleSupportemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

reversenaturalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

check_mapbrkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

2nd_SmallestElementemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_container_ofemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

url-parseremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test-rewb-bsdemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 4']

binary_tree_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hash_sdbmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

check_stat2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Linearsearchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input77emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

17940emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

01emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

linearledemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

closebitcastsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

and_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

stringlengthemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

make_a_change_problememcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

p57emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_funcsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input034emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_i64_qdoubleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

getLineemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functionseriessumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0004emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

quote_calc4-semcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

assert-failemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p67emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

seriessumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

multikey_quick_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

swap_nodesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

unop_parensemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

m68kmakeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

test-vasprintfemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

can_bus_sendemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

is_primeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

divconstemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13499emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

46493emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

data_sizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

zechoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

13385emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

spec2defemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

43680emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

obfstremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

44emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

reverse_bitsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

decode_waysemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

copy_stdioemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

input097emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

loopsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_getoptemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

octal_to_hexadecimalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_fast_mathemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

42977emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

return_0emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

u_boot_binman_embed_smemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

sizeOf_pointerVariablesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43638emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

39519emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

43598emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

8540emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

47291emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

43605emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

13355emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

if_not_takenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input40emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

rotate-leftemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

45287emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

7-precedenceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

enum2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

function_paramemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

function_referenciaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

swap_number_without_using_3rd_variableemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

frequency_of_characteremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

hex2hexemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43719emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

Dijkstraemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

exercise5_5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

fibonacci_Searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

39337emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

extract_genesisemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

write_with_bitsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

44609emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

InsertionSortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

check_openpf3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

strlongeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ejemplo_funcionesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

4-andemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

single_numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

insertionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43771emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

17439emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

test_strndupemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

kallsymsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

rotate_arrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

embed_dataemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

interleaving_stringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

booleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

Poweremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input81emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

39869emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

subtract1arrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

rechoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

menu2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0027-structcopyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

28474emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_alloca_stackemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

59emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

dsmemberutilemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sort_colorsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_array2bemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

unformattedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

multiplyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input120emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

45308emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0003-locals1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_langinfoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

dijkstraemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

6121emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

28225emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

43506emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionevenodd1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

no_bison_stubemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

transitive_closureemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

2404emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

s-float-libcallemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13426emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

43530emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

precedence_3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input89emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

comando_switchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

21emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

exit1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

media_sem_procemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

valid_sudokuemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

count_and_sayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

datatocemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

exercicio4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_ubsan_full_overflowemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

5-oremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13313emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

fpoutemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

word_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input132emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

u_boot_binman_embedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input039emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

3-commaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

funperfectemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

large_factorialsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

mpc86x_clkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13570emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

17194emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

exitcode_explicitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

literaisemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

IndirectCallToBuiltinemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

anagrams_in_stringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13549emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

test-strsepemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

selection_sort_recursiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input082emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

39617emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

gen_asciiemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

dias_segemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

04emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

jump_gameemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

17371emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

matrix_chain_multiplication1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

bst_bfsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

vwebpemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

RecursiveDescentParseremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

for4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

semihostemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

modificadores_de_tiposemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

parensemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

insertion-sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input154emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

t_fmemopenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 7']

ternary_short_circuit_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

rpnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

checkSpacingemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

43433emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

test_strtoll_binemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

libc_linkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input138emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ok_syntax1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0028-inits05emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

Inversion_Countemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0028-inits03emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

armstronginrangeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

390emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

sign-extendemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bubble_sort_recursionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

struct_unionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input109emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

gnome_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

strindexemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

variaveisemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

for5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

catalanemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

function50even(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

13298emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

comando_continueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0010-goto1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

4998emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

40808emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

print_continuous_sequence_sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

arithchkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0028-inits15emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test-noopemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input30emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

calc_code_requiresemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

lock1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_asan_memcpyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

sumofldfdemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13465emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

mkkeywordhashemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

hello_123emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

44594emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0028-inits02emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

while_single_statementemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

and_falseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13525emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functioncountemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

copy_blockemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

remove_endemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

gcd_recursiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

2753emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

range_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

pointersToIntegersemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

cread-altemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_sscanf_5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input82emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bst_rightemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sudoku_cemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  total classes', ' 3']

test_i64_llabsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

stacksizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 9']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

__mtag_tag_regionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

array_stackemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_constglobalstructsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43542emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

0004-operators4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

42647emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

for_contemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

divisionaltemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

word_breakemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

right_shiftemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

c6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

example6_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

39718emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

quicksortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

err_syntax11emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

itobemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

audiogenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

43774emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

pigeonhole_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0025-duffemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

differenceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

menor_deles_respostaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

permutation_sequenceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

GCDNumberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

factorial_trailing_zeroesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input101emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_asan_static_buffer_overflowemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

radix_sort_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

perfectemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input122emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionaddemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

fread_floatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 5']

can_bus_receiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionisLargest3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

factorsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0019-condexpr1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

nested_whileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

ifelseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

37069emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lagrange_theorememcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43607emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

13276emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

input143emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

btfixupprepemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

36858emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

tipoDatoformatosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

floyd_warshallemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

hello_world_loop_mallocemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0028-inits06emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

variables_constantesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

39336emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

swap_2_numbersemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

powernow-k8-decodeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bst_convertemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13288emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

13368emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_i64_umulemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

45emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

elf_sectionsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

Area_ofTheCircleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

imv2pgmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 7']

0005-if1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

if_anidadoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

brainfuckemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

cjk_variantsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

fits-bitsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

stockemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

stooge_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

cvmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 7']

while_multi_statementemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

quote_calcemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

write_fileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

IndirectCallToExternalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

longest_palindromic_substringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

for_declemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

feature_testsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionprime(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

43686emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

SparseMatrix_Or_notemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

naval_battleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

example6_7emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test-PATH_MAXemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0004-operators3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

15202emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

three_sum_closestemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

d_alignofemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input110emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13394emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

40128emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

input80emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_sscanfemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

sumvecemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sr_entitlement_helperemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_stdint_limitsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionsubtract3(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

337emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

heap_sort_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

nested_scopeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

int_to_stringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_erraremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_strtoll_octemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionproduct(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

struct_anidadoV2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 5']

exercise4_4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

c_atoi_str_to_integeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

variable_as_argemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0008-for1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

err_syntax18emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bellman_fordemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

isSquareemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-structemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionproduct2(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_strptime_reentrantemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

global_shadowedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_atoXemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

octal_to_decimalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

function50evenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_ifemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

toneemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

inv_numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

naive_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

9-pointeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

s-variadicemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

singlelevelemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

or_falseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

check_helloemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

global_not_initializedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

example4_4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

vr-coefsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

fifthemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hash_xor8emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0006-while1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

hash_adler32emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

skip_on_failure_multi_short_circuitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test-rewb-sysvemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 4']

fcfsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_ubsan_full_left_shiftemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_double_varargsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

34667emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

any-odd-oneemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

BubbleSortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

calloc2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

softwareupdateemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Question-6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

13430emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

41_Nikhil_Babu-21emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

askqemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 3']

test_trickystringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

boemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

example5_4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

fpwr2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

trymkffoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

stdin_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_appendemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 7']

test_va_copyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input080emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

44990emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

bst_zigzagemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

circular_queueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

fsmapemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

search_rotated_arrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Week1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test-custom-mutatoremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_mainenvemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

input71emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

38116emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

asignacion_stringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

if_takenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

multiple_ifemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

troca_globemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

show-bytes-moreemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

8783emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

operadores_relacionaisemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

uniq-uemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

test_write_stdout_filenoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

funbasicemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

fatorialemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43654emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

simpsons_1_3rd_ruleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

44334emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

quick_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

insertion_sort_recursiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

operadores_racionalesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

for3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

show-bytesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

41909emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

p72emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sheet_columnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Activity_Selection_Greedy_Approachemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

clocks_get_m_nemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

02cemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

edademcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

argoptemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

13382emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

0006emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

codesignemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

m7makecharsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

13389emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

lpsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

formfeedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

39624emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43552emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

43553emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

13639emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

next_permutationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

tree_serdesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13471emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

43764emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

9-evalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

menor_delesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

06emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

maxalignemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_ctypeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 15']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

factgenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

permutationsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

test-strlcpyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

equacaoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0026-sizeof1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

__cc_has_minline_all_stringopsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

offset_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

__cc_has_mfentryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ctest2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test-repBitsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sparse-matrix-multiplicationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

45459emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

StackUsingLinkedListemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

operador_ternarioemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hdresizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

test-nanosleepemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

null_operationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

x_power_yemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

34emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

46524emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

Pointeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

defines1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

apioppsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

first_fitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

linear_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_getopt_longemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

check_time1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

04#U6590#U6ce2#U90a3#U5951#U51fd#U6570_Fibonacciemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

36780emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

print_matrixemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hppemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 7']

GOST_28147emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

test_setlocaleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bool2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

enumeracoesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

simplereademcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fileHandlingemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

unstableemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

57emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

13395emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

example9_1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

printcharsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hamming_codeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

DESemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

stddocemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

rand_r_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

slide_windowemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

primeinrangeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

int-shifts-are-arithemeticemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

nested_ternaryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fatorial2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

unsigned-high-prodemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13254emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

json_table_generatoremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

10936emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

24emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

genaliases2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

0-mainemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

retorno_funcemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_getgepemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43910emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

so1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

stringifyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

quote_calc2-semcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

p63emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test-attributeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

multiply_stringsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

check_openpf4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

swappedfirst&lastemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

36274emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

islandsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13431emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

test-instremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

defines2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

wasmfs_open_appendemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

duplicated-namesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13387emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

simple_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_perraremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

functionposnegemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_memcpy2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

matrix_dgemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

quartileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_safe_stack_allocaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0-1-knapsackemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input134emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

rm_dupsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_addr_of_stackedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p61emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

foldremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [f64, f64] -> [f64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

47043emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionprimeinrange(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

Swap_adjacentElementsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

tempfunemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

crc32hashemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionfreqemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

is_armstrongemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

countemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_literal_negative_zeroemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

34262emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

check_stat1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-diffemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

ReadArgsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

03emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

hello_world_loopemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionposneg(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_conststructsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionquadratic(2)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

19310emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

adaline_learningemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

sort_listemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

smallz4catemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #4']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #6']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 26']
['  total classes', ' 7']

calc2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

antemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input113emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lemonemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #6']
['    type', ' [f64] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #7']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #8']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #9']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 8']
['  class #10']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 11']

ifelseLadderemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

ler_escrever_caracteremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

mandelbrotemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

45290emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

41_Nikhil_Babu-22emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

fast_binemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

10745emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

test_memfs_fsyncemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

littleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

c19emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0028-inits09emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43648emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

43653emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

test_strptime_tmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

odd_even_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

int-size-is-32emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

46302emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

locale_codesetemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13386emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

escopoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bin2hexemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0013-struct2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

disptraceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 6']

7emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

example_c_fileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionisLargestemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

apuntadoremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

18154emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

atomic_32_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

heap_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

2873emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

copy3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

sintaxe_basicaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13572emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Reverse_stringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

reverse_nodesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

13478emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

no_initializeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input39emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

cmplogemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

input089emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bead_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input100emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_localeconvemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input118emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input130emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

change_caseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_i32_mul_preciseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

for_emptyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

floyd_warshall_algorithmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

exploit_me_3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input97emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13399emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_sscanf_skipemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

floyd_cycle_detection_algorithmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionproduct2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

c18emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

combinationsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p32emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

37362emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

file_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

8411emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 4']

quote_calc4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0013-struct6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input030emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

spacesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

41_Nikhil_Babu-29emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

prime_seiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Age_in_Days_Months_Yearemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input119emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hexadecimal_to_octal2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_i64_i16emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

9142emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

mk251emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  total classes', ' 3']

functionfibonacciemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

producerconsumeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

locale_ASCIIemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_emptyPathemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43890emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

s-allocaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13384emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

44620emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

simple_targetemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

assign_valemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

autoassembleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

threeforthsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

is_palindromeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input147emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

copy_sparseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  total classes', ' 3']

dfs_bfsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

calc_vmlinuz_load_addremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

e_square_x_programemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

gyp_dummyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13279emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

functionproduct1(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test-strlcatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

checkeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43604emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

threaded_binary_treesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

mkbbemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

vulnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

4053emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

37716emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 7']

input099emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0004-operators5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

productdigitsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13392emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

39338emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

functiondivide1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

four_sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

41_Nikhil_Babu-17emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

2094emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

50751emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

39389emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

efenceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

sumnaturalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_strtol_decemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

subarrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

comando_do_whileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

mksmdkv310splemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

6-oremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p65emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

45119emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

binarytreesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_printf_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ternaryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

14334emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

ternary_short_circuitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bt1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bufbombemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

switchcaseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

function_recursiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13280emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

eq_falseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

shellsortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

pelt_halflife_decreaseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

tmultcheckemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

trap_wateremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

gas_stationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

percentageemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

mostrado10vezesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

htoiemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

shortest_palindromeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0001emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

binary_to_octalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

concatenationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

calc_code_allemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input040emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

enteroemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ArrayADTemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

switchvemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input128emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

2-sideeffectsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

tminemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

05_06emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

0004-operators1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_strtolemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bintreeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

associativity_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

btyacc_calc1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

whilenotaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

struct_anidadoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

FreeBSD_versionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

partition_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p96emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input148emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lexicographic_permutationsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

truncate_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

42254emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

media_procemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

long_doubleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

kruskalsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

revert_by_wordemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p56emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

commandlinecalculatoremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13367emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43505emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

posnegativeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

eq_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

39204emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

sentinel_linear_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

forward_decl_argsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

47239emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

newton_raphson_rootemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

imv2txtemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

test_memmove3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

cantor_setemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

42646emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

intersectionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

calcemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

hcf&lcmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

11emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

foo2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

p90emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

gt_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionsubtractemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

victimemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

fibonacci_fastemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

47emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

permutation_in_stringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

m2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

precedence_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13519emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

s-exitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

marksemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0015emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bankersemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functiondivide2(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

create_symlinkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

test_asan_bitfield_unround_offsetemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionaverage1(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

02emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

39794emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

scramble_stringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

fpointersemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

hamming_weightemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

letter_combinationsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0011-switch1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

skip_on_failure_short_circuit_andemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

table2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

12emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

29949emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

9595emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

nested_breakemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

cleantxtemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

0020emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

putvaremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

39625emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

c5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ge_falseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

size_floatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

subjectsarrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

37emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

spiral_matrixemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

7330emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

operacionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

fsync_stdoutemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_strtoll_hexemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43708emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

test_funcptr_namecollideemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 4']

functionfactemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

function_valoremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

46499emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

36276emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

testinstremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

16emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

cleararrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

45458emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

927emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

13441emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

menorq20emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13632emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

p66emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

warshall_algorithmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ascemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

combination_sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

declare_blockemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43690emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

deptoolemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

estruturasemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

calc_code_topemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

reorder_listemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

reversenumberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

left_shiftemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

example5_14emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input150emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_asan_use_after_freeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

mul3div4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

if_nestedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

frequencyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

bst_preorderemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p97emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0021-tentativedefs1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

comando_foremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

le_falseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

balanced_bstemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

generate_unicode_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

is-fd-openemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

structv2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 5']

modified_binary_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

good_aoutemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

comando_breakemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

3851emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

hash_djb2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

maximal_squareemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_ubsan_minimal_too_many_errorsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bst_max_pathemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

longest_continuious_numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

nested_loopemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

return_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

table10numemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functiondivision3(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

insert_positionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13380emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

lifeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

printevenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

28emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

c11emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sumevenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43551emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

fibonacci1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_stdlibsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #6']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #7']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 8']

input074emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

spirographemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

print_groupemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i64, i64, i64] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

c1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

area_trianguloemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

8emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

chessboardemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

rabin_karp_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

jump_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

eval_rpnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

PrgNameemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

genemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

test_strcasecmpemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

two_sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

multiple_varsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0002emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_complexemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

valid_parenthesesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hello_world_fopenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

test-extraer2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

15203emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

benchfloatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

sol4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

c12emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bst_depthemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

if_nested_4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0002-global1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionreverse1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

saferp_optimizeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

quenenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

demonetizationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

cartesian_to_polaremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionhcflcm(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_newlocaleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

47025emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

functionsubtract1(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

checksummeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

binary_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

45426emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_strtoll_decemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

45495emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

segment_treeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

functionisLargest(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

russian_dollemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

rm_dupemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0001-define2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionsubtract2(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0013-struct4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

Calculatoremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

sumof_naturalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

declare_lateemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

39847emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

largestthreeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input116emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sol2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

declare_after_blockemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

for_matrizemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0029-ptrarith2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

showjournalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

9303emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

mkconfigemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

functionadd3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

armstrong_numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

generate_first_followemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

28996emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

13476emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

continueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

2821emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

46519emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

input114emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

boyer_moore_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

memory1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

primenumberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

persistent_targetemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

adding_two_numbersemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13285emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13609emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

vowelemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

46256emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

functionproduct1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_llrintemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0028-inits01emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

41467emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

functionprimeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

26497emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

mkshelllinkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

sizesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

36394emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

input51emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13393emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionsubtract1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

c9emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

max_heapemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0015-calls04emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

whilevenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0012-pointers1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

is-little-endianemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input121emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Sum_Diagnolsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

add_two_numbersemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionaverage1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

s-exp-charemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

s-dynamicemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

400emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

copy-intemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

csvOutputemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

abs-cmovemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

gentranslitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

constantesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

no_argemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input135emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

operador_atribuicaoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

course_scheduleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

greatest_common_divisoremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test-fgetlnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 4']

media_globaisemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

Insertion_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

stdin2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43754emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

absoluteloaderemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

malloctestemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

3441emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

39684emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

if_nested_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

p69emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

equacao2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_strtol_binemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

tsub-okemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-exp-stremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fileHandlingSimpleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

test_timebemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

41_Nikhil_Babu-20emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

floatconstemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

3893emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test-compcovemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

checkcodeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

fibonacci_dpemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

46275emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

17432emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

1239emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 7']

unused_expemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

forward_declarationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0028-inits14emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

euler1_nodivemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

46103emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_strcmp_uniemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13388emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

function_callemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

poly_addemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

02bemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

trocaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

mfrom_table_genemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

skip_on_failure_short_circuit_oremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

3888emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

coin_changeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0029-ptrarith1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

minimum_path_sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

return_in_whileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

38194emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

least_common_multipleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

for2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

negemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

37358emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

c13-2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

packccemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

operadores_logicosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

newlinesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

roundrobinemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

later_declemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

malloc2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

s-opencloseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 4']

47183emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

memory6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

anagramsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

generate_uudmapemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

45329emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

input127emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

whirlgenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-dwarf1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

nested_ternary_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

c15emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ExternalWeakLinkageemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

evenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

ramaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13335emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

gendibemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

kadanes_algorithmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

empty_expressionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

gif2webpemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

36398emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

36391emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

functiondivision(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_atexitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 7']

defines3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

inplace-swapemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

find_leap_yearemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

c14emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionsubtract3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_autodebugemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

43770emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

precedence_4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fun_in_expremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

longest_subsequenceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

retorno_procemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_time_cemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Ncremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

diningphilosopheremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

array_traversalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

decimal_to_binary_recursionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

incremento_decrementoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

45529emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0001-sanityemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input139emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

insert_sort_listemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

41477emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

percentagealtemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

merge_intervalsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

test_asan_bitfield_unround_sizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_asan_heap_buffer_overflowemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_asan_memset_freedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bogo_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functionpalindrome(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

p62emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

matrix3x3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_memsetemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

36750emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

test_octalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13434emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input125emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_tsearchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #6']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #7']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 8']

43630emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

array10numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

factorialemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

precedenceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

array_queueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

multi_nestingemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

chargenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

odd-onesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_if_elseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

get_put_charemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

change_valueOfConstantemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

22emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

whirltestemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

roundrobin_linkedListemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

2001emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

MakeConcreteSymbolicemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_strtodemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13277emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

ler_escrever_formatadoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43637emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionaverage(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

9_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

main_argsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43617emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

word_lengthemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_floatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

copyfileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

unop_addemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

exploit_me_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

audiomatchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

functionreverse(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

bad-sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

comparaabemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_gmtimeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_i64_4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_float32_preciseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

check_syntaxemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

mkorigensplemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_sscanf_6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43702emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

zigzag_conversionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ReallocFailureemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0016-string1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43608emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_vprintfemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_printf_moreemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

merge_listsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

19emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 10']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 10']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

test_zero_multiplicationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

points_on_lineemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

inca-swap-bytesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

bst_lcaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_assert_failureemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

__cc_has_mno_sse2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43536emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

mysteryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13472emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

hashingemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

expression_argsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_browser_language_detectionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_asan_memchremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

gen_init_cpioemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 8']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

stdin1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

36359emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_i64_preciseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

07emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43773emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

huffman_encodingemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input145emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-fibonacciemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

AESemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

gen_alu_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13631emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

44738emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

49472emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

input83emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_allocaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

check_openpf2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

test_sintvarsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_globaldoublesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

decimal_to_octal_recursionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

doubly_linked_listemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

middle_element_in_listemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

upperemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

funkyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

16_unaliemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

h_have_puffsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

list_cycleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

shaker_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0028-inits12emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

18emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test-strptimeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

quote_calc3-semcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

majorityemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

fractionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0024-enums1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

factorailemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

sparse_matrix_additionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

45541emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

copy_fileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 4']

size_ofemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0022-namespaces1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

clasificacionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

averagealtemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0013-struct1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fibonacci_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

compcov_targetemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

quote_calc3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

binary_tree_buildemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

switchprob2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

variables_globalesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input136emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

exercise6_9emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

addchainemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

46907emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

13331emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

17559emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

atomic_64_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionnum50emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

39emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

rail_fenceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

p77emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

rotate_listemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

14142emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

divisionarrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

s-pltargemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

subthreadcreateemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_asan_bitfield_roundemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

exercise4_1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_asan_null_derefemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_sscanf_floatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

fontdumpemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

dowhile50emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test08emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

18885emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

plus_oneemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hdfmtemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

scanf2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

p68emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

good-echoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

strndup_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input070emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

invert_binary_treeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bar1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

example5_3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

cocktail_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

09emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43550emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

select_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_lto_atexitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

6195emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

input140emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_frexpemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0009-breakcont1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

palindrome_partitionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

list_udgemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

type_defemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

foo1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

50748emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

19aemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

input117emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

timecheck2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

test-getsuboptemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

cjk_tab_to_hemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  class #5']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 38']
['    count (how often class appears)', ' 26']
['  total classes', ' 6']

gauss_eliminationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

stabilizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p82emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input090emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

largest_numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

roman_to_integeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

rename_function_paramemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43555emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

for_nested_scopeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

multiple_ternaryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionadd1(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

unique_bstemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0028-inits13emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

02aemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

21476emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

2880emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

test_flexarray_structemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input91emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

auto_epsgemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 7']

anyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

dump_pktfileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

pelt_halflife_increaseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

simple_reademcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

function_call_with_bufferemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

constants-egemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bench-syscallemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

infix_to_postfix2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

infix_to_postfixemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_funcptremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #6']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 7']

peakemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input106emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

multi_argemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

s-sleepemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

centrino-decodeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_vsnprintfemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

genintemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

47296emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

0028-inits04emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

binarytreeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

14332emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

to_decimalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input083emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

dowhile2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

34592emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

bitwise_zeroemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_lsan_no_leakemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test-redirectemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

le_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

window_substringemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

50749emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_asan_use_after_returnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_wcslenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_stack_varargsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43691emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

pure_calcemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

print50emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bst_postorderemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

binary_insertion_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0015-calls01emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

18294emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

forward_declemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

promedioemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functionaverageemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

43753emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

minimumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionsubtract(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

input075emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

5951emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

example5_6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43649emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

recursive_bubble_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

longoptemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

char_first_appear_onceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bin2cemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

ejemplo_funcionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

exercise1_3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_pthread_abortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

ternary_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p70emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

menu3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

41969emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

troca_mainemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

armstrongemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functionreverse1(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

ackermannemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functiondivision3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

apinamesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 7']

13479emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

envtimeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

longest_substring_without_repeatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

strings_memoryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input70emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

04_05emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

recursive_factorialemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

Read1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sub_negemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

Finding_sizeof_Datatypeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

selection_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

pnmtologoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

pointer_&_arraysemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

Equilateralemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

src-miniemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

tictactoeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

13299emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

not_zeroemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43697emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

add_binaryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

compara_ifemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

39160emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

nqueensemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

Add_two_matricesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

rotated_arrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

comando_whileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43679emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

0007-dowhile1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

Floatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

edit_distanceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

symlink_readlinkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

associativityemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

matrix_udgemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

tipos_primitivosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

subtractarrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

functionarmstrong(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

sort_arrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_asan_strcpyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fourthemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43640emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

max_gapemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_i64_varargsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

consecutive_blocksemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_sscanf_4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

matrizesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

cexampleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functiondivide1(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

substitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

StackImplementationUsingSingSingleLinkeListemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

bsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

19bemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

memory5aemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43744emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

candyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

kth_bstemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

spctlemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

if5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_i64_zextnegemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13550emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

1-largestemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

if_nested_5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

1554emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

calc_code_providesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

thirdemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_memcpy3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input146emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

xway-swap-bytesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

43698emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

consecutive_declarationsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

ccheckemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

matrix_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

for5_1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

operadores_aritmeticosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionevenodd1(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

LFSRemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

08emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

interpolation_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

disksizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

14122emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

KrishnamurthyNumberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input137emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

calc_code_importsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input153emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

q_rotateemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

max_subarrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionproduct3(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

primemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

1490emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

simple_writeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

file2includeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 7']

s-exp-floatemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

example5_1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_mod_globalstructemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bss_dataemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

48emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

check_openpf5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

13400emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_bsearchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

47352emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

binary_search_iterativeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

Stackemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13397emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input049emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_bigarrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

kth_elememcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bufdemoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

0015-calls03emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

same_treeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

vwebp_sdlemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

nomear_um_tipoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

14795emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

39203emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

rh_assignmentemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

singlepassemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0017-incdec1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

do_whileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13473emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

43689emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

0013-struct3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

maximal_rectangleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

calc3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

s-argemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_ubsan_minimal_errors_same_placeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

12578emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

nested_opsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

for_cont_decrementoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

47290emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

askemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_globalsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

palindrome_pyramid_patternemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

sum_treeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_i64_7zemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

61emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

uaddcheckemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

vtoykmodemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

one_appear_count_by_binaryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13396emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0001-define3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

s-returnemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

situacao_protemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

caesar_cipheremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

36397emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

17545emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

words_alphabeticalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

pyramid_alphabetemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

elseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

parse_manemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

38088emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

size_intemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

todemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

wildcard_matchingemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

36393emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

exponential_searchemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

aifc_decodeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

for6emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionfibonacci(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13383emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43696emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input84emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

4052emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test-strndupemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

addnoteemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

c17emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

win-testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43549emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

8767emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

atomicopsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

recover_bstemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionadd2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_strtol_octemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

three_sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

laco_infinitoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

LinerSearchAlgoemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

return-failemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

diskscheduleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

while2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input131emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

consec_seqemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

delete_occurence_characteremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

function_pointersemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

distinct_subseqemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_strtokemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p59emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

roman_numeralemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

referemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

p36emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

isomorphic_stringsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

continue_empty_postemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

patch_elf_32bitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

2861emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

input051emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_negative_zeroemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

forward_decl_multi_argemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_memmoveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

fibonacciv2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

20emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

read_file_twiceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

bfsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test_strtoldemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input99emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input133emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

p55emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

for_variable_shadowemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bubble_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

multi_digitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

mini_sizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

trasheremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

lerpemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

list_dgemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

sol1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

corrupt_rdbemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

input88emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

c3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

realtime_statsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test-getlineemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 4']

preopen_populatesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

1470emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

2073emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

functionsum100(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

gray_codeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input75emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

p71emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43599emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

38emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

hexadecimal_to_octalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

divide-power2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

48_bubble_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sumoddemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43655emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

andemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input084emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

gt_falseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

c-digraphsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

s-sleep2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

d_cvt_constantemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

memory5bemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

336emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

43483emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

c10emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

27emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

765emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

SelectionSortingemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

nested_ops_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_sscanf_nemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_math_hyperbolicemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionproduct3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

nbtestemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 3']

test_i64_precise_unneededemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

generate_imageemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

example5_16emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

functionadd1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

2204emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

AsmAddressesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0018-funcptr1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

test_asan_stack_buffer_overflowemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_asan_strncpyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

wordsizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

leftmost-oneemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

apuntador_arregloemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input088emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

simple-shellemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

0001-define1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43606emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

43688emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

follow_symlinkemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

input49emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

lt_falseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

sjfemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

functionisLargest3(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

functionquadraticemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0012-pointers2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input144emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ckconfigemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

mktablesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

rock-scissors-paperemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

symmetric_treeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input091emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input152emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

countsortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

entre10e20emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

dijkstras_algorithememcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

2037emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

DumpStatesOnHaltemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

DMAemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

41_Nikhil_Babu-16emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

err_syntax12emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

memory3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_safe_stackemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

41_Nikhil_Babu-28emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

TRANSPOSE_0FMATRIXemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

quote_calc-semcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13390emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

countdigitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

reverse_integeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

QueueUsingLLemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

11-cppemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

tiny_ssimemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 5']

continue_desvioemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

break_interrompeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input115emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_asan_memset_nullemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionevenodd(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

comentariosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

guessTheNumberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

ne_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_phiundefemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_double_i64_conversionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43541emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

input071emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_mathfuncptremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [f32] -> [f32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

0021emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43757emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

5584emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

string_to_integeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

memory2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

media_paramemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

26emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

0008emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

cycle_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

pascal_triangleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

15063emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

binary_to_hexadecimalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input90emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

whileseriesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

reversewhileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

d_c99_anon_structemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

sysconf_phys_pagesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sync_64_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

gen-devlistemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

41089emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_stack_placementemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

matmul_cemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13369emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

dtemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

word_dictemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lcm_hcfemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

pancake_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

c8emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_bitfieldsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

return-passemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

lu_decomposeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

troca_refemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_array2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input111emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_fwrite_0emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

n_queensemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_printf_macrosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

union2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

container_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

fast_poweremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

divideemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_minmaxemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

menu1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

sync_32_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

media_param2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_strstremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lfu-simulationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

median_of_two_sorted_arrayemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

sudokuemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

10646emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

yearemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

insert_intervalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

lt_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13432emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

TowerOfHanoiemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

not_fiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input112emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13391emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

div_negemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

justificationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

comparacion_dosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

cmaskemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

integer_to_binemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test-extraeremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

47041emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

firstfollemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

t001emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_sscanf_whitespaceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

2815emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

comparacionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

eg-disemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fpinemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

s-dataemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

74emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

4087emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_loopemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

23emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

LinerSearchAlgo(Binary)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

05emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

Shell_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_strtol_hexemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

39700emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

nbodies_cemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionadd3(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

doublelevelemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

extract_data_for_mioemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 7']

bprintemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #6']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 7']

fun_shadowed_by_variableemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

or_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

dowhileemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

safe_heap_2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_setenv_leakemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

dotprodemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0023-incomplete1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_sscanf_other_whitespaceemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

4584emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 6']

path_sumemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lcm_of_two_numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

29160emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

recursive_selection_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

first&lastdigitemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

robberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

47292emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

1135emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

44517emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

check_openpf1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

43703emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test-isblankemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

37384emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

wildtestemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

quadratic-eq-solveremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

input149emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

41_Nikhil_Babu-30emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

42emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

13551emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

0017emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

random_quick_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

doubleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

merge_sort_nremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

sombraemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionreverseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

functionsubtract2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

13688emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

single_argemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43641emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

36857emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

s-dwarf5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 3']
['  total classes', ' 3']

copy_systememcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

c7emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

semanaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functionnum50(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

calc_code_defaultemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

clone_graphemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

check_moneyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

valid_bstemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

happy_numberemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

p64emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

um_programaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input123emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input76emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

44811emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

enoughemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

p75emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionarmstrongemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0005emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

1128emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

array_testemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

vswprintf_utf8emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

test_memmove2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

18227emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

TEAemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13466emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

fentryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

quote_calc2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

pbmsrch_largeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

rselectemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

test_varargsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

comando_ifemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

wasmfs_fdatasyncemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test07emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

saturating-addemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43769emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

functionhcflcmemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

test-multiple-mutatorsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

pure_erroremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

__clock_without_librtemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

decimal_to_hexaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functionprimeinrangeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

input74emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

squeezeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

reverse_listemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

memory4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

45144emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

example6_14emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

flattenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

47042emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

rmkdiremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

0018emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0014-array1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

srl-sraemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

precedenciaemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lisemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-exp-mixedemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

decimal_to_octalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

43765emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

8bit_tab_to_hemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

substituiremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

0004-operators2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

common_prefixemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bst_inorder_traversalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

octal_to_binaryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functionpalindromeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

45943emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

2008-05-23-gep-with-global-constemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

4-1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

multiple_globalemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

switch_exampleemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

missing_positiveemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_varargs_multiemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_sscanf_3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

munchconfigemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

test_stack_voidemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

d_cvt_in_ternaryemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

check_stat3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

access_file_after_heap_resizeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

6039emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

climb_stairsemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

test_erfemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

46007emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

Radix_Sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ray3emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 6']

decimal_to_any_baseemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

41128emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13500emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

s-unrollemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input108emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

locale_monthnamesemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

functionquadratic(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

postfix_evaluationemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-exp-intemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

50750emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_asan_no_erroremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

13719emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0013-struct5emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

46emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

dijkstra_largeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 5']

15emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 5']

Question-1emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

c11-2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43603emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

RC4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

input151emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-allocfreeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

2460emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

0028-inits08emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

merge_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

lu_decompositionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

FD_Failemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 6']

29emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

functiondivisionemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

erroremcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

1-dead_codeemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43639emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_strptime_daysemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

s-helloemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

ge_trueemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

1944emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 4']

fftr4emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

gc_cemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

36779emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 2']

zcemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 6']

notas_alunosemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

gen_test_charemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

43489emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

49_bubble_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

37359emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

d_c99_decls_after_stmt2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13337emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0015-calls02emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

Factorialemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 5']

1633emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 4']

functioncount(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

39731emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

test_libgenemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

hash_crc32emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

bucket_sortemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

stride_ddemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 5']

test_i64_cmp2emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

nested_ifemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionfact(1)emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

Isattyemcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 5']

36395emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, f64, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 6']

35868emcc-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 3']

estruturaswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

getLinewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

quote_calcwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

char_first_appear_oncewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

simpsons_1_3rd_rulewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test-fgetlnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

divconstwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

u_boot_binman_embedwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

clocks_get_m_nwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

feature_testswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_memchrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

constanteswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

39337wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0001-define3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

valid_parentheseswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

string_to_integerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functioncount(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

while_multi_statementwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39336wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

copyfilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

28474wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

13389wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43505wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

compcov_targetwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13393wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2460wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

fsync_stdoutwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43648wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

longest_continuious_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

invert_binary_treewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

elf_sectionswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input80wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

diningphilosopherwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

matrix3x3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-autoargswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

test07wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

long_doublewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

safe_heap_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-allocfreewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nested_ifwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

45943wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

bintreewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

bubble_sort_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

function50even(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_asan_memcpywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

memory1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

stride_ddwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

memory3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sysconf_phys_pageswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

simple-shellwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

zigzag_conversionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

36397wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

LFSRwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0004wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43753wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

43598wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

13331wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

locale_monthnameswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functiondivision3(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

0028-inits03wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39625wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

390wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

errorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

leftmost-onewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_i64_precise_neededwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

addnotewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionevenoddwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

show-bytes-morewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

KrishnamurthyNumberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

array_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-datawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0021wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fpointerswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

if_nested_4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

median_of_two_sorted_arraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

37069wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

divide-power2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p61wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13385wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0016-string1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

DESwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

CMakeCCompilerIdwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sparse-matrix-multiplicationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

expression_argswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

exercise6_9wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sumoddwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0012-pointers1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

elsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

audiomatchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

test_asan_bitfield_unround_sizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

for_contwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

42647wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

38194wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

cantor_setwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

mini_sizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gc_cwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

check_time1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

rh_assignmentwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

foo2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2860wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

44811wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

bprintwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 14']
['  total classes', ' 5']

test_fwrite_0wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

43655wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

inplace-swapwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

victimwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionproduct3(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

troca_refwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43654wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

stringifywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

poly_addwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

while2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

example9_1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13400wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

44594wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

47183wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

countsortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Equilateralwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

8767wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

spirographwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

bst_lcawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

no_argwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-strlcatwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nota7wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

2821wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

markswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_globalswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

assign_valwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

firstfollwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

hash_djb2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ternary_short_circuit_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

productdigitswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_octalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

four_sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

sheet_columnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input097wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits12wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

36779wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

majoritywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_tsearchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 5']

test_stack_voidwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

46103wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

lexicographic_permutationswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

p72wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_mod_globalstructwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

36780wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0028-inits09wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

genincwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

whileserieswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

36750wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

29wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

lt_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-17wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

6195wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

decimal_to_octal_recursionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionisLargest3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

vr-coefswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

for_declwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input131wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

rotated_arraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

formfeedwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

comparacionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p92wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

dsmemberutilwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

__mtag_tag_zero_regionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits05wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

36276wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

multiple_varswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

octal_to_hexadecimalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

stringlengthwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

18wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

size_intwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-unrollwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 6']
['  total classes', ' 2']

LinerSearchAlgo(Binary)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

36857wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

longest_palindromic_substringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

k_means_clusteringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Shell_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

or_falsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input139wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

maximal_squarewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

efencewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

1128wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

13276wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

copy_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionprimewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

swappedfirst&lastwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

hello_world_fopenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

check_openpf2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

FreeBSD_versionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

follow_symlinkwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

test_strtoll_decwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

merge_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input088wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

vtoykmodwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

percentagewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

6121wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

copy-intwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

valid_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_phiundefwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_container_ofwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input080wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

3342wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

select_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

check_moneywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_newlocalewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Sum_Diagnolswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

Floatwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input051wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

37359wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

memory5bwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input074wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

lcm_of_two_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

mkshelllinkwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

49_bubble_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

operador_atribuicaowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

decimal_to_any_basewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

dijkstra_largewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 2']

41089wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

9_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43686wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-custom-mutatorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

memory2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

size_ofwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

lu_decompositionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

scramble_stringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fits-bitswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

apuntador_arreglo2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

reverse_integerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_strndupwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

seriessumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

timecheck2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

14142wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

t001wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sintaxe_basicawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43757wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

400wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

test_trickystringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

04_05wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_memmove3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

test_funcswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input107wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

46302wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test_strptime_tmwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionquadratic(2)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

preopen_populateswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Dijkstrawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functioncountwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

37wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

34592wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

is-little-endianwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

skip_on_failure_multi_short_circuitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

to_decimalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

1944wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

exploit_me_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0026-sizeof1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

insertion_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

bucket_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p68wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0003-locals1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

or_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p57wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0002-global1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rpnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

x_power_ywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

watchdog-simplewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

17439wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

example5_4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43684wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_erfwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

todwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

11-cppwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

reverse_nodeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13688wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

switch_examplewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

rabin_karp_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_perrarwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

tminwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0006-while1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

circular_queuewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

cartesian_to_polarwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

lcm_hcfwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

43617wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

interleaving_stringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

18154wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

coin_changewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

genwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

45541wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

russian_dollwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

36391wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

imv2txtwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

43641wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

49472wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

quote_calc3-swasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

whilenotawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionfibonacciwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

336wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

s-dwarf5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  total classes', ' 2']

not_zerowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input70wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionaverage1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

input089wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

guessTheNumberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input140wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input111wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fileHandlingSimplewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

insert_positionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

enterowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

for_nested_scopewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

61wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bufdemowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

binary_to_hexadecimalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

if_nested_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

05wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13369wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_write_stdout_filenowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39731wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

function_recursivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

c-digraphswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

comando_breakwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

dowhile2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

49wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

countdigitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

39794wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

nqueenswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

kadanes_algorithmwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13479wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

34667wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-compcovwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gauss_seidel_methodwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

ageifwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

2404wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

first&lastdigitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

s-hellowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionevenodd1(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input145wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

mkconfigwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

gen_asciiwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

null_operationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

variaveiswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

9-evalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test-redirectwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

locale_ASCIIwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_getopt_longwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

example5_3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13370wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fourthwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

binary_to_octalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

3349wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

test-repBitswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

02cwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

palindrome_partitionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

diskschedulewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

43744wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

reversewhilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

infix_to_postfixwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

LinerSearchAlgowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_zero_multiplicationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_asan_static_buffer_overflowwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

calc_vmlinuz_load_addrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

11wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

21476wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example5_6wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_ifwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_gmtimewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

largestthreewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0011-switch1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_sscanf_nwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

rotate-leftwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

LongDoubleSupportwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input84wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Calculatorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

cjk_variantswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

kth_bstwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

nested_opswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rotate_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43690wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

18226wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

c18wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input40wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sparse_matrix_additionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_strtoll_hexwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

print_continuous_sequence_sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionreverse1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

Insertion_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test-strlcpywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

menu2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

c19wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_ubsan_full_overflowwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionisLargest3(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

addchainwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

variables_localeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

trocawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

48_bubble_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionevenodd1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

funbasicwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_array2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

doubly_linked_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

err_syntax12wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

hello_123wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits08wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nested_loopwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bst_depthwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_structswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

wasmfs_fdatasyncwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_memcpy_memcmpwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

associativity_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gnome_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

1-largestwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

generate_imagewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

p67wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

showjournalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

islandswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input106wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

8bit_tab_to_hwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

odd-oneswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

access_file_after_heap_resizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

hex2hexwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

antwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

IndirectCallToBuiltinwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

39684wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

div_negwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

GOST_28147wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

selection_sort_recursivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

multiple_ternarywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43765wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

primeinrangewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

symboltablehashwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

input136wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

47239wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

rechowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input100wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

operador_ternariowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

44609wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

13390wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

adaline_learningwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

matrix_dgwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

09wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

precedence_3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

obfstrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

array10numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

quadratic-eq-solverwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

array_traversalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43649wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

39204wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

fun_in_exprwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

longoptwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

47wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

dowhile50wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

47041wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0002wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

for2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

reverse_bitswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

46499wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test_asan_memset_freedwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

checkcodewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

fread_floatwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 2']

fractionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

factorialwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

44334wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

0029-ptrarith2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

truncate_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

42977wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13719wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

funperfectwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

swap_2_numberswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

countwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

3-commawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sort_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

47043wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_bitfield_roundwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

jump_gamewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13396wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example5_1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

__cc_has_mno_sse2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_browser_language_detectionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

43555wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

0004-operators3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

codesignwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanf_skipwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

43696wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

area_triangulowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

Ncrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

binary_insertion_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

6-orwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

2873wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

quote_calc2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

shell_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tiny_ssimwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 15']
['  total classes', ' 2']

stacksizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 9']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

softwareupdatewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

left_shiftwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

calcwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input091wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0001-define2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionprime(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

minimumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

break_interrompewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

quartilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

check_stat1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

28996wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

menor_deleswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0015-calls04wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43698wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

corrupt_rdbwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

pbmsrch_largewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_strcasecmpwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0005wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

quenenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionsubtract3(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_literal_negative_zerowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13299wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

50749wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

45426wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

38wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0008-for1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

c5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input49wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

1239wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

p70wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

locale_codesetwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

situacao_protwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

floatconstwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

nested_scopewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input130wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

linearledwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

3441wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input115wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

max_heapwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gen-devlistwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

single_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

9303wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

bst_bfswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

check_openpf4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

43638wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2001wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

__mtag_tag_regionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

regular_expressionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

transitive_closurewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

while_single_statementwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-float-libcallwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

skip_on_failure_short_circuit_andwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

packccwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

43719wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

operadores_relacionaiswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13500wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

absoluteloaderwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

4052wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

43703wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

audiogenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

dump_pktfilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

input51wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-strptimewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 6']
['  total classes', ' 2']

test-rewb-sysvwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 1']

union2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

__clock_without_librtwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

copy_blockwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

words_alphabeticalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

rotate_arraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13441wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

atomic_32_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

return-failwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

switchvwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43691wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input110wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43605wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bst_zigzagwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

return_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

17432wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

clasificacionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

genintwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

36395wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

exit1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

precedence_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

deptoolwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

single_argwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tmultcheckwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43639wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bogo_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

45287wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

duplicated-nameswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

multi_nestingwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-exp-intwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

symlink_loopwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_complexwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

operacionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0006wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

menor_deles_respostawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

any-odd-onewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

checksummerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

14795wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13471wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

semanawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

print_groupwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i64, i64, i64] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

input119wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fibonacci1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionaveragewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

realtime_statswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input144wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

vwebp_sdlwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

d_c99_decls_after_stmt2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

notas_alunoswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0028-inits13wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2073wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

u_boot_binman_embed_smwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

binarytreeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

uaddcheckwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

switchprob2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input75wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

troca_mainwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

2880wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

test_mathfuncptrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [f32] -> [f32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

functionsubtract3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

is_palindromewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionisLargest(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

posnegativewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

spaceswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

disksizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

roman_to_integerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

spec2defwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 16']
['  total classes', ' 4']

functionproduct1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

wordsizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanf_6wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

bowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

factorswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

hexadecimal_to_octalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

DumpStatesOnHaltwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

type_defwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bst_max_pathwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

word_dictwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test-vasprintfwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-dynamicwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

subarraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

clone_graphwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43773wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_frexpwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

23wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sync_64_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

04#U6590#U6ce2#U90a3#U5951#U51fd#U6570_Fibonacciwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

valid_sudokuwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanf_3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

stdin_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

binary_tree_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13298wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

bufbombwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

12578wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

43542wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

divisionarraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

exploit_me_1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

replace-bytewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_flexarray_structwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input137wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionadd1(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

bench-syscallwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gyp_dummywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43890wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

0-mainwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

c11wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

squeezewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13609wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

equacao2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input071wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

funperfect2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_strtol_binwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

printevenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionsubtract1(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

bst_convertwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

kruskalswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

test-PATH_MAXwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functiondivide1(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

happy_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

02awasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionsubtract1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

fibonacci_dpwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

s-argwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

vswprintf_utf8wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

16wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

path_sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13431wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

floyd_warshallwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

btfixupprepwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_asan_no_errorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

function_paramwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

39519wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

whilevenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

file2includewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 16']
['  total classes', ' 4']

functionseriessumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

matrix_chain_multiplication1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

declare_latewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

calc_code_importswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

insert_sort_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

intersectionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_strtol_octwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

39617wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

escopowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

floyd_warshall_algorithmwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

ler_escrever_formatadowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functiondivisionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_strtolwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

18294wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

memory4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

pancake_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

matrix_udgwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

three_sum_closestwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

2204wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

check_stat3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

28225wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

factorailwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

bad-sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

gen_test_charwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bfswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_negative_zerowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

SparseMatrix_Or_notwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

pelt_halflife_decreasewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

0028-inits06wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

scanf2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

reversenaturalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_loopwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

consec_seqwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

retorno_procwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

matmul_cwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2824wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

e_square_x_programwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanf_other_whitespacewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_memfs_fsyncwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

17194wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p84wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

for4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test-attributewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

src-miniwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

calc_code_provideswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13631wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

partition_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

apinameswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

quicksortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

checkSpacingwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

word_breakwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gen_init_cpiowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 7']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

function_valorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test-extraer2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

insertion-sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_double_i64_conversionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43549wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

eval_rpnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_time_cwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

kth_elemwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

9142wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

other_binary_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input152wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

recursion-formswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 7']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

calc_code_requireswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

uniq-uwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

inca-swap-byteswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

47292wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

munchconfigwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

tic_tac_toewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

recursive_selection_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input123wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

int_to_stringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input076wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_autodebugwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-getsuboptwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

swap_number_without_using_3rd_variablewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

um_programawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13472wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

39338wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

float-lewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

enoughwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

multiply_stringswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

embed_datawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

zcwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

0028-inits02wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

reorder_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0017wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

dotprodwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13387wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

48wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

mksmdkv310splwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

cmplogwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

three_sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

input150wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43774wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

make_a_change_problemwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_safe_stack_allocawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

17940wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

hamming_codewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

printcharswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

main_argswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

declare_blockwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

37362wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

permutationswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

add_binarywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

39624wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0-1-knapsackwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43697wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

pelt_halflife_increasewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

hdfmtwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

balanced_bstwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

concatenationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

literaiswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

table2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

recover_bstwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input039wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

caesar_cipherwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_i64_umulwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_getoptwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

container_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

p64wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

exercise4_4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

tempfunwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

declare_after_blockwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_libgenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

38088wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

FD_Failwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

word_lengthwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

shortest_palindromewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

rm_dupwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

comando_continuewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

good-echowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13476wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functiondivide2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

ray3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

46wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

ary_beginwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

c7wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

calc3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

41477wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

44517wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

forward_decl_multi_argwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0022-namespaces1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

exercise5_5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionprimeinrangewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

perfectwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

s-returnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43769wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

spctlwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

__cc_has_mfentrywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionnum50(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

fast_binwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

putvarwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

mandelbrotwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

ascwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Add_two_matriceswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

nested_whilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

strlongerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

36394wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

13570wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

mpc86x_clkwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

for3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_strtol_hexwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

sumof_naturalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

next_permutationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43483wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

functionarmstrongwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

bt1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rm_dupswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ramawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ifelsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13391wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

max_gapwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

47291wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p96wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

skip_on_failure_short_circuit_orwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_if_elsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

greatest_common_divisorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

merge_intervalswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

threeforthswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_i64wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input153wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

smallz4catwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  class #5']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 26']
['  total classes', ' 6']

functionfreqwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_alloca_stackwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fpwr2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

45458wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

c15wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_llrintwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

TRANSPOSE_0FMATRIXwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

39847wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gt_falsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gray_codewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input146wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

if_nested_3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

roundrobin_linkedListwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

fatorial2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

stooge_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

p62wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

segment_treewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

6wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Read1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p36wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

q_rotatewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

28wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

unique_pathwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

41_Nikhil_Babu-16wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

lt_falsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tower_of_hanoiwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

rail_fencewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

3851wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

13394wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ler_escrever_caracterwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

0013-struct2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

function50evenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

13630wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

29160wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

exercise1_3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

for6wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

return-passwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bitwise_zerowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i64_varargswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

6039wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

permutation_sequencewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

example_c_filewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

retorno_funcwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

interpolation_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_ctypewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 14']
['    count (how often class appears)', ' 7']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

negwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nested_ops_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i32_mul_precisewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionsubtract2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

check_stat2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

46907wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

exitcode_explicitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-pltargwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

doublelevelwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

dijkstras_algorithemwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0028-inits14wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sum_treewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

24wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13397wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

chargenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_errarwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

45290wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

QueueUsingLLwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

BubbleSortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

hashingwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

if5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

showenvwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionaverage(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

44620wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

15wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 2']

promediowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionsubtract2(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

matrizeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

csvOutputwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

hash_crc32wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionposneg(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

10936wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

spewGwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionaddwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

peakwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gif2webpwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43604wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

comando_forwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sort_colorswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

multiple_globalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionnum50wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

funkywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

arithchkwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ArrayADTwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

4584wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

count_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input77wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input82wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input083wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

missing_returnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ge_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

count_and_saywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functiondivide1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

quote_calc4-swasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_asan_use_after_returnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

unsigned-high-prodwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input132wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39160wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

sentinel_linear_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

21wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

delete_occurence_characterwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

46493wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test_bigarraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

44990wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

0019-condexpr1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

postfix_evaluationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

saturating-addwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_stack_varargswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

c12wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ackermannwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

no_newlineswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

40808wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

print_matrixwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

2815wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

08wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

hdresizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 15']
['  total classes', ' 3']

13465wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

factorizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input040wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

decimal_to_hexawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

zechowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

swap_nodeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

4-1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43764wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

heap_sort_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test-getlinewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

functiondivision(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

simple_writewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

copy_filewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

bst_postorderwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0020wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-30wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

ExternalWeakLinkagewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

one_appear_count_by_binarywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

offset_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

le_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

xway-swap-byteswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

TEAwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input154wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

8-evalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0008wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

c11-2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

40128wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

43530wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

43433wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

39203wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43689wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

d_cvt_constantwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

abs-cmovwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input151wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

struct_anidadoV2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 2']

bellman_fordwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

rselectwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

45329wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

43552wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

show-byteswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

mfrom_table_genwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

3888wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

inv_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

unformattedwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_atexitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 4']

factgenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

lfu-simulationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Pointerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

foldrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [f64, f64] -> [f64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

50750wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

DMAwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

02wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p71wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

troca_globwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

zeroeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43506wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0001-define1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

dtwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

calc_code_allwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_langinfowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

letter_combinationswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

c1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bool2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionadd(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

int-shifts-are-arithemeticwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

46275wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

13368wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

missing_positivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_ubsan_minimal_errors_same_placewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

candywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

strndup_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43599wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

sjfwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

menorq20wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_mainenvwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

justificationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

anagramswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

0015-calls03wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

anagrams_in_stringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

getcharbugwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

test_asan_stack_buffer_overflowwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0025-duffwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

mkkeywordhashwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

43630wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

binary_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Finding_sizeof_Datatypewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-structwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

data_sizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

tonewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

saferp_optimizerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0013-struct1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bst_preorderwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

mul3div4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

defines3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

quote_calc4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

43688wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13398wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fatorialwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

file_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

multi_argwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input143wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

anywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-allocawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

decimal_to_binary_recursionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

so1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

RC4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0010-goto1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_stdint_limitswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

media_globaiswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

45wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

input030wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_emptyPathwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

for_emptywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gentranslitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

0004-operators1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ejemplo_funcionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

0004-operators4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

thirdwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

array_queuewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

benchfloatwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

Question-6wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 2']

p55wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

c13-2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

apuntador_arreglowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

8540wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

assert-failwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

unop_addwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hosttypewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input116wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionproduct1(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

PrgNamewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input082wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

menu3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input084wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ne_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

int-size-is-32wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

8wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

simple_targetwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionproduct2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

46519wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

good_aoutwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

whirltestwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

Powerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

nested_breakwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

compara_ifwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

38116wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

minimum_path_sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input114wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

spiral_matrixwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test-nanosleepwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

rect_in_histogramwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

AsmAddresseswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

dowhilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

lagrange_theoremwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test-strsepwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

not_fivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fentrywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input090wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_strptime_dayswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13549wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

trap_waterwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

persistent_targetwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

list_dgwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

0017-incdec1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i64_precise_unneededwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Radix_Sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

roman_numeralwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_stack_placementwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

cleararraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p66wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

operadores_aritmeticoswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-variadicwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13335wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

mysterywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

calloc2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

consecutive_declarationswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

pure_errorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sudokuwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

2094wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

0015wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits15wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

conversao_de_tiposwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

can_bus_sendwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

frequency_of_characterwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input099wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43536wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

max_subarraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input149wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43608wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

47042wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

comando_whilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

1-dead_codewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

d_alignofwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

InsertionSortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test-multiple-mutatorswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nomear_um_tipowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_i64_qdoublewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_array2bwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input128wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

return_in_whilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

strings_memorywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

struct_unionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

44wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

newton_raphson_rootwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sumvecwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits07wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionadd2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

10646wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

copy_stdiowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

doublewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

43553wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

Inversion_Countwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

unstablewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

cread-altwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

4087wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

m7makecharswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

strindexwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

dfs_bfswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

averagealtwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

fileHandlingwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

wasmfs_open_appendwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

example4_4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0004-operators2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

foo1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

function_pointerswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

c3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

atomic_64_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

c8wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

vowelwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_pthread_abortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_printf_morewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

IndirectCallToExternalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

0027-structcopywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hppwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

lifewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input34wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p56wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

slide_windowwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input075wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hello_world_loop_mallocwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43507wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_va_copywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

37716wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 17']
['  total classes', ' 4']

cycle_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

dijkstrawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionquadratic(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

change_valueOfConstantwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

hash_xor8wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

same_treewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

rmkdirwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input049wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39869wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functiondivide2(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

13432wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_sscanf_capswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

nested_ternarywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

array_stackwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

centrino-decodewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

9595wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

while50wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

primwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

c9wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

multikey_quick_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

45529wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

askqwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionsubtract(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

FunctionPointerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

36858wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

14691wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Age_in_Days_Months_Yearwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

multi_digitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p97wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

for_variable_shadowwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13399wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

StackUsingLinkedListwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_memsetwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0012-pointers2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

lemonwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [f64] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #5']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #6']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 14']
['  class #7']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 17']
['  total classes', ' 8']

2861wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

symmetric_treewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

1633wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

url-parserwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

14334wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_memcpy3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionreversewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_strtoll_octwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

quote_calc3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

7-precedencewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fftr4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

word_ladderwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

asignacion_stringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

rand_r_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-29wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

input118wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_stdlibswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  class #4']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 5']

genaliases2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

input134wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

3893wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

check_openpf3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

calc_code_topwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

huffman_encodingwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13383wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sol1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

later_declwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

singlelevelwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

naval_battlewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

odd_even_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

boolewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

test_getgepwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_strtol_decwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

media_procwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

closebitcastswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

atomicopswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

btyacc_calc1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_float32_precisewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

pnmtologowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

43551wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test-instrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

defines1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

check_time2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sizeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sign-extendwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

malloctestwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionreverse1(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

43489wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

input108wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

19310wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

mk251wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 5']
['  total classes', ' 2']

test_memmovewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

demonetizationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

2nd_SmallestElementwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

replce_blankwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

2753wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

reversenumberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

gt_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

45119wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

forward_declarationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

isomorphic_stringswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanfwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

pure_calcwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

list_cyclewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

mkbbwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13386wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p63wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

reverse_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

46524wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

sumofldfdwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

shellsortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bankerswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

media_param2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

differencewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

quote_calc2-swasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

infix_to_postfix2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input89wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

8411wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test_strtoll_binwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

change_casewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

ifelseLadderwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

srl-srawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-exitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

apuntadorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43653wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0028-inits01wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

substituirwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13430wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

window_substringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

stdin1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

if_not_takenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

34262wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bin2hexwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

random_quick_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

json_table_generatorwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0023-incomplete1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ccheckwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

p90wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

and_falsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

m2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

middle_element_in_listwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

dias_segwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

recursive_factorialwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

whirlgenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-exp-charwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_setenv_leakwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

simple_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input070wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

producerconsumerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

exploit_me_3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input91wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

41969wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

variables_globaleswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

insertion_sort_recursivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

find_leap_yearwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

c6wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

5-orwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43541wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test_math_hyperbolicwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0005-if1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

7wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

d_cvt_in_ternarywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

function_referenciawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_funcptrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

input147wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0013-struct4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-isblankwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

14332wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-extraerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionisLargestwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

host_byte_orderwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionaverage1(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

p80wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_asan_bitfield_unround_offsetwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

pointer_&_arrayswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

cjk_tab_to_hwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  class #2']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 37']
['    count (how often class appears)', ' 26']
['  total classes', ' 3']

41_Nikhil_Babu-22wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

fpoutwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

trasherwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

pascal_trianglewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionposnegwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

ternary_short_circuitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

palindrome_pyramid_patternwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

catalanwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

armstrong_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

41_Nikhil_Babu-21wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

2008-05-23-gep-with-global-constwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_strtoldwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gas_stationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

unique_bstwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanf_whitespacewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionfibonacci(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

TowerOfHanoiwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

cocktail_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

18885wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

check_mapbrkwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0029-ptrarith1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_selectwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

1238wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

armstrongwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

9-pointerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i64_zextnegwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

36274wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

longest_substring_without_repeatwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionquadraticwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

radix_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

check_openpf1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

threaded_binary_treeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

1490wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

19awasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

prime_factoriziationwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

additionarraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

lock1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

octal_to_decimalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

castingwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

operadores_racionaleswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13382wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

check_openpf5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0028-inits04wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

exercise4_1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13388wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

divisionaltwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

vulnwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_strcmp_uniwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

337wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

functionprimeinrange(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

functionproduct2(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

modificadores_de_tiposwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

c_atoi_str_to_integerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

largest_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

powernow-k8-decodewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

autoassemblewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

roundrobinwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

45495wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

for5_1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

37358wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

write_filewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

927wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

exponential_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

15202wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

empty_expressionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41467wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

combination_sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

4998wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

test_i64_4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ckconfigwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

eq_falsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

h_have_puffswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0014-array1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input133wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

ejemplo_funcioneswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

18227wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

prime_seivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

chessboardwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_lto_atexitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

bswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

least_common_multiplewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

hexadecimal_to_octal2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13337wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input76wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

loopswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

valid_bstwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

maximal_rectanglewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fibonacci_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

merge_listswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

menu1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_conststructswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bead_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_i64_precisewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input077wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

parse_manwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

45308wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

comando_switchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

mutual_recursive_functionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input99wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

1554wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

__cc_has_minline_all_stringopswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

read_file_twicewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

libc_linkwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

copy_systemwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

checkerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-noopwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

primenumberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

8783wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

comparaabwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_hello_argcwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sol2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

eq_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

46256wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

Activity_Selection_Greedy_Approachwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

p69wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13473wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

ReadArgswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

mkorigensplwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

merge_sort_nrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionproduct3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

t_fmemopenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 17']
['  total classes', ' 4']

matrix_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bst_rightwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_asan_strncpywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_minmaxwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

s-exp-strwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

5584wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

05_06wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

table10numwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

exp_return_valwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13499wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

combinationswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

structv2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 2']

rename_function_paramwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

generate_first_followwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0021-tentativedefs1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

auto_epsgwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

43770wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

input71wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

modified_binary_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

pigeonhole_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

media_sem_procwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

7330wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

revert_by_wordwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ge_falsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

calc_code_defaultwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

42wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

armstronginrangewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

Factorialwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

boyer_moore_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

yearwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

points_on_linewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_memcpy2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13550wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

sr_entitlement_helperwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13426wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43910wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

le_falsewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

simplereadwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example6_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

function_callwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

unop_parenswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_zerodivwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input81wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

4053wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

largesttwowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

function_call_with_bufferwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bss_datawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hcf&lcmwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

bin2cwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

nbtestwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

47352wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

functionfact(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

naive_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13434wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

generate_uudmapwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

quick_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input125wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43679wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

36398wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test_i64_llabswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

insert_intervalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

hello_world_loopwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

39700wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

m68kmakewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

test_assert_failurewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

disptracewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 15']
['  total classes', ' 3']

4-andwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_globaldoubleswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_printf_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

22wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

equacaowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_vprintfwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

patch_elf_32bitwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

test08wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

flattenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

continue_desviowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ternary_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionfactwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test-rewb-bsdwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 1']

19wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 9']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

isSquarewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

word_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanf_4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_strtokwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

can_bus_receivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

consecutive_blockswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

if_nestedwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_double_varargswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

no_initializewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nbodies_cwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p32wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

if_takenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

write_with_bitswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

Question-1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

datatocwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

test_constglobalstructswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13280wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test-strndupwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

GCDNumberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_strstrwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

multiplywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input120wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_ubsan_minimal_too_many_errorswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

global_shadowedwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sumevenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

02bwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0004-operators5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

44738wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

13466wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

for5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

apioppswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

newlineswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_allocawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

extract_genesiswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

lower-one-maskwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

14122wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sumnaturalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

referwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

20wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

AESwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_sscanf_5wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

precedencewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

incremento_decrementowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

strong_numberwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bubble_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

74wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

memory5awasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

percentagealtwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

forward_declwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input113wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

19bwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

example6_7wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

variables_constanteswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

test_fast_mathwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_lsan_no_leakwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example5_14wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

aifc_decodewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

test_asan_use_after_freewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

jump_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

frequencywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

enfawasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functiondivision3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

precedence_4wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

04wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Stackwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input74wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input081wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43607wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

argoptwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

lerpwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

c17wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

return_0wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

no_bison_stubwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 7']
['  total classes', ' 2']

input135wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gen_alu_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input83wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gendibwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

0015-calls01wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

10745wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

5951wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

input121wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43550wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

sub_negwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

RecursiveDescentParserwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_asan_memset_nullwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

askwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0007-dowhile1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Reverse_stringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

wildcard_matchingwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionadd3wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

functionadd1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

two_sumwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

test_setlocalewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

03wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13367wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

kallsymswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

13519wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input109wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

and_truewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

collatzwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13285wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13288wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

sort_arraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

generate-a-wordwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

input148wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bst_inorder_traversalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_varargswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

stabilizewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

range_searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

13380wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

trymkffowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

operadores_logicoswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

example5_12wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13639wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

17545wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

765wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

Swap_adjacentElementswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

ToggleEachCharacterwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

media_paramwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

for_cont_decrementowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fibonacci_Searchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

do_whilewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

rm_elemwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fpinwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

sync_32_testwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

45459wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

Area_ofTheCirclewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

16_unaliwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fast_powerwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

add_two_numberswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

43606wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

subtract1arraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

Linearsearchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bisbicwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

43708wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_timebwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

17371wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

17559wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13313wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

selection_sortwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

tsub-okwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

assign_ternarywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-20wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

cvmwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

functionhcflcm(1)wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

check_syntaxwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

search_rotated_arraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

29949wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

mostrado10vezeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

functionpalindromewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

1470wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

remove_endwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0018-funcptr1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

evenwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

bar1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_sscanf_floatwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

59wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_floatwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

27wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_asan_null_derefwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

15203wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

42646wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

fun_shadowed_by_variablewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_bsearchwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

insertionwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

crc32hashwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

quote_calc-swasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

47025wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

cmaskwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

d_c99_anon_structwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example5_16wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

lu_decomposewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p82wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_lsan_leakswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ctest2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hamming_weightwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

tree_serdeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

decode_wayswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

climb_stairswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

distinct_subseqwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_vsnprintfwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13279wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

enumeracoeswasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

0015-calls02wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

permutation_in_stringwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

ok_syntax1wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

test_asan_strcpywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

26wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

stockwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

memory6wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_addr_of_stackedwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

stddocwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

decimal_to_octalwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

13395wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

subtractarraywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

list_udgwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

gcd_recursivewasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

input101wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

associativitywasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

variable_as_argwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

htoiwasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

radix_sort_2wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

laco_infinitowasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

err_syntax11wasi-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

example6_14llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

cvmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 16']
['  total classes', ' 4']

PrgNamellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_setenv_leakllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

retorno_funcllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p62llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

firstfollllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

uaddcheckllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

leftmost-onellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

count_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

trasherllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 4']

insertionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

warshall_algorithmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13369llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

max_heapllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input084llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_memcpy_memcmpllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

Linearsearchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

unique_bstllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

43753llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

copyfilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

truncate_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

defines3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_errarllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13380llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_flexarray_structllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

calloc2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

bst_convertllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

forward_declarationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

operador_ternariollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bst_inorder_traversalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

thirdllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

compcov_targetllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits15llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

34262llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

two_sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

36395llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

input153llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_math_hyperbolicllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

literaisllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

45458llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

input71llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

48llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

word_breakllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

wildtestllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bellman_fordllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

mksmdkv310splllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

LongDoubleSupportllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

check_stat2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

comando_whilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

remove_endllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

02bllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

d_c99_decls_after_stmt2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_strptime_reentrantllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

unop_addllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

struct_unionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sr_entitlement_helperllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

doublelevelllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

dsmemberutilllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

FreeBSD_versionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_ubsan_full_overflowllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

matmul_cllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits02llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionaveragellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_funcptr_namecollidellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

input76llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionseriessumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

xway-swap-bytesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_strtoll_binllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

45308llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

find_leap_yearllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

for5_1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

dowhile2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

null_operationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-exp-intllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13398llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sentinel_linear_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13500llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

notas_alunosllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

function_pointersllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_strtol_decllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_sscanf_floatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionfactllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13465llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_browser_language_detectionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

4052llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

test_container_ofllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_strtolllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

referllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43648llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

18154llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

percentagellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_atoXllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0013-struct3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ackermannllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13476llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43690llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

ejemplo_funcionesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input74llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

media_sem_procllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

10745llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

functionsubtract(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

Age_in_Days_Months_Yearllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

trocallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

file2includellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 16']
['  total classes', ' 4']

cmaskllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

justificationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

input088llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_strtoll_hexllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input136llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

merge_intervalsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

input110llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

disksizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

2073llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

0012-pointers1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionevenodd1(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

comando_continuellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

fatorialllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

is_armstrongllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

2861llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

le_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43703llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sign-extendllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input134llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

28llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gauss_eliminationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13400llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_va_copyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

matrix_dgllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43765llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

inplace-swapllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43603llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

islandsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

fread_floatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 3']

multiple_globalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functiondivide1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

srl-srallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

Isattyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43489llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

41909llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

simple_writellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

45943llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

return-passllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

continue_desviollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

todllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

8411llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

input049llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

quote_calc3-sllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

pure_errorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input135llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

defines1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

k_means_clusteringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

pascal_trianglellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

m2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

unsigned-high-prodllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

range_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43506llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0013-struct1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionisLargestllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

watchdog-simplellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_fast_mathllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

4053llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

test_stack_placementllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_mathfuncptrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [f32] -> [f32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

21476llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

dijkstra_largellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

0029-ptrarith1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

doubly_linked_listllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p61llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

invert_binary_treellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

size_intllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

spec2defllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 16']
['  total classes', ' 5']

test_strtoll_decllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

stddocllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

malloctestllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

fifthllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13386llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

quadratic-eq-solverllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

empty_expressionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

pancake_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

or_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

for_cont_decrementollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_strstrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0005-if1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_literal_negative_zerollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

d_c99_anon_structllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43653llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

rail_fencellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

quote_calc2-sllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

strndup_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nomear_um_tipollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p36llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

copy_filellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

43649llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

mul3div4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

03llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

valid_bstllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

quote_calc-sllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_i32_mul_precisellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

41_Nikhil_Babu-17llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0022-namespaces1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

collatzllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

rock-scissors-paperllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

27llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p72llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input90llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

function_recursivellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

3342llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

__clock_without_librtllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

media_paramllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

roman_numeralllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_floatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

dijkstras_algorithemllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

exercicio4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p80llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

media_globaisllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

preopen_populatesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_constglobalstructsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

checkSpacingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

odd_even_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

fibonacci_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input30llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bst_bfsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

least_common_multiplellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

factorailllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

45287llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_frexpllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

17545llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

switchvllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

radix_sort_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

longoptllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

fun_in_exprllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

first_fitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

exercise6_9llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

infix_to_postfix2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

test_strtoldllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

one_appear_count_by_binaryllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

duplicated-namesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p75llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13609llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nested_loopllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

cartesian_to_polarllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

not_fivellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tipos_primitivosllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hdfmtllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

p77llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input150llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

variables_globalesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

inca-swap-bytesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input080llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

is-fd-openllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

median_of_two_sorted_arrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionhcflcmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

cexamplellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

replace-bytellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

singlepassllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 2']

additionarrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_i64llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0028-inits08llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

38194llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

testinstrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

rm_dupllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input112llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

reversewhilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_sscanfllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

39624llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

pelt_halflife_increasellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

44llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

20llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-argllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

countdigitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

16_unalillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

0014-array1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input147llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sol1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

dividellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

Radix_Sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_asan_use_after_freellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

transitive_closurellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bool2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

trymkffollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input070llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

mandelbrotllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

patch_elf_32bitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

0015-calls01llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0015-calls02llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13519llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

perfectllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

valid_numberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

c9llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hppllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 16']
['  total classes', ' 5']

apuntadorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

greatest_common_divisorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

forward_decl_argsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionposneg(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

44620llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

combination_sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

locale_codesetllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test-strsepllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bst_max_pathllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

binary_to_hexadecimalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0011-switch1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

42646llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

variables_constantesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

for_matrizllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

calc_code_topllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionaddllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

bst_postorderllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

strings_memoryllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input122llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13572llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input074llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13335llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

simple_targetllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

factgenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

2-sideeffectsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bintreellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

cocktail_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13430llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

good_aoutllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

funperfect2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

check_stat1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

calcllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

newlinesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_strtol_binllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13399llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-28llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

0021-tentativedefs1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_use_after_returnllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2037llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

eval_rpnllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

char_first_appear_oncellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input81llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_i64_4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test-rewb-sysvllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 1']

c19llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionadd3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

2460llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

8-evalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

1135llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

43754llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

spiral_matrixllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-variadicllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

41128llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_isnanllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43640llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test-rewb-bsdllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 1']

09llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input071llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13479llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

input034llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

area_triangulollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

2001llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

reversenumberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_strptime_daysllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

generate_uudmapllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

43550llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

Floatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

example_c_filellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43630llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2753llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

imv2pgmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 16']
['  total classes', ' 4']

audiogenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

conversao_de_tiposllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

42254llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

GCDNumberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-PATH_MAXllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

fileHandlingSimplellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

15202llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

390llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

0013-struct5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gas_stationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hash_djb2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

39869llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

if_nested_4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

enoughllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

addnotellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

example5_3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test-strndupllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

calc_code_defaultllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0028-inits09llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

file_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

mkconfigllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

13570llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rm_elemllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

5584llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

same_treellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

nota7llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input099llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionproduct(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0-mainllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_stack_varargsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43641llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

hex2hexllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

39338llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

follow_symlinkllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

hexadecimal_to_octal2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_i64_llabsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

host_byte_orderllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-dwarf5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 5']
['  total classes', ' 2']

13549llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

insert_positionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

927llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

gif2webpllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13337llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

equacao2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionproduct2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

window_substringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

43505llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

39204llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

13395llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

differencellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_lto_atexitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 4']

7llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

47043llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43689llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13279llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionprimellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

quote_calc4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_stdlibsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  class #4']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 5']

return_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

linearledllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionsubtract1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

fibonacci1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13280llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

word_ladderllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

0028-inits07llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

insert_intervalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

getcharbugllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 2']

doublellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

decimal_to_binary_recursionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

funbasicllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

string_to_integerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ray3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

for_variable_shadowllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

clocks_get_m_nllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

calc2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

isomorphic_stringsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

jump_gamellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

dump_pktfilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

assert-failllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

menor_delesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43637llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

circular_queuellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input34llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

and_truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

aifc_decodellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 5']

variables_localesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p96llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

stringlengthllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

seriessumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

c18llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

subthreadcreatellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionpalindrome(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input128llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_perrarllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

binarytreellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

gt_truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

long_doublellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

dowhilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

c13-2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nested_scopellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

persistent_targetllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-16llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

pyramid_alphabetllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

askllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

test_sscanf_skipllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0028-inits12llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p84llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

9303llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

gen_asciillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

0002-global1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i64_varargsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p68llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

left_shiftllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_assert_failurellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input77llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

RecursiveDescentParserllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

2880llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

43691llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input040llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

KrishnamurthyNumberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

3349llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

Read1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

funkyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

array_traversalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionaverage(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_strtodllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

vowelllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

m68kmakellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 5']

wasmfs_open_appendllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

check_time2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

array_stackllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ternary_short_circuitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

FunctionPointerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

43608llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

missing_positivellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

copy-intllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-noopllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

10646llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

maxalignllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

8llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

permutation_sequencellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_asan_heap_buffer_overflowllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

posnegativellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

s-exp-strllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

u_boot_binman_embedllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

16llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #3']
['    type', ' [i32, i32, i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  class #6']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 7']

gray_codellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

reverse_nodesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

47291llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ge_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionisLargest(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

max_subarrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_strptime_tmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

nested_whilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bead_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

insertion_sort_recursivellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_array2bllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

word_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

while50llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

minimum_path_sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

kadanes_algorithmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

binary_insertion_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

add_two_numbersllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

22llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input51llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

slide_windowllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

boyer_moore_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-diffllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_zero_multiplicationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hosttypellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

divisionarrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

41467llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

39337llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_conststructsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

36276llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

newton_raphson_rootllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

make_a_change_problemllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

39389llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

floatconstllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

49llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

29llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p90llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

quartilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_varargs_multillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

frequencyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0027-structcopyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

embed_datallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0018-funcptr1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

access_file_after_heap_resizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 2']

insertion_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_wcslenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

28996llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

IndirectCallToBuiltinllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

simple-shellllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input133llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 3']

ternary_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bench-syscallllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input114llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

39160llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

singlelevelllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

for3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

4584llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

43764llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

functionfirst&lastllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

c7llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

elsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

or_truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionadd1(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p66llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

lpsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

show-bytesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input083llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

3441llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

recursion-formsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 7']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 4']

palindrome_partitionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

benchfloatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

interpolation_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

unused_expllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

zeroesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

ifelsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

c6llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bst_preorderllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13389llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

subarrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionisLargest3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_sintvarsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0001-define2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sintaxe_basicallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43702llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

octal_to_decimalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

pure_calcllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

lower-one-maskllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input051llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_stack_buffer_overflowllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

18885llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

m7makecharsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

stooge_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

bufdemollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

naval_battlellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

continue_empty_postllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

search_rotated_arrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

example5_14llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

functionproduct1(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

pelt_halflife_decreasellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

write_with_bitsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

for5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input120llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

for2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

consecutive_declarationsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ex1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_getgepllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

coin_changellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

errorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionprime(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

47296llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

extract_data_for_miollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 16']
['  total classes', ' 5']

comando_switchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

symlink_readlinkllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

08llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

roman_to_integerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

input106llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_asan_strncpyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_timebllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

for4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

nested_opsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

incremento_decrementollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

function_call_with_bufferllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionsum100(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionreverse(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_trickystringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

10936llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

mkorigensplllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

enumeracoesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

if_anidadollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

plus_onellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

46256llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

functionproduct3(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

1-dead_codellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

38llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

threaded_binary_treesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

if_nested_5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Week1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

diskschedulellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

dotprodllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

diningphilosopherllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

rect_in_histogramllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

18294llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

fast_powerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

3888llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

0004-operators1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

matrix_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

check_openpf3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

checkcodellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

exercise5_5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

400llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

test_stack_voidllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

feature_testsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43679llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

countsortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13639llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

input149llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43483llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

15203llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

for_emptyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13434llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

consec_seqllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

matrix_udgllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

gen_init_cpiollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 7']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 5']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

Reverse_stringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

CMakeCCompilerIdllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionsubtract1(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

44738llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

0004-operators4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

exploit_me_3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

for6llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_double_i64_conversionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

kth_bstllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

flattenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

if_takenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

btyacc_calc1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

44517llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

for_nested_scopellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tmultcheckllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

common_prefixllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

50748llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

int_to_stringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

BubbleSortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionprimeinrangellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43555llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

45119llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

constants-egllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ExternalWeakLinkagellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

troca_mainllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sudoku_cllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  total classes', ' 2']

13388llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43698llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

main_argsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

bst_rightllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

primeinrangellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hexadecimal_to_octalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13471llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

parensllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

36394llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

14142llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

decimal_to_hexallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

generate_first_followllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

copy_listllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_safe_stackllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hdresizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 16']
['  total classes', ' 3']

input100llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43607llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

scanf2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

maximal_squarellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

recursive_selection_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

words_alphabeticalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 12']
['  total classes', ' 4']

print50llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-openclosellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  total classes', ' 3']

17371llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

inv_numberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

switch_examplellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

path_sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

34592llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

pigeonhole_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

fileHandlingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

skip_on_failure_short_circuit_orllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

47041llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

bug1491666llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39625llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

41_Nikhil_Babu-22llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

17940llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

mk251llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 4']
['  total classes', ' 2']

semanallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p63llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

comparacionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

59llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

skip_on_failure_short_circuit_andllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

stride_ddllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

37362llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

russian_dollllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

p69llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_sscanf_capsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

pbmsrch_largellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

6195llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

next_permutationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

multiple_varsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

cmplogllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

input115llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

write_filellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

13299llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

swap_nodesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

21llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

parse_manllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 3']

reversenaturalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

nested_breakllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

no_initializellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_printf_macrosllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

auto_epsgllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

calc_code_allllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

45329llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

quenenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

vswprintf_utf8llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

s-returnllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

lt_truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ler_escrever_formatadollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

ctest2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input80llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionquadraticllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_strndupllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

check_hellollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

s-exp-floatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

menu2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

input130llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

45541llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

39794llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

shell_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

majorityllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

functionfibonacci(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

segment_treellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

test-compcovllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

loopsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sjfllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionsubtract2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_alloca_stackllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

wordsizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p64llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sizeOf_pointerVariablesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

19allvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

nested_ternary_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

23llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

1490llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

declare_blockllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

return-failllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

selection_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

39731llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

largestthreellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

47183llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

example5_16llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 2']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 4']

bisbicllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

hamming_codellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

generate_unicode_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

example9_1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

fcfsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

good-echollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

fractionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

cread-altllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

Add_two_matricesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

skip_on_failure_multi_short_circuitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43606llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

swappedfirst&lastllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

mutual_recursive_functionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

postfix_evaluationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

13426llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

function50even(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input144llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0008llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

associativity_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

44609llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

insertion-sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_lsan_leaksllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

float-lellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

um_programallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

create_symlinkllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

34llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

longest_continuious_numberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_lsan_no_leakllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2873llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

13719llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

victimllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

continuellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

change_valueOfConstantllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

calc_code_requiresllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

constantesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

6-orllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13630llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

structv2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 2']

size_floatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

tipoDatoformatosllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

48_bubble_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

while_single_statementllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

stdin1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

is_palindromellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

cleararrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

sort_colorsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

17439llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_strtol_hexllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

36857llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

sumevenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

s-exitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

stabilizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ne_truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bar1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

check_moneyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

operacionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_sscanf_4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-vasprintfllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

stockllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

cjk_tab_to_hllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 15']
['  class #3']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 37']
['    count (how often class appears)', ' 26']
['  total classes', ' 4']

example6_7llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

dfs_bfsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

37358llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

example5_4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

nested_ifllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

42llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

h_have_puffsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

insert_sort_listllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

FD_Failllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

functionreverse1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

function50evenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

safe_heap_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

three_sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

json_table_generatorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

18226llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

fibonacci_fastllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

simple_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

46499llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

13466llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

3-commallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

fatorial2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input145llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p82llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

select_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionproduct1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_erfllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

producerconsumerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

atomicopsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

outllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

__mtag_tag_zero_regionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-multiple-mutatorsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

autoassemblellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

gt_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43696llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

imv2txtllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

input151llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

palindrome_pyramid_patternllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

bst_depthllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

1-largestllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

29160llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

06llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

foo1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13397llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

btfixupprepllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

sync_64_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

if_not_takenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

InsertionSortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

26llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

tictactoellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

pointersToIntegersllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

50751llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

hash_crc32llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

sort_listllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input113llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

retorno_procllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

print_continuous_sequence_sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

2860llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

LFSRllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

merge_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

copy3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 3']

return_0llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

q_rotatellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hello_world_loopllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13355llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

trap_waterllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_complexllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

39617llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43744llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

operadores_relacionaisllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13285llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

input70llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

powernow-k8-decodellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

max_gapllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functiondivision3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13393llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

divconstllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

audiomatchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 6']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

functionarmstrong(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

permutation_in_stringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

commandlinecalculatorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

function_referenciallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

4-andllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functioncountllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

asignacion_stringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input131llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

41_Nikhil_Babu-20llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13313llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

exponential_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

decimal_to_any_basellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

rh_assignmentllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

__cc_has_minline_all_stringopsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input143llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

4087llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43605llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

binary_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

matrix_chain_multiplication1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

binary_to_octalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0028-inits14llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input40llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

timecheck2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 4']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test-extraerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

sumofldfdllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

dowhile50llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

askqllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

spacesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2065llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

input089llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

climb_stairsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

functionfreqllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

17432llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

57llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

p92llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0013-struct4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sumof_naturalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

mktablesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

armstronginrangellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

large_factorialsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0028-inits01llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

14332llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

closebitcastsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

edadllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

45459llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

46103llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

recursive_factorialllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0004llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

forward_decl_multi_argllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

AsmAddressesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

46007llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

enterollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

armstrongllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

octal_to_hexadecimalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

test_selectllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

addchainllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

littlellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

comando_do_whilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

semihostllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

36398llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

43639llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_allocallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

largesttwollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

bst_zigzagllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0015-calls03llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

argoptllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

situacao_protllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0004-operators2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

memory3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

right_shiftllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

menu3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

Ncrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0006llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43599llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_pthread_abortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

precedenciallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

TRANSPOSE_0FMATRIXllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

d_cvt_in_ternaryllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13254llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_null_derefllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

scramble_stringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

bubble_sort_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

check_openpf2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

modificadores_de_tiposllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

46302llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

43688llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

apuntador_arreglollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

operadores_racionalesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

four_sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

sol4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functioncount(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

realtime_statsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

input127llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

Pointerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

adding_two_numbersllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

heap_sort_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

interleaving_stringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

comando_forllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

10-controlllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionaverage1(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p55llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43551llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

0019-condexpr1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

generate_imagellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

14334llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

46907llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_sscanf_nllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

check_mapbrkllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

function_paramllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

fpwr2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

rpnllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

dijkstrallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ascllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

fsmapllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

promediollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

consecutive_blocksllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_tsearchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 5']

41_Nikhil_Babu-30llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

later_declllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

smallz4catllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 4']
['  class #4']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  class #6']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 26']
['  total classes', ' 7']

check_openpf5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

__cc_has_mno_sse2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

05llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43552llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

Insertion_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-allocfreellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

37069llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

9595llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

test_asan_no_errorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

whilenotallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

union2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

malloc2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

p65llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_strtol_octllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

exercise1_3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

nested_ops_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

14122llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13396llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

24llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

catalanllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

fits-bitsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-custom-mutatorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

whileseriesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

while_multi_statementllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

multiple_ifllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

TEAllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-strlcpyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

for_declllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

if5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

operadores_logicosllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

Swap_adjacentElementsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

s-sleepllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-getsuboptllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

40128llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

comando_breakllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functiondivision3(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_i64_zextnegllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

2824llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

sort_arrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

StackImplementationUsingSingSingleLinkeListllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p67llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

while2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

zigzag_conversionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

apuntador_arreglo2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_sscanf_3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

isSquarellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

checksummerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

wildcard_matchingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

check_syntaxllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 3']

src-minillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

fpointersllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

fibonacciv2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

tree_serdesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

rmkdirllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

maximal_rectanglellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

pointer_&_arraysllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

selection_sort_recursivellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

gen-devlistllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

divide-power2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_i64_precisellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

lfu-simulationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

do_whilellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

linear_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

variable_as_argllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_memfs_fsyncllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

spctlllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_negative_zerollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bucket_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_if_elsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43530llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

array_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_double_varargsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

39700llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

balanced_bstllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_mainenvllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

packccllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

ramallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

n_queensllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

get_put_charllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 2']

c12llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input123llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

46275llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

39847llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

frequency_of_characterllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

putvarllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_gmtimellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input076llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionevenodd(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

nqueensllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

37384llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

random_quick_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_octalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

36274llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

43541llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

11-cppllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

39203llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43507llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

codesignllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

int-shifts-are-arithemeticllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

div_negllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

vwebp_sdlllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

39718llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

0021llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionnum50(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hello_world_loop_mallocllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_time_cllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

int-size-is-32llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

calc_vmlinuz_load_addrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

eq_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_printf_morellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

gen_alu_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13632llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_memmove2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

mfrom_table_genllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

shaker_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

kth_elemllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

gen_test_charllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

MakeConcreteSymbolicllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_vsnprintfllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

0008-for1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

14795llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43638llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input081llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

36397llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

45495llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

13277llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

hash_sdbmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43654llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input090llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

function_valorllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

copy_sparsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 3']

47239llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

datatocllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 5']

showjournalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 15']
['  total classes', ' 5']

for_contllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13370llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i64_umulllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13385llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13368llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sparse_matrix_additionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

18llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

04#U6590#U6ce2#U90a3#U5951#U51fd#U6570_Fibonaccillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

roundrobin_linkedListllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

countllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

18227llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_llrintllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

6llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43604llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input108llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

course_schedulellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

36780llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionquadratic(2)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

permutationsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

bad-sumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

37llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0010-goto1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

anagrams_in_stringllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

merge_sort_nrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

13382llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

unique_pathllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

genllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

menor_deles_respostallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

armstrong_numberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionpalindromellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

and_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

marksllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

lerpllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

gentranslitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  total classes', ' 4']

1554llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

bin2cllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

getLinellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

type_defllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

2008-05-23-gep-with-global-constllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

csvOutputllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

bubble_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_sscanf_whitespacellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

binarytreesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_fwrite_0llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

multiplyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

whirltestllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

2204llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

input077llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13276llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

0001-define3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

obfstrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

LinerSearchAlgollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

hcf&lcmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input148llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

err_syntax18llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

nbtestllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

break_interrompellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0012-pointers2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

lt_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

x_power_yllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

37716llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 17']
['  total classes', ' 4']

0024-enums1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

simplereadllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

u_boot_binman_embed_smllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

revert_by_wordllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43598llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

Powerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-exp-charllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

valid_sudokullvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13298llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

binary_search_iterativellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

tower_of_hanoillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

c_atoi_str_to_integerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_sscanf_5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_strcasecmpllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

itobllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

t001llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ne_falsellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Finding_sizeof_Datatypellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

array10numberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43536llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

subtractarrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

threeforthsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

02cllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0007-dowhile1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

44594llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

switchcasellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

13367llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input97llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sparse-matrix-multiplicationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

list_udgllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

336llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

copy_systemllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_globalsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43697llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hello_world_fopenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

13331llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

rm_dupsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

generate-a-wordllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

err_syntax11llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

2404llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

memory1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

exit1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13432llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

troca_refllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

calc3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

negllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_float32_precisellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-autoargsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

symboltablehashllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 4']

test_i64_i16llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

vtoykmodllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 16']
['  total classes', ' 4']

functiondivide2(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

1470llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

input091llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

pnmtologollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

merge_listsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_bitfieldsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test-strptimellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 5']
['  total classes', ' 2']

8bit_tab_to_hllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 4']

43757llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

url-parserllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0013-struct2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bufbombllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

tsub-okllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

container_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

fpinllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

41477llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

three_sum_closestllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

quote_calc3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

rechollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

c14llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0028-inits03llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

primenumberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

SelectionSortingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_array2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bogo_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input116llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ifelseLadderllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

comparacion_dosllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

p59llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

hash_adler32llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_memcpy3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

gauss_seidel_methodllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

if_nested_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

add_binaryllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_newlocalellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

euler1_nodivllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ge_truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

menorq20llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

if_nested_3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

squeezellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

enum2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

1128llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 3']

test_bsearchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

compara_ifllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

combinationsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

sumoddllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

le_truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

5-orllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

7-precedencellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43655llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bt1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

memory4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

s-pltargllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

47290llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test-strlcatllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

29949llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

ArrayADTllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

fibonacci_Searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43769llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

13383llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13551llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

softwareupdatellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionevenoddllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

tminllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input88llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

07llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

deptoolllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

htoillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bst_lcallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

47025llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

61llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

multi_digitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

01llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

check_openpf1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

comparaabllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_asan_bitfield_unround_sizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

counting_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

45529llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

RC4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

765llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

c3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_ubsan_minimal_errors_same_placellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rotate_listllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

hamming_weightllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

lcm_hcfllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43890llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Factorialllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

9142llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

primllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

ageifllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

table2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_i64_qdoublellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

infix_to_postfixllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

no_bison_stubllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_emptyPathllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

media_param2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

sombrallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_hello_argcllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_asan_bitfield_unround_offsetllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

swap_2_numbersllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

bss_datallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

can_bus_sendllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionprimeinrange(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_minmaxllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0009-breakcont1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input152llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

absoluteloaderllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

lisllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

brainfuckllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 6']
['  total classes', ' 2']

sysconf_phys_pagesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

genaliases2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

test_autodebugllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

is-little-endianllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_ctypellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 14']
['    count (how often class appears)', ' 7']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

46524llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

distinct_subseqllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

s-allocallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

funperfectllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

hashingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

factorial_trailing_zeroesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0025-duffllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0023-incomplete1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

replce_blankllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sizesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

locale_ASCIIllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

printevenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

factorizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_funcsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

naive_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionevenodd1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

clone_graphllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits06llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

04_05llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

percentagealtllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

nbodies_cllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

printcharsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

4998llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

Question-6llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

05_06llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

41089llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

middle_element_in_listllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input99llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

vwebpllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

36750llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

decimal_to_octalllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

26497llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

data_sizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

munchconfigllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

test_i64_7zllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

show-bytes-morellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test-instrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

exp_return_valllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_varargsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

13688llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

libc_linkllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

lifellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionquadratic(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_ubsan_minimal_too_many_errorsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0001llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

precedence_3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

can_bus_receivellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input039llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

multi_nestingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tic_tac_toellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

14691llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

apioppsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

49_bubble_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0-1-knapsackllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionadd(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

gnome_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0004-operators3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

showenvllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test-attributellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

spewGllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

floyd_warshallllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

chargenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

lagrange_theoremllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_phiundefllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

comando_ifllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input137llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

exercise4_1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

arithchkllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0002llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_ifllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

cycle_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

shellsortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

46493llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

45426llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

fourthllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test07llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionreverse1(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

strlongerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

copy_stdiollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  total classes', ' 3']

anyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

quick_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

fftr4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 12']
['  total classes', ' 4']

1633llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

recursive_bubble_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43774llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input49llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

anagramsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

reverse_integerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

19bllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

p57llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

mpc86x_clkllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

38088llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_bigarrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

dias_segllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

centrino-decodellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input91llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

andllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

13384llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gc_cllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionisLargest3(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionadd1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

s-structllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

locale_monthnamesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

s-unrollllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 5']
['  total classes', ' 2']

functionadd3(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

so1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

ler_escrever_caracterllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

any-odd-onellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

multi_argllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input109llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

struct_anidadollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

elf_sectionsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bankersllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

memory5bllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

formfeedllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

bin2hexllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

44334llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

36391llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

sheet_columnllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

example6_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

46llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_mod_globalstructllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

vr-coefsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 2']

test_memmovellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_appendllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 14']
['  total classes', ' 4']

global_not_initializedllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

6121llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

13392llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0015llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

c17llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

apinamesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  class #4']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 5']

shortest_palindromellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

associativityllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_setlocalellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

37359llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

1944llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test-nanosleepllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13390llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

42647llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

matrizesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

0001-sanityllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

first&lastdigitllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

lcm_of_two_numberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-datallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

42977llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

mostrado10vezesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input138llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

lock1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_funcptrllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 2']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 6']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 4']

fontdumpllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 15']
['  total classes', ' 4']

prime_factoriziationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 2']

test_globaldoublesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

example5_6llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

p56llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

valid_parenthesesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

28225llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

45290llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

factorialllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

rename_function_paramllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bubble_sort_recursionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0006-while1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

DMAllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-repBitsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_i64_precise_neededllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_i64_precise_unneededllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

expression_argsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2094llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

test_asan_bitfield_roundllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43680llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

mini_sizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

c10llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-dwarf1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

13472llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test_langinfollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

mkkeywordhashllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

rotated_arrayllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

checkerllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43910llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

assign_ternaryllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

12llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input121llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bfsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functiondivisionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

c1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

print_matrixllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

DumpStatesOnHaltllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

substituirllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

stringifyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

adaline_learningllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

47352llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

declare_after_blockllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2nd_SmallestElementllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test-getlinellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 3']

36858llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

single_argllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

other_binary_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test-extraer2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

Stackllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

s-dynamicllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

list_cyclellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

declare_latellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input119llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functionaverage1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

test_vprintfllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

partition_sortllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

floyd_warshall_algorithmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

caesar_cipherllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

troca_globllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sub_negllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

media_procllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

39llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

11llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

saturating-addllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

43549llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

337llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 4']

ReadArgsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

quote_calc2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

not_zerollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

04llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

spirographllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

regular_expressionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

largest_numberllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 8']
['  class #2']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

Area_ofTheCirclellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

floyd_cycle_detection_algorithmllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

bprintllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 2']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #4']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  class #5']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 13']
['  total classes', ' 6']

gcd_recursivellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

win-testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

foo2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input118llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

calc_code_providesllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

check_time1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

test_strtokllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43773llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

43771llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

1239llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #3']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  class #4']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 16']
['  total classes', ' 5']

GOST_28147llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 2']

recover_bstllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

s-hellollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

change_casellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

t_fmemopenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 4']
['    count (how often class appears)', ' 17']
['  total classes', ' 4']

input39llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

operadores_aritmeticosllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

p71llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

0001-define1llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tempfunllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

exploit_me_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

quote_calc4-sllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

s-exp-mixedllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

calc_code_importsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

laco_infinitollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

castingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ternary_short_circuit_2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

extract_genesisllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 12']
['  total classes', ' 3']

41_Nikhil_Babu-21llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

demonetizationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

ary_beginllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

test_strcmp_unillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_zerodivllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_sscanf_other_whitespacellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input097llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

7330llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 4']

tonellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

whilevenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

huffman_encodingllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input111llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

concatenationllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

matrix3x3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

5951llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

0015-calls04llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-float-libcallllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_static_buffer_overflowllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

if_nestedllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

9_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

StackUsingLinkedListllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

evenllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

lu_decompositionllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

ReallocFailurellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

functionreversellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

sync_32_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rotate-leftllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

TowerOfHanoillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

truellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gendibllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #2']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #3']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 4']

rand_r_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

candyllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

swap_number_without_using_3rd_variablellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

input154llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

dtllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 9']
['  total classes', ' 3']

read_file_twicellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 2']

word_lengthllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

escopollvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

switchprob2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

c5llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

kallsymsllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  class #3']
['    type', ' [i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 13']
['  total classes', ' 4']

s-fibonaccillvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input132llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ccheckllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

test_i64_cmp2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

fpoutllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

reverse_listllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

33148llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input82llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

36359llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43770llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

points_on_linellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

input125llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

memory6llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

ternaryllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

45llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

functiondivide1(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

stacksizellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 9']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

input75llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

minimumllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_memmove3llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

02llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

43684llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13394llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_localeconvllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

array_queuellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

13391llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionfact(1)llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

15063llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

global_shadowedllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

modified_binary_searchllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

39684llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

integer_to_binllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

sudokullvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

40808llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

exercise4_4llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

test-fgetlnllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 7']
['  total classes', ' 3']

c15llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

12578llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 11']
['  total classes', ' 3']

SparseMatrix_Or_notllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

envtimellvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 3']

crc32hashllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

15llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 5']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 13']
['  total classes', ' 3']

defines2llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 2']

Dijkstrallvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  class #1']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #2']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 3']
['    count (how often class appears)', ' 10']
['  total classes', ' 3']

atomic_64_testllvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input030llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43542llvm-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32, i64, i32] -> [i64]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 3']
['  class #1']
['    type', ' [i32, i32, i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 2']
['    count (how often class appears)', ' 8']
['  total classes', ' 2']

bst_lcacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36274cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

replce_blankcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rotate-leftcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc_code_topcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

no_argcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

kruskalscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-strlcatcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_memchrcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

longest_substring_without_repeatcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

AEScheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

constantescheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-PATH_MAXcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

htoicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

segment_treecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43553cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_umulcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_llabscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quote_calc3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

continue_empty_postcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fcfscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

media_proccheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

brainfuckcheerp-analysis.txt
['function #3 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

so1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_va_copycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43551cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

deptoolcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47042cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

28996cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

for5_1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sum_treecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

declare_latecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sumof_naturalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

efencecheerp-analysis.txt
['function #1 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']

whilenotacheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

associativitycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13279cheerp-analysis.txt
['']

p70cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sumnaturalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

simple_targetcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

no_initializecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

copy-intcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

1554cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gendibcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Powercheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gen_asciicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

apuntador_arreglocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

11cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

balanced_bstcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bss_datacheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input144cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2204cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

return-failcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionhcflcmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

locale_monthnamescheerp-analysis.txt
['function #16 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #18 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0013-struct1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

4998cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

49_bubble_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

49cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c19cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13479cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

43765cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gcd_recursivecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

19bcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input106cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

squeezecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

datatoccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

binary_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p84cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_7zcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

int-size-is-32cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13631cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

02bcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

median_of_two_sorted_arraycheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hdresizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46302cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

asignacion_stringcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

QueueUsingLLcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

tsub-okcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

27cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fatorialcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_varargscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

decimal_to_binary_recursioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

malloc2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionproduct3(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

memory5acheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input117cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

m2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43648cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

Stackcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

printevencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input113cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43708cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input109cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

newton_raphson_rootcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

generate_uudmapcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_setlocalecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #17 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #19 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nbtestcheerp-analysis.txt
['function #2 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  call 18']
['  i32.const 88']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

42254cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41467cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

any-odd-onecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13394cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

46493cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mutual_recursive_functioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

getcharbugcheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

copy_sparsecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

__cc_has_mfentrycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tonecheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

memory6cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input127cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

FreeBSD_versioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

jump_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

infix_to_postfixcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

isSquarecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

is_primecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtol_octcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Linearsearchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

yearcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36359cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quote_calc2-scheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

json_table_generatorcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

checkSpacingcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

doublelevelcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

DumpStatesOnHaltcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_stdlibscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

generate_unicode_testcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hello_world_loopcheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

21476cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

strong_numbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

11-cppcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

kth_elemcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

crc32hashcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

29cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

DMAcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dtcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_ubsan_full_overflowcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

err_syntax11cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hello_123cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sol1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ccheckcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Insertion_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ageifcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

skip_on_failure_short_circuit_orcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionaveragecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

laco_infinitocheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

printcharscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

spiral_matrixcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_allocacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_mapbrkcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

recursion-formscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #15 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

word_searchcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exploit_me_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

invert_binary_treecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13368cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

errorcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44594cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13395cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_vsnprintfcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2860cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

right_shiftcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionevenoddcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Add_two_matricescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_fwrite_0cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionisLargest(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39336cheerp-analysis.txt
['']

43774cheerp-analysis.txt
['']

ge_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43606cheerp-analysis.txt
['']

matrix_dgcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

strings_memorycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p62cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_selectcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_structscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46524cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_appendcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionaverage1(1)cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45329cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input051cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

thirdcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fftr4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.const 0']
['  i32.store']
['  ...']
['function #16 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46103cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sparse-matrix-multiplicationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_memmove2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionreverse1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

simplereadcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

single_argcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input107cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

funperfectcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0026-sizeof1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hppcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input122cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Factorialcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cycle_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for_matrizcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-dwarf1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

stringlengthcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43607cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' Some(6), end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionsubtractcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p63cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43771cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

can_bus_sendcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13400cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

reverse_nodescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

string_to_integercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

3893cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43686cheerp-analysis.txt
['']

decimal_to_hexacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

troca_maincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gas_stationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

7330cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bin2ccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dsmemberutilcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-noopcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

menor_deles_respostacheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-strlcpycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_conststructscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

climb_stairscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Equilateralcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input51cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

first_fitcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_asan_stack_buffer_overflowcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p66cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

50749cheerp-analysis.txt
['']

0002cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43555cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Isattycheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

distinct_subseqcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

simple-shellcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for6cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45308cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example6_2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

copy_filecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

01cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtokcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sumoddcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-exitcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nested_ternarycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sudokucheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2824cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fourthcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

kadanes_algorithmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

floatconstcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nested_ops_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

comando_whilecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exponential_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanf_4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

global_not_initializedcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input076cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

16_unalicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

firstfollcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

not_zerocheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0004-operators1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fpoutcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

spctlcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

decimal_to_octal_recursioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

demonetizationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ckconfigcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mkshelllinkcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

is_armstrongcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

swap_nodescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rotate_listcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

int-shifts-are-arithemeticcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

palindrome_partitioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43698cheerp-analysis.txt
['']

test_literal_negative_zerocheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

area_triangulocheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

simple_testcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fileHandlingSimplecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionfibonaccicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

averagealtcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43505cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39338cheerp-analysis.txt
['']

prime_factoriziationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-repBitscheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43753cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_octalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-allocacheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-strsepcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

3441cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_libgencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c12cheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

switchprob2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c13-2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

binarytreescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

corrupt_rdbcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

primenumbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ne_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

15202cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

pancake_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input140cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nested_ifcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example4_4cheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_varargs_multicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

variables_globalescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ejemplo_funcionescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2065cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionadd3(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

defines1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

59cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13393cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43630cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input070cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-returncheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

__clock_without_librtcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input145cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p32cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

largest_numbercheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0009-breakcont1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i64_precise_neededcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits09cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bellman_fordcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

t_fmemopencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 42']
['  i32.load']
['  local.tee 2']
['  ...']
['function #15 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

euler1_nodivcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c-digraphscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

trymkffocheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

multiplycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_cmp2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-exp-charcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input134cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

merge_sort_nrcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

semihostcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

partition_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hex2hexcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

list_dgcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

unop_addcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13299cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

mfrom_table_gencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strcasecmpcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

FD_Failcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionevenodd(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

unformattedcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-20cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

anagrams_in_stringcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

replace-bytecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

17439cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

eg-discheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

modificadores_de_tiposcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p82cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

8411cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

plus_onecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

genintcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

factorscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gauss_seidel_methodcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionprime(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input099cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43541cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functiondivision3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

getLinecheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

csvOutputcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

reorder_listcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_bsearchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

persistent_targetcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

centrino-decodecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

long_doublecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

patch_elf_32bitcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

or_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

check_openpf2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

missing_positivecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

wasmfs_open_appendcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionsubtract2(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

uppercheerp-analysis.txt
['function #3 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

make_a_change_problemcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

locale_codesetcheerp-analysis.txt
['function #16 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #19 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nbodies_ccheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example9_1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2037cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p57cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 1']
['  i32.const -8']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

media_paramcheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

assign_ternarycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

table2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

poly_addcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ternarycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

46cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

roundrobincheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39519cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

04#U6590#U6ce2#U90a3#U5951#U51fd#U6570_Fibonaccicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sheet_columncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

23cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

5951cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ejemplo_funcioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

forward_decl_multi_argcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

array_queuecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

revert_by_wordcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

recursive_selection_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

1238cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0004-operators3cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_ubsan_minimal_errors_same_placecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

mkconfigcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hcf&lcmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

function50even(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

closebitcastscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

15063cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input91cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

8540cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pelt_halflife_decreasecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

function_call_with_buffercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits02cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hexadecimal_to_octalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0004-operators2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43483cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

candycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits14cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

36397cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

switchvcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

roman_to_integercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

3888cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-argcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-compcovcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

common_prefixcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strndupcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_asan_bitfield_roundcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

SelectionSortingcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

48cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

390cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_frexpcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47025cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hash_xor8cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_memmovecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0015-calls02cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input077cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

mktablescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

vwebpcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13392cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

frequencycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionadd1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

28225cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

matrix_searchcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ok_syntax1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

type_defcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

5-orcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

countcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

countsortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

adding_two_numberscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43684cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

points_on_linecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

todcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

34cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

formfeedcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtoll_deccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_ubsan_full_left_shiftcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-22cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input89cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

benchfloatcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

copy_systemcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']

6-orcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

left_shiftcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

threaded_binary_treescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

symlink_readlinkcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43604cheerp-analysis.txt
['']

4584cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input40cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

function_paramcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

4-1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_stat3cheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

stooge_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

14142cheerp-analysis.txt
['']

GCDNumbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input81cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_qdoublecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2094cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cleantxtcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

word_lengthcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

tiny_ssimcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input075cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

munchconfigcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc_code_requirescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

insert_sort_listcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nested_ternary_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

stacksizecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [i32] -> [i32]']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 9']
['    count (how often class appears)', ' 2']
['  total classes', ' 1']

c9cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input121cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_vprintfcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

disptracecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43690cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rail_fencecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

18cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionquadratic(1)cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-multiple-mutatorscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

simple_readcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rename_function_paramcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

eq_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

null_operationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits13cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

missing_returncheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13367cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hamming_weightcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

3851cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44811cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mpc86x_clkcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

42977cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

quenencheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

libc_linkcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pure_calccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanf_capscheerp-analysis.txt
['function #8 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

12cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multiply_stringscheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input128cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

apinamescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bankerscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 23']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

return_0cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

StackUsingLinkedListcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hash_adler32cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

17559cheerp-analysis.txt
['']

dijkstras_algorithemcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c_atoi_str_to_integercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functiondivide1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_memcpy_memcmpcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

1135cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

switchcasecheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

catalancheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

apioppscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

funkycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p97cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

400cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

troca_globcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

wildcard_matchingcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

vulncheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rabin_karp_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionpalindromecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

24cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

realtime_statscheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13280cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' Some(5), end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

search_rotated_arraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rm_elemcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strcmp_unicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

read_file_twicecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

factorial_trailing_zeroescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

adaline_learningcheerp-analysis.txt
['function #3 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

compcov_targetcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

testinstrcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

14691cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

rechocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

1470cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

memory3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

stabilizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fibonacci1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

42646cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

test_atoXcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input123cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0027-structcopycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0004cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

diskschedulecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

18885cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

input088cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p64cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39718cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

cread-altcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

8bit_tab_to_hcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionreversecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

10936cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

50751cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' Some(3), end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

41909cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input089cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

shell_testcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input150cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionposneg(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gnome_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

huffman_encodingcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

no_bison_stubcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p80cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

select_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rmkdircheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p72cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits01cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

slide_windowcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mul3div4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45290cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionreverse1(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dump_pktfilecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44517cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

octal_to_hexadecimalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

comando_ifcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_gmtimecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43542cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

kallsymscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 22']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.const 0']
['  i32.store']
['  ...']
['function #15 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

4052cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

minimumcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0001-sanitycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_flexarray_structcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functioncount(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p36cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

div_negcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0013-struct6cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

create_symlinkcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionquadraticcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ToggleEachCharactercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44334cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cantor_setcheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

05_06cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-float-libcallcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2460cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

productdigitscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

valid_sudokucheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

binary_to_octalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

reverse_listcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanfcheerp-analysis.txt
['function #9 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

commandlinecalculatorcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_autodebugcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lpscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

imv2txtcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sr_entitlement_helpercheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

02cheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

edit_distancecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_getopt_longcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ler_escrever_caractercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionsum100(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13398cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gen-devlistcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input49cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

d_cvt_in_ternarycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

14334cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

boolecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

binary_search_iterativecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_array2cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45287cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

test_strtodcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bst_max_pathcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

stockcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

asccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

add_binarycheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

operadores_relacionaischeerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nomear_um_tipocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

and_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

path_sumcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sol2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

floydwarshallcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanf_skipcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45495cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

parse_mancheerp-analysis.txt
['function #3 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

size_intcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Area_ofTheCirclecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

stddoccheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_tsearchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_stack_varargscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

genaliases2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

continuecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

check_openpf3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pelt_halflife_increasecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pure_errorcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43598cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47291cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

list_udgcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

change_valueOfConstantcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input136cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sentinel_linear_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

array_traversalcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

d_alignofcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

spec2defcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 25']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

vswprintf_utf8cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #17 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #18 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

regular_expressioncheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

menu1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_float32_precisecheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

enoughcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13639cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

eval_rpncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

valid_parenthesescheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-extraercheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

12578cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

927cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-openclosecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gauss_eliminationcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

atomic_32_testcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_funcptr_namecollidecheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bead_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

reverse_bitscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functiondivision3(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

tmultcheckcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mksmdkv310splcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.load']
['  local.get 0']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-exp-intcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0025-duffcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

selection_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

whileseriescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

LinerSearchAlgo(Binary)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

40808cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c15cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nqueenscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_takencheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

envtimecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

least_common_multiplecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

precedenciacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

35868cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

checkcodecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bitwise_zerocheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

1-dead_codecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hosttypecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43639cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

comando_switchcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

refercheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-autoargscheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43507cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sjfcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

GOST_28147cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

copy3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionfibonacci(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

x_power_ycheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

1633cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

__mtag_tag_regioncheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

1128cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

timecheck2cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

49472cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

02ccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rm_dupscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits15cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

check_hellocheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

whirlgencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

clocks_get_m_ncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example5_12cheerp-analysis.txt
['function #3 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43688cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

s-exp-strcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

naval_battlecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example6_14cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

reversenaturalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

btfixupprepcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

unop_parenscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

TEAcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-hellocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multiple_varscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

memory5bcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fast_bincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc_code_allcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

FunctionPointercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

array10numbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for_contcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p59cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

divconstcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

newlinescheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fibonacci_dpcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gyp_dummycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p61cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionnum50cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

precedence_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_memsetcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

scramble_stringcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exercise6_9cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

linearledcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c17cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ackermanncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

concatenationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

enum2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

evencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_addr_of_stackedcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_openpf1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quote_calc2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quote_calccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13399cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

vtoykmodcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fractioncheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quote_calc-scheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cartesian_to_polarcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13473cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

binary_to_hexadecimalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

74cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

d_c99_decls_after_stmt2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_errarcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionhcflcm(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fentrycheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ExternalWeakLinkagecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_i16cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

forward_declcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

exploit_me_3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bst_preordercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

substitcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-fgetlncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

function_recursivecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47296cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

itobcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

comando_continuecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

whirltestcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionfirst&lastcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

merge_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45119cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quicksortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fibonacciv2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_write_stdout_filenocheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-attributecheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

stride_ddcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13391cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_browser_language_detectioncheerp-analysis.txt
['function #19 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #22 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

substituircheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-redirectcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input70cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13500cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

return_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tictactoecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

08cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_trickystringcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

promediocheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

boyer_moore_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bzip2recovercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13549cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

letter_combinationscheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

copy_blockcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']

functionproduct1(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

longoptcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0021-tentativedefs1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

chargencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanf_other_whitespacecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

is-little-endiancheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

largesttwocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_precise_unneededcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13370cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

offset_testcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39624cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

int_to_stringcheerp-analysis.txt
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multikey_quick_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

divide-power2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

trashercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cocktail_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example5_3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

while2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

matrizescheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

associativity_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

quote_calc4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

other_binary_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43552cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

05cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_syntaxcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ifelsecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_memmove3cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0013-struct3cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43697cheerp-analysis.txt
['']

13476cheerp-analysis.txt
['']

functionposnegcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

function_callcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

swap_number_without_using_3rd_variablecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

askqcheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

range_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39625cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43890cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Floatcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p67cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

justificationcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

recover_bstcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

5584cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

9595cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bst_bfscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

show-bytescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 1']
['  i32.const -8']
['  ...']

43640cheerp-analysis.txt
['']

test_globalscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

7cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47043cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43702cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

simpsons_1_3rd_rulecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

eq_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0001-define1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

divisionarraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

askcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ex1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mkbbcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

valid_bstcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0001cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

extract_genesischeerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36858cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

13386cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

elsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fontdumpcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rotated_arraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

skip_on_failure_short_circuit_andcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0017cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

generate_imagecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

longest_continuious_numbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13254cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

valid_numbercheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0008-for1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

IndirectCallToBuiltincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13432cheerp-analysis.txt
['']

LFSRcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input133cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lower-one-maskcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

src-minicheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

factorailcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

struct_anidadoV2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Reverse_stringcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

floyd_warshall_algorithmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43703cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41_Nikhil_Babu-17cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

9303cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

MakeConcreteSymboliccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionsubtract2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

precedence_3cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

count_and_saycheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cjk_tab_to_hcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 26']
['  i32.load']
['  local.tee 2']
['  ...']
['function #40 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39204cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example_c_filecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

softwareupdatecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

middle_element_in_listcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input90cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bench-syscallcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

factgencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

operadores_aritmeticoscheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43680cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

addchaincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input74cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bst_postordercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39794cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

lexicographic_permutationscheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

03cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

transitive_closurecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionsubtract(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

edadcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

isomorphic_stringscheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_funcptrcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const 90']
['  end']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const 26']
['  end']
['  ...']

43910cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

castingcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_stack_placementcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43608cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0028-inits04cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

34667cheerp-analysis.txt
['']

nested_loopcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 23']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_zerodivcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

LinerSearchAlgocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

counting_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

binary_tree_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fread_floatcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

armstrong_numbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cleararraycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

greatest_common_divisorcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

checksummercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

doublecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

shaker_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input112cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input154cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

do_whilecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionsubtract3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input097cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

next_permutationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

interpolation_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cexamplecheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

d_c99_anon_structcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

trocacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

1490cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

unique_pathcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

course_schedulecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

50750cheerp-analysis.txt
['']

functionaddcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

maximal_rectanglecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0007-dowhile1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

simple_writecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

return-passcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0001-define2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_i64_precisecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

showjournalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36394cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ifelseLaddercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

arithchkcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

odd-onescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39337cheerp-analysis.txt
['']

functionaverage(1)cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

26cheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0015-calls04cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-datacheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

coin_changecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

four_sumcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bisbiccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0020cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

octal_to_binarycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0010-goto1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

45459cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36779cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionproduct2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

to_decimalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

14122cheerp-analysis.txt
['']

same_treecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0029-ptrarith2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_strptime_reentrantcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

selection_sort_recursivecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

checkercheerp-analysis.txt
['function #1 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.load']
['  local.tee 2']
['  ...']

functionnum50(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sombracheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p55cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 1']
['  i32.const -8']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

29160cheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exitcode_explicitcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

stdin2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

primcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

add_two_numberscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bocheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input97cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tower_of_hanoicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

armstronginrangecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lfu-simulationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cmaskcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

radix_sort_2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47041cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Week1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_memcpy2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

compara_ifcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

8cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

additionarraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quick_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mkkeywordhashcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #14 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

max_heapcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_ctypecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #24 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_nested_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

retorno_funccheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

tic_tac_toecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 26']
['  i32.load']
['  local.tee 2']
['  ...']
['function #15 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_assert_failurecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

literaischeerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39203cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

srl-sracheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bfscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calloc2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_getgepcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0013-struct4cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39869cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

lu_decompositioncheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_asan_use_after_returncheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionproduct3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0016-string1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

57cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

equacaocheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_time_ccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

constants-egcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

whilevencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64_zextnegcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36391cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

atomicopscheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45144cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

elf_sectionscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0005cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

inv_numbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

singlelevelcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

largestthreecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

collatzcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #14 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-sleepcheerp-analysis.txt
['function #1 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']

fpwr2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 24']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input034cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionadd1(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_asan_memset_nullcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2880cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

generate_first_followcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_fast_mathcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

le_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Swap_adjacentElementscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

18154cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

generate-a-wordcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

percentagealtcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test07cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bufbombcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multi_argcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functiondivide2(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ctest2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-getlinecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

4087cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Ncrcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

operadores_logicoscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

get_put_charcheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

jump_gamecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_loopcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_alloca_stackcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

zechocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lcm_hcfcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtol_bincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_stdint_limitscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

zigzag_conversioncheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41477cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

61cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

modified_binary_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

and_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

swap_2_numberscheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Question-6cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

5cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gen_alu_testcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 40']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0017-incdec1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

37359cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input80cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

tempfuncheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

17545cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_time2cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2008-05-23-gep-with-global-constcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13369cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionfact(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fun_shadowed_by_variablecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

37716cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

extract_data_for_miocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  local.get 0']
['  unreachable']
['  local.get 1']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13471cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

max_gapcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input110cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bogo_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

postfix_evaluationcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ray3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

retorno_proccheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43770cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

reversewhilecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cmplogcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i64cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

negcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0-1-knapsackcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mostrado10vezescheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

palindrome_pyramid_patterncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

15203cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

16cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for_cont_decrementocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

38088cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

btyacc_calc1cheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example5_1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

wildtestcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13382cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

maxaligncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13499cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

disksizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

TRANSPOSE_0FMATRIXcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

function_valorcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits03cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

heap_sort_2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c10cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

data_sizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Question-1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exercise4_1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13466cheerp-analysis.txt
['']

islandscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

entre10e20cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input125cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

9_testcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

switch_examplecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_phiundefcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

04cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input88cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input146cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_setenv_leakcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

large_factorialscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

merge_listscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

powernow-k8-decodecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-custom-mutatorcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

26497cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_nested_3cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2nd_SmallestElementcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dotprodcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-instrcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

print_matrixcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

factorialcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43689cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

consec_seqcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

antcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0029-ptrarith1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2001cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

integer_to_bincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

three_sum_closestcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43550cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

happy_numbercheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

infix_to_postfix2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

StackImplementationUsingSingSingleLinkeListcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13285cheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13335cheerp-analysis.txt
['']

window_substringcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

forward_declarationcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

size_ofcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hash_djb2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

array_testcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_asan_bitfield_unround_sizecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

longest_palindromic_substringcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

outcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #2 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 2']
['  i32.const -8']
['  ...']

13519cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

functionadd(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pointer_&_arrayscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

saferp_optimizercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

consecutive_declarationscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

18294cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

estruturascheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

enfacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pigeonhole_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

4-andcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c14cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for_declcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_wcslencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dijkstracheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sumofldfdcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

tipoDatoformatoscheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input77cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

incremento_decrementocheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pascal_trianglecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

declare_after_blockcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

anycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

showenvcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

m68kmakecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits05cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

insertion_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bst_depthcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

producerconsumercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

subarraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_mathfuncptrcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43679cheerp-analysis.txt
['']

22cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

insert_intervalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

e_square_x_programcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

matrix_udgcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exploit_me_1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

duplicated-namescheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

gencheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strptime_tmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

warshall_algorithmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dias_segcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input84cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lifecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for_emptycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_mainenvcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input114cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example6_7cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_llrintcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

countdigitcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc_code_importscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0012-pointers2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

38cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input71cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lemoncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 48']
['  i32.load']
['  local.tee 2']
['  ...']
['function #15 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.const 0']
['  i32.store']
['  ...']
['function #20 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

insertion-sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bin2hexcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

strlongercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ReallocFailurecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

8783cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanf_whitespacecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Finding_sizeof_Datatypecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Age_in_Days_Months_Yearcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0005-if1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input039cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_asan_static_buffer_overflowcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

check_stat2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mysterycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39389cheerp-analysis.txt
['']

test_isnancheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

assign_valcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

naive_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fifthcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_array2bcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bintreecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionpalindrome(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sizeOf_pointerVariablescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionisLargest3(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

not_fivecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

3342cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-unrollcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

write_filecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ramacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43653cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

minimum_path_sumcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

u_boot_binman_embedcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43433cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

divisionaltcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43530cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43773cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' Some(7), end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

three_sumcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_printf_2cheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

apuntadorcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Sum_Diagnolscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functiondivisioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

zccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_anidadocheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input152cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

binarytreecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

defines2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13337cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

subtractarraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gif2webpcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0021cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_emptyPathcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46907cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_lto_atexitcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

337cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strstrcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

symlink_loopcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input135cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bt1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

xway-swap-bytescheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

skip_on_failure_multi_short_circuitcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tipos_primitivoscheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_i32_mul_precisecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input040cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

anagramscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mandelbrotcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-isblankcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

parenscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rotate_arraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47239cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

floyd_warshallcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13465cheerp-analysis.txt
['']

RecursiveDescentParsercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43764cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

follow_symlinkcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p71cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sort_colorscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

uniq-ucheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

structv2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

wordsizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

media_globaischeerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

escopocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

maximal_squarecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

AsmAddressescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fast_powercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

apuntador_arreglo2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sudoku_ccheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

watchdog-simplecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example5_6cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gray_codecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36395cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

circular_queuecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

consecutive_blockscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

exercicio4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

RC4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

roman_numeralcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtol_deccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

47292cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

robbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hash_sdbmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input30cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #2 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 2']
['  i32.const -8']
['  ...']

doubly_linked_listcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

37358cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

reverse_integercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p90cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 20']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13434cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ternary_short_circuitcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example5_14cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

count_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

factorizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

menor_delescheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exercise1_3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

strindexcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_asan_strncpycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

34592cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

lischeerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

obfstrcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

tmincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13385cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_pthread_abortcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionarmstrong(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input34cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

pointersToIntegerscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionseriessumcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

04_05cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

shellsortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_stack_voidcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exit1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_atexitcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46499cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

h_have_puffscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13551cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc_vmlinuz_load_addrcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46256cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41_Nikhil_Babu-16cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

win-testcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-dynamiccheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

url-parsercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input030cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #2 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 2']
['  i32.const -8']
['  ...']

sumveccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_bigarraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

armstrongcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sparse_matrix_additioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43654cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

copy_stdiocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_nested_4cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

17194cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

input153cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input071cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

stringifycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

__cc_has_minline_all_stringopscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

print50cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

radix_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if5cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bool2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

17432cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2404cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

06cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-strptimecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

765cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fsync_stdoutcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

leftmost-onecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sumevencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

subtract1arraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quote_calc3-scheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quadratic-eq-solvercheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

6121cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

memory4cheerp-analysis.txt
['function #1 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']

symboltablehashcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_bitfieldscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

good_aoutcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mini_sizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functiondivide1(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

40128cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

saturating-addcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

audiogencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

comparacion_doscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

insertion_sort_recursivecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43641cheerp-analysis.txt
['']

threeforthscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41_Nikhil_Babu-28cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

15cheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ne_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

littlecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

variables_localescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sizescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_moneycheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

declare_blockcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

primeinrangecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

file_testcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rock-scissors-papercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0018-funcptr1cheerp-analysis.txt
['function #1 is indirectly called with a fixed table index']
['  i32.const 0']
['  end']
['  ...']

vr-coefscheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 23']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.const 0']
['  i32.store']
['  ...']
['function #14 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43754cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45426cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

chessboardcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43536cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gt_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

memory1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13630cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13397cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

36780cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

19cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #20 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

struct_unioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanf_6cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

troca_refcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

42647cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

2753cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

feature_testscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

ternary_short_circuit_2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Dijkstracheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['function #19 is indirectly called with a fixed table index']
['  global.get 2']
['  i32.load']
['  i32.load']
['  ...']

17940cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

input139cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13426cheerp-analysis.txt
['']

functionevenodd1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

20cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p92cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

while50cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtol_hexcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_safe_stackcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

situacao_protcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13572cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test08cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bst_zigzagcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionfreqcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0015-calls01cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input143cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exercise5_5cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hello_world_fopencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

russian_dollcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

q_rotatecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

interleaving_stringcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

8-evalcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

symmetric_treecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2815cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

malloctestcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sol4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

BubbleSortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2-sideeffectscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13384cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

conversao_de_tiposcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

6039cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

d_cvt_constantcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2873cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43691cheerp-analysis.txt
['']

43637cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

swappedfirst&lastcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41_Nikhil_Babu-21cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

locale_ASCIIcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44990cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46519cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0022-namespaces1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_strtolcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

pbmsrch_largecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionadd3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

19acheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gt_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionprimecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sysconf_phys_pagescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

LongDoubleSupportcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13478cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

safe_heap_2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p75cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

48_bubble_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input151cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

33148cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input111cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

vowelcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

38194cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' None, end idx', ' None']
['    size (of class)', ' 1']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

p65cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39684cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p77cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionproduct2(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

zeroescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_not_takencheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

uaddcheckcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input115cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input082cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input090cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_printf_morecheerp-analysis.txt
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

words_alphabeticalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

comando_do_whilecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43549cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

aifc_decodecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_complexcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multi_digitcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

10646cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43506cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

1-largestcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

TowerOfHanoicheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rpncheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13570cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

merge_intervalscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

media_param2cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36398cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multiple_globalcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13472cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

test_asan_null_derefcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

autoassemblecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nested_breakcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

41_Nikhil_Babu-29cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

media_sem_proccheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input101cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bst_rightcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bug1491666cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

lt_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

unstablecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lu_decomposecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

function_referenciacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ary_begincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0013-struct2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

IndirectCallToExternalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

42cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

diningphilosophercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

t001cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

majoritycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ler_escrever_formatadocheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

46007cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13355cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

insertioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

29949cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_negative_zerocheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionquadratic(2)cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

lerpcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

codesigncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input75cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

subthreadcreatecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0015-calls03cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

38116cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13688cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  class #0']
['    type', ' [] -> []']
['    start idx', ' Some(4), end idx', ' None']
['    size (of class)', ' 0']
['    count (how often class appears)', ' 1']
['  total classes', ' 1']

seriessumcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_zero_multiplicationcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

19310cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

roundrobin_linkedListcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

menu2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bubble_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

geninccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0-maincheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

2073cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_double_i64_conversioncheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_constglobalstructscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

heap_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionsubtract1(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p96cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

embed_datacheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input138cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44620cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dowhile50cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

linear_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

equacao2cheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

decimal_to_any_basecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_container_ofcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

7-precedencecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionisLargest3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sscanf_floatcheerp-analysis.txt
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43719cheerp-analysis.txt
['']

fpointerscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

n_queenscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39731cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

test_langinfocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #17 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #19 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits07cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sync_64_testcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input76cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input074cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fsmapcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bar1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

markscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtoll_octcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

10-controlcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

break_interrompecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43603cheerp-analysis.txt
['']

funbasiccheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

show-bytes-morecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 1']
['  i32.const -8']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

336cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

comentarioscheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

9142cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gen_test_charcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

39617cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13632cheerp-analysis.txt
['']

binary_tree_buildcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13276cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

loopscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

CMakeCCompilerIdcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

44cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

37069cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Radix_Sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13298cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

0004-operators5cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

c18cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

float-lecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

18226cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

frequency_of_charactercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

access_file_after_heap_resizecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

notas_alunoscheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13380cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13550cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

3-commacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_nestedcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

function50evencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_varargscheerp-analysis.txt
['function #10 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-diffcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bucket_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ge_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sort_listcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

two_sumcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Calculatorcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0011-switch1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fibonacci_Searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fpincheerp-analysis.txt
['function #8 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input131cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

empty_expressioncheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

sync_32_testcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

50748cheerp-analysis.txt
['']

3349cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2861cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_openpf5cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input120cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rect_in_histogramcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionsubtract1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cvmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

precedencecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-exp-floatcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

copy_listcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input147cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

vwebp_sdlcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

absoluteloadercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13441cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_newlocalecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

4053cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

example5_4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for_variable_shadowcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

lock1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bubble_sort_2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input39cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0008cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

tree_serdescheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input83cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Pointercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bprintcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #15 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44609cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

operadores_racionalescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

s-structcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_strptime_dayscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

44738cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_ifcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

find_leap_yearcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input084cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sub_negcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

packcccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 29']
['  i32.load']
['  local.tee 2']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  local.get 0']
['  i32.load offset=4']
['  local.get 0']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  local.get 0']
['  i32.const 0']
['  i32.store offset=8']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  local.get 0']
['  i32.load']
['  call 21']
['  ...']
['function #14 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.const 0']
['  i32.store']
['  ...']
['function #16 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

__cc_has_mno_sse2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43599cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

37384cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

while_multi_statementcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13525cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dowhilecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_localeconvcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rh_assignmentcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

6cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_sintvarscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

07cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

trap_watercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

2821cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

global_shadowedcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fun_in_exprcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39847cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

spirographcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gen_init_cpiocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_memfs_fsynccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input119cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c6cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

print_groupcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

recursive_bubble_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0002-global1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

s-sleep2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

shortest_palindromecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sort_arraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

foo1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13388cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

nested_scopecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

comando_forcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

p69cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

variaveischeerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

le_truecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

spacescheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

later_declcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

dowhile2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nested_opscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

return_in_whilecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

37362cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

menorq20cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0006-while1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

DEScheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits08cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

dividecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

first&lastdigitcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input100cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45541cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

41089cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

example5_16cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

reversenumbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

perfectcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

foo2cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test-extraer2cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

andcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

u_boot_binman_embed_smcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

assert-failcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for5cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

1944cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input130cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input137cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

word_breakcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

for_nested_scopecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

abs-cmovcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13331cheerp-analysis.txt
['']

test_globaldoublescheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

memory2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

err_syntax12cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0013-struct5cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13431cheerp-analysis.txt
['']

09cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

file2includecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

m7makecharscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

funperfect2cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

17371cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

43638cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

exercise4_4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_floatcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hash_crc32cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

foldrcheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c1cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

bubble_sort_recursioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_ubsan_minimal_too_many_errorscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

47290cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13719cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

14332cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

precedence_4cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

43605cheerp-analysis.txt
['']

host_byte_ordercheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13288cheerp-analysis.txt
['function #8 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_getoptcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

recursive_factorialcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

14795cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0019-condexpr1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

39160cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

permutation_sequencecheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_openpf4cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionadd2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

permutationscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0004-operators4cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

functionsubtract3(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

enumeracoescheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nota7cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hdfmtcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13387cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

p68cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input149cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-rewb-sysvcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

46275cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input132cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

dijkstra_largecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

gentranslitcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

intersectioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

good-echocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

posnegativecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

dfs_bfscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41969cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

operador_atribuicaocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

unique_bstcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

8767cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-rewb-bsdcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13390cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0014-array1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

smallz4catcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

singlepasscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

check_stat1cheerp-analysis.txt
['function #4 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

InsertionSortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

container_testcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

6195cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

size_floatcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

putvarcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

union2cheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test-getsuboptcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hello_world_loop_malloccheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 7']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input118cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_mod_globalstructcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

quote_calc4-scheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

odd_even_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0028-inits12cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input049cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rm_dupcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

if_nested_5cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input091cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

is_palindromecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fibonacci_fastcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #15 is indirectly called with a fixed table index']
['  global.get 21']
['  i32.load']
['  local.tee 2']
['  ...']
['function #21 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36750cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

caesar_ciphercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

fatorial2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13383cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

rselectcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

kth_bstcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

subjectsarraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_hello_argccheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionarmstrongcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

print_continuous_sequence_sumcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

preopen_populatescheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

input148cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

cjk_variantscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtoll_hexcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

percentagecheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

operador_ternariocheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13389cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

menu3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

semanacheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

main_argscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multi_nestingcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

0018cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

28474cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

__mtag_tag_zero_regioncheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

9-evalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

victimcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

permutation_in_stringcheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

comparaabcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input99cheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input080cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

truncate_testcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

c11-2cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

45458cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

multiple_ifcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

clasificacioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 17']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

defines3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

02acheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_if_elsecheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43655cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

functiondivide2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

36276cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

43757cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

is-fd-opencheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 13']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  call 26']
['  i32.const 88']
['  i32.store']
['  ...']

p56cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  global.get 0']
['  local.tee 1']
['  i32.const -8']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

err_syntax18cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 6']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

operacioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

combinationscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

decimal_to_octalcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionaverage1cheerp-analysis.txt
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_memcpy3cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

21cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

SparseMatrix_Or_notcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43769cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

41_Nikhil_Babu-30cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 18']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

rand_r_testcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

fileHandlingcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

change_casecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13313cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

test_perrarcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ArrayADTcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

floyd_cycle_detection_algorithmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

copyfilecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

decode_wayscheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functiondivision(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

ternary_searchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

audiomatchcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #3 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

34262cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

array_stackcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

while_single_statementcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

hexadecimal_to_octal2cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

sign-extendcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input081cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

13396cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

continue_desviocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

hamming_codecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

atomic_64_testcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

longest_subsequencecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

table10numcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43649cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

word_laddercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

mkorigensplcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 4']
['  i32.const 0']
['  i32.store']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.load']
['  local.get 0']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtoll_bincheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

binary_insertion_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #12 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_double_varargscheerp-analysis.txt
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

unused_expcheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

bufdemocheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

list_cyclecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

imv2pgmcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

comparacioncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

stdin_testcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 5']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

input116cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

forward_decl_argscheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

10745cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_erfcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

KrishnamurthyNumbercheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_strtoldcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 15']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43489cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

or_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

13277cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

39700cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

lt_falsecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

45529cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 9']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

max_subarraycheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functionproduct(1)cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

calc_code_defaultcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 19']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

nested_whilecheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

Activity_Selection_Greedy_Approachcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #13 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

Shell_sortcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

can_bus_receivecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #6 is indirectly called with a fixed table index']
['  global.get 11']
['  i32.load']
['  local.tee 2']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

43617cheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']
['']

char_first_appear_oncecheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 3']
['  i32.const 0']
['  i32.store']
['  ...']
['function #7 is indirectly called with a fixed table index']
['  global.get 8']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0012-pointers1cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

test_sscanf_ncheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #9 is indirectly called with a fixed table index']
['  global.get 14']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

0006cheerp-analysis.txt
['']
['call_indirect target equivalence classes (CFI equivalence classes)', '']
['  total classes', ' 0']

comando_breakcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #4 is indirectly called with a fixed table index']
['  global.get 12']
['  i32.load']
['  local.tee 2']
['  ...']
['function #10 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

functioncountcheerp-analysis.txt
['function #0 is indirectly called with a fixed table index']
['  unreachable']
['  end']
['  ...']
['function #5 is indirectly called with a fixed table index']
['  global.get 10']
['  i32.load']
['  local.tee 2']
['  ...']
['function #11 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

test_minmaxcheerp-analysis.txt
['function #6 is indirectly called with a fixed table index']
['  global.get 16']
['  i32.load']
['  local.tee 2']
['  ...']
['function #8 is indirectly called with a fixed table index']
['  i32.const -1']
['  end']
['  ...']

