Input file: simple_readcheerp.wasm
  binary:    simple_readcheerp.wasm

Functions:           17
  Imported:           4
  Non-imported:      13
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          2
  Of those, unique functions:     2 (i.e., at least 11.76% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:       801
  call:              14 (1.75% of all instructions)
  call_indirect:      0 (0.00% of all instructions, 0.00% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     1 × global.get   1 × global.set   2 total (50/50% split)
  #1 i32
     init: i32.const 1049208
     4 × global.get   0 × global.set   4 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      1 (7.69% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   13(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"simple_readcheerp.wasm",13,100,"[]",0,0

Counts of function types (6 unique types):
    1  (5.88%) × [] -> [i32]
    2 (11.76%) × [] -> []
    2 (11.76%) × [i32] -> []
    2 (11.76%) × [i32, i32] -> []
    2 (11.76%) × [i32, i32, i32, i32] -> [i32]
    8 (47.06%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 0 (0.00% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  2 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
  0 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  total classes: 0

