Input file: tic_tac_toecheerp.wasm
  binary:    tic_tac_toecheerp.wasm

Functions:          135
  Imported:           4
  Non-imported:     131
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         22
  Of those, unique functions:    22 (i.e., at least 16.30% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     24999
  call:             336 (1.34% of all instructions)
  call_indirect:     45 (0.18% of all instructions, 11.81% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
      68 × global.get   162 × global.set   230 total (30/70% split)
  #1 i32
     init: i32.const 1049216
       0 × global.get     0 × global.set     0 total
  #2 i32
     init: i32.const 1050240
      19 × global.get     0 × global.set    19 total (100/0% split)
  #3 i32
     init: i32.const 1049224
       0 × global.get     0 × global.set     0 total
  #4 i32
     init: i32.const 1051717
      16 × global.get     0 × global.set    16 total (100/0% split)
  #5 i32
     init: i32.const 1050244
      14 × global.get     0 × global.set    14 total (100/0% split)
  #6 i32
     init: i32.const 1052104
      14 × global.get     0 × global.set    14 total (100/0% split)
  #7 i32
     init: i32.const 1051936
      11 × global.get     0 × global.set    11 total (100/0% split)
  #8 i32
     init: i32.const 1051728
      11 × global.get     0 × global.set    11 total (100/0% split)
  #9 i32
     init: i32.const 1051832
      11 × global.get     0 × global.set    11 total (100/0% split)
  #10 i32
     init: i32.const 1051715
       9 × global.get     0 × global.set     9 total (100/0% split)
  #11 i32
     init: i32.const 1051721
       9 × global.get     0 × global.set     9 total (100/0% split)
  #12 i32
     init: i32.const 1051713
       9 × global.get     0 × global.set     9 total (100/0% split)
  #13 i32
     init: i32.const 1052048
       9 × global.get     0 × global.set     9 total (100/0% split)
  #14 i32
     init: i32.const 1051719
       9 × global.get     0 × global.set     9 total (100/0% split)
  #15 i32
     init: i32.const 1051716
       7 × global.get     0 × global.set     7 total (100/0% split)
  #16 i32
     init: i32.const 1051714
       7 × global.get     0 × global.set     7 total (100/0% split)
  #17 i32
     init: i32.const 1051718
       7 × global.get     0 × global.set     7 total (100/0% split)
  #18 i32
     init: i32.const 1051720
       7 × global.get     0 × global.set     7 total (100/0% split)
  #19 i32
     init: i32.const 1051391
       6 × global.get     0 × global.set     6 total (100/0% split)
  #20 i32
     init: i32.const 1050575
       4 × global.get     0 × global.set     4 total (100/0% split)
  #21 i32
     init: i32.const 1051324
       4 × global.get     0 × global.set     4 total (100/0% split)
  #22 f64
     init: f64.const 0
       4 × global.get     0 × global.set     4 total (100/0% split)
  #23 i32
     init: i32.const 1050264
       4 × global.get     0 × global.set     4 total (100/0% split)
  #24 f64
     init: f64.const 0.5
       4 × global.get     0 × global.set     4 total (100/0% split)
  #25 i32
     init: i32.const 1050292
       4 × global.get     0 × global.set     4 total (100/0% split)
  #26 i32
     init: i32.const 1052096
       4 × global.get     0 × global.set     4 total (100/0% split)
  #27 i32
     init: i32.const 1050276
       4 × global.get     0 × global.set     4 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     32 (24.43% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
  131(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"tic_tac_toecheerp.wasm",131,100,"[]",0,0

Counts of function types (20 unique types):
    1  (0.74%) × [] -> [f64]
    1  (0.74%) × [i32] -> [f32]
    1  (0.74%) × [i32, i32, i32] -> [f64]
    1  (0.74%) × [i32, i32, i32, i32] -> []
    1  (0.74%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.74%) × [i32, f64, i32, i32] -> [i32]
    1  (0.74%) × [f64] -> [i32]
    1  (0.74%) × [f64] -> [f64]
    2  (1.48%) × [i32, i32] -> [f64]
    2  (1.48%) × [i32, i32, i32, i32, i32] -> []
    3  (2.22%) × [i32, i32, i32] -> []
    5  (3.70%) × [i32, i32, i32, i32, i32] -> [i32]
    6  (4.44%) × [] -> []
    6  (4.44%) × [i32] -> []
    6  (4.44%) × [i32, i32] -> []
    7  (5.19%) × [] -> [i32]
   16 (11.85%) × [i32] -> [i32]
   22 (16.30%) × [i32, i32, i32, i32] -> [i32]
   26 (19.26%) × [i32, i32] -> [i32]
   26 (19.26%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 19 (14.50% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    6]   length:   6   unique funcs:    6   type: [i32, i32] -> [i32]
         range: [    7,   12]   length:   6   unique funcs:    6   type: [i32, i32, i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   14,   17]   length:   4   unique funcs:    4   type: [i32, i32, i32] -> [i32]
         range: [   18,   18]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   19,   19]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   20,   21]   length:   2   unique funcs:    2   type: [i32, i32, i32, i32, i32] -> []
  8 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    12 × unrestricted                         source:   i32.load   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
     7 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
     1 × unrestricted                         source:      other   type [i32, i32, i32, i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      4                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     15                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              1
  11 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #4 is indirectly called with a fixed table index
  global.get 26
  i32.load
  local.tee 2
  ...
function #15 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32, i32, i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: Some(15), end idx: Some(15)
    size (of class): 1
    count (how often class appears): 1
  class #3
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 2
  class #4
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #5
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 2
  class #6
    type: [i32, i32] -> [i32]
    start idx: Some(4), end idx: Some(4)
    size (of class): 1
    count (how often class appears): 5
  class #7
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 6
  class #8
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 6
  class #9
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 7
  class #10
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 12
  total classes: 11

CSV data for further analysis: tic_tac_toecheerp.wasm,24999,336,45,11.811024,135,22,16,11,1,12,4.090909090909091,2,1004,225,22.410358,195,19.42231,136,13.545816

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"tic_tac_toecheerp.wasm",0,1,1,"local.(get|tee)"
"tic_tac_toecheerp.wasm",1,2,1,"other"
"tic_tac_toecheerp.wasm",2,1,1,"i32.const"
"tic_tac_toecheerp.wasm",3,6,2,"local.(get|tee)"
"tic_tac_toecheerp.wasm",4,1,2,"local.(get|tee)"
"tic_tac_toecheerp.wasm",5,0,2,"i32.const"
"tic_tac_toecheerp.wasm",6,1,5,"i32.const"
"tic_tac_toecheerp.wasm",7,6,6,"i32.load"
"tic_tac_toecheerp.wasm",8,6,6,"local.(get|tee)"
"tic_tac_toecheerp.wasm",9,4,7,"i32.load"
"tic_tac_toecheerp.wasm",10,6,12,"i32.load"
