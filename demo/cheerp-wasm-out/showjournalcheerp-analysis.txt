Input file: showjournalcheerp.wasm
  binary:    showjournalcheerp.wasm

Functions:           96
  Imported:           6
  Non-imported:      90
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         15
  Of those, unique functions:    15 (i.e., at least 15.62% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12001
  call:             211 (1.76% of all instructions)
  call_indirect:     32 (0.27% of all instructions, 13.17% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     29 × global.get   78 × global.set  107 total (27/73% split)
  #1 i32
     init: i32.const 1048856
      0 × global.get    0 × global.set    0 total
  #2 i32
     init: i32.const 1049892
     19 × global.get    0 × global.set   19 total (100/0% split)
  #3 i32
     init: i32.const 1048864
      0 × global.get    0 × global.set    0 total
  #4 i32
     init: i32.const 1050772
     14 × global.get    0 × global.set   14 total (100/0% split)
  #5 i32
     init: i32.const 1050608
     10 × global.get    0 × global.set   10 total (100/0% split)
  #6 i32
     init: i32.const 1050504
     10 × global.get    0 × global.set   10 total (100/0% split)
  #7 i32
     init: i32.const 1050400
     10 × global.get    0 × global.set   10 total (100/0% split)
  #8 i32
     init: i32.const 1050728
      9 × global.get    0 × global.set    9 total (100/0% split)
  #9 i32
     init: i32.const 1050712
      8 × global.get    0 × global.set    8 total (100/0% split)
  #10 i32
     init: i32.const 1048832
      5 × global.get    0 × global.set    5 total (100/0% split)
  #11 i32
     init: i32.const 1050716
      5 × global.get    0 × global.set    5 total (100/0% split)
  #12 i32
     init: i32.const 1049884
      5 × global.get    0 × global.set    5 total (100/0% split)
  #13 i32
     init: i32.const 1048836
      4 × global.get    0 × global.set    4 total (100/0% split)
  #14 i32
     init: i32.const 1050768
      4 × global.get    0 × global.set    4 total (100/0% split)
  #15 i32
     init: i32.const 1050003
      4 × global.get    0 × global.set    4 total (100/0% split)
  #16 i32
     init: i32.const 1049964
      4 × global.get    0 × global.set    4 total (100/0% split)
  #17 i32
     init: i32.const 1049888
      4 × global.get    0 × global.set    4 total (100/0% split)
  #18 i32
     init: i32.const 1048840
      4 × global.get    0 × global.set    4 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (22.22% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   90(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"showjournalcheerp.wasm",90,100,"[]",0,0

Counts of function types (11 unique types):
    1  (1.04%) × [i32, i32, i32, i32] -> []
    2  (2.08%) × [i32, i32, i32] -> []
    3  (3.12%) × [] -> [i32]
    5  (5.21%) × [] -> []
    5  (5.21%) × [i32, i32] -> []
    5  (5.21%) × [i32, i32, i32, i32, i32] -> [i32]
    7  (7.29%) × [i32] -> []
   12 (12.50%) × [i32] -> [i32]
   17 (17.71%) × [i32, i32, i32] -> [i32]
   17 (17.71%) × [i32, i32, i32, i32] -> [i32]
   22 (22.92%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 18 (20.00% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    4]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [    5,    9]   length:   5   unique funcs:    5   type: [i32, i32, i32, i32] -> [i32]
         range: [   10,   10]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   11,   12]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   14,   14]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> []
         functions matching by type (regardless whether they are in the table):                7
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     7 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
    10 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              0
     2 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      4                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     12                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  10 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #4 is indirectly called with a fixed table index
  global.get 14
  i32.load
  local.tee 2
  ...
function #12 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: Some(12), end idx: Some(12)
    size (of class): 1
    count (how often class appears): 1
  class #4
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 2
  class #5
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #6
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 2
  class #7
    type: [i32, i32] -> [i32]
    start idx: Some(4), end idx: Some(4)
    size (of class): 1
    count (how often class appears): 5
  class #8
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 7
  class #9
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 10
  total classes: 10

CSV data for further analysis: showjournalcheerp.wasm,12001,211,32,13.168724,96,15,5,10,1,10,3.2,2,516,123,23.83721,103,19.96124,35,6.7829456

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"showjournalcheerp.wasm",0,1,1,"local.(get|tee)"
"showjournalcheerp.wasm",1,1,1,"local.(get|tee)"
"showjournalcheerp.wasm",2,0,1,"i32.const"
"showjournalcheerp.wasm",3,1,1,"i32.const"
"showjournalcheerp.wasm",4,4,2,"local.(get|tee)"
"showjournalcheerp.wasm",5,1,2,"local.(get|tee)"
"showjournalcheerp.wasm",6,0,2,"i32.const"
"showjournalcheerp.wasm",7,1,5,"i32.const"
"showjournalcheerp.wasm",8,5,7,"i32.load"
"showjournalcheerp.wasm",9,5,10,"local.(get|tee)"
