Input file: test-strptimecheerp.wasm
  binary:    test-strptimecheerp.wasm

Functions:           11
  Imported:           0
  Non-imported:      11
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          1
  Of those, unique functions:     1 (i.e., at least 9.09% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      2934
  call:              35 (1.19% of all instructions)
  call_indirect:      0 (0.00% of all instructions, 0.00% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
      2 × global.get   15 × global.set   17 total (12/88% split)
  #1 i32
     init: i32.const 1049080
      3 × global.get    0 × global.set    3 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      2 (18.18% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   11(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test-strptimecheerp.wasm",11,100,"[]",0,0

Counts of function types (5 unique types):
    1  (9.09%) × [] -> []
    1  (9.09%) × [i32] -> [i32]
    1  (9.09%) × [i32, i32, i32, i32] -> [i32]
    2 (18.18%) × [] -> [i32]
    6 (54.55%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 0 (0.00% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
  1 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
  0 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  total classes: 0

