Input file: apinamescheerp.wasm
  binary:    apinamescheerp.wasm

Functions:           93
  Imported:           6
  Non-imported:      87
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         16
  Of those, unique functions:    16 (i.e., at least 17.20% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13402
  call:             193 (1.44% of all instructions)
  call_indirect:     52 (0.39% of all instructions, 21.22% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     32 × global.get   83 × global.set  115 total (28/72% split)
  #1 i32
     init: i32.const 1048864
      0 × global.get    0 × global.set    0 total
  #2 i32
     init: i32.const 1049892
     21 × global.get    0 × global.set   21 total (100/0% split)
  #3 i32
     init: i32.const 1048872
      0 × global.get    0 × global.set    0 total
  #4 i32
     init: i32.const 1051764
     14 × global.get    0 × global.set   14 total (100/0% split)
  #5 i32
     init: i32.const 1051760
     12 × global.get    0 × global.set   12 total (100/0% split)
  #6 i32
     init: i32.const 1051828
     12 × global.get    0 × global.set   12 total (100/0% split)
  #7 i32
     init: i32.const 1051552
     10 × global.get    0 × global.set   10 total (100/0% split)
  #8 i32
     init: i32.const 1051448
     10 × global.get    0 × global.set   10 total (100/0% split)
  #9 i32
     init: i32.const 1051656
     10 × global.get    0 × global.set   10 total (100/0% split)
  #10 i32
     init: i32.const 1051776
      9 × global.get    0 × global.set    9 total (100/0% split)
  #11 i32
     init: i32.const 1048840
      5 × global.get    0 × global.set    5 total (100/0% split)
  #12 i32
     init: i32.const 1052860
      5 × global.get    0 × global.set    5 total (100/0% split)
  #13 i32
     init: i32.const 1050369
      2 × global.get    0 × global.set    2 total (100/0% split)
  #14 i32
     init: i32.const 1050314
      4 × global.get    0 × global.set    4 total (100/0% split)
  #15 i32
     init: i32.const 1051816
      4 × global.get    0 × global.set    4 total (100/0% split)
  #16 i32
     init: i32.const 1048848
      4 × global.get    0 × global.set    4 total (100/0% split)
  #17 i32
     init: i32.const 1048844
      4 × global.get    0 × global.set    4 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     16 (18.39% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   87(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"apinamescheerp.wasm",87,100,"[]",0,0

Counts of function types (11 unique types):
    2  (2.15%) × [i32, i32, i32, i32] -> []
    3  (3.23%) × [] -> [i32]
    3  (3.23%) × [i32, i32, i32] -> []
    4  (4.30%) × [i32, i32, i32, i32, i32] -> [i32]
    6  (6.45%) × [] -> []
    6  (6.45%) × [i32] -> []
    6  (6.45%) × [i32, i32] -> []
    9  (9.68%) × [i32] -> [i32]
   13 (13.98%) × [i32, i32, i32, i32] -> [i32]
   18 (19.35%) × [i32, i32, i32] -> [i32]
   23 (24.73%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 19 (21.84% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    5]   length:   5   unique funcs:    5   type: [i32, i32] -> [i32]
         range: [    6,   10]   length:   5   unique funcs:    5   type: [i32, i32, i32, i32] -> [i32]
         range: [   11,   12]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   14,   14]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   15,   15]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> []
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    22 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
     6 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
    10 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              0
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      4                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              1
     2 × fixed index:     10                  source:  i32.const   type: [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     12                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  11 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #4 is indirectly called with a fixed table index
  global.get 15
  i32.load
  local.tee 2
  ...
function #10 is indirectly called with a fixed table index
  global.get 6
  i32.const 0
  i32.store
  ...
function #12 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #3
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #4
    type: [i32, i32, i32] -> [i32]
    start idx: Some(12), end idx: Some(12)
    size (of class): 1
    count (how often class appears): 1
  class #5
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #6
    type: [i32, i32, i32, i32] -> [i32]
    start idx: Some(10), end idx: Some(10)
    size (of class): 1
    count (how often class appears): 2
  class #7
    type: [i32, i32] -> [i32]
    start idx: Some(4), end idx: Some(4)
    size (of class): 1
    count (how often class appears): 5
  class #8
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 6
  class #9
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 10
  class #10
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 22
  total classes: 11

CSV data for further analysis: apinamescheerp.wasm,13402,193,52,21.22449,93,16,5,11,1,22,4.7272727272727275,2,918,234,25.490196,202,22.004356,30,3.267974

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"apinamescheerp.wasm",0,1,1,"local.(get|tee)"
"apinamescheerp.wasm",1,1,1,"local.(get|tee)"
"apinamescheerp.wasm",2,0,1,"i32.const"
"apinamescheerp.wasm",3,0,1,"i32.const"
"apinamescheerp.wasm",4,1,1,"i32.const"
"apinamescheerp.wasm",5,1,2,"local.(get|tee)"
"apinamescheerp.wasm",6,1,2,"i32.const"
"apinamescheerp.wasm",7,1,5,"i32.const"
"apinamescheerp.wasm",8,5,6,"i32.load"
"apinamescheerp.wasm",9,5,10,"local.(get|tee)"
"apinamescheerp.wasm",10,5,22,"local.(get|tee)"
