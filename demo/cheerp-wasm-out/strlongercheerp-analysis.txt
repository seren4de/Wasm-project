Input file: strlongercheerp.wasm
  binary:    strlongercheerp.wasm

Functions:           65
  Imported:           3
  Non-imported:      62
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         12
  Of those, unique functions:    12 (i.e., at least 18.46% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      7195
  call:              95 (1.32% of all instructions)
  call_indirect:     19 (0.26% of all instructions, 16.67% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     10 × global.get   27 × global.set   37 total (27/73% split)
  #1 i32
     init: i32.const 1048860
      0 × global.get    0 × global.set    0 total
  #2 i32
     init: i32.const 1048868
      0 × global.get    0 × global.set    0 total
  #3 i32
     init: i32.const 1050452
     12 × global.get    0 × global.set   12 total (100/0% split)
  #4 i32
     init: i32.const 1050400
      9 × global.get    0 × global.set    9 total (100/0% split)
  #5 i32
     init: i32.const 1050288
      5 × global.get    0 × global.set    5 total (100/0% split)
  #6 i32
     init: i32.const 1050184
      5 × global.get    0 × global.set    5 total (100/0% split)
  #7 i32
     init: i32.const 1050080
      5 × global.get    0 × global.set    5 total (100/0% split)
  #8 i32
     init: i32.const 1049937
      4 × global.get    0 × global.set    4 total (100/0% split)
  #9 i32
     init: i32.const 1048844
      4 × global.get    0 × global.set    4 total (100/0% split)
  #10 i32
     init: i32.const 1048840
      4 × global.get    0 × global.set    4 total (100/0% split)
  #11 i32
     init: i32.const 1048836
      4 × global.get    0 × global.set    4 total (100/0% split)
  #12 i32
     init: i32.const 1050440
      4 × global.get    0 × global.set    4 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      9 (14.52% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   62(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"strlongercheerp.wasm",62,100,"[]",0,0

Counts of function types (11 unique types):
    1  (1.54%) × [i32, i32, i32, i32] -> []
    2  (3.08%) × [i32, i32, i32] -> []
    3  (4.62%) × [] -> []
    3  (4.62%) × [] -> [i32]
    3  (4.62%) × [i32] -> []
    3  (4.62%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (6.15%) × [i32, i32] -> []
    7 (10.77%) × [i32] -> [i32]
    9 (13.85%) × [i32, i32, i32, i32] -> [i32]
   12 (18.46%) × [i32, i32, i32] -> [i32]
   18 (27.69%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 10 (16.13% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    4]   length:   4   unique funcs:    4   type: [i32, i32, i32, i32] -> [i32]
         range: [    5,    7]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [    9,   10]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     2 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      6                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     10                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  7 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #6 is indirectly called with a fixed table index
  global.get 12
  i32.load
  local.tee 2
  ...
function #10 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: Some(10), end idx: Some(10)
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 2
  class #3
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 2
  class #4
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #5
    type: [i32, i32] -> [i32]
    start idx: Some(6), end idx: Some(6)
    size (of class): 1
    count (how often class appears): 5
  class #6
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 6
  total classes: 7

CSV data for further analysis: strlongercheerp.wasm,7195,95,19,16.666666,65,12,4,7,1,6,2.7142857142857144,2,219,58,26.484018,46,21.004566,8,3.652968

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"strlongercheerp.wasm",0,0,1,"i32.const"
"strlongercheerp.wasm",1,1,1,"i32.const"
"strlongercheerp.wasm",2,3,2,"local.(get|tee)"
"strlongercheerp.wasm",3,4,2,"i32.load"
"strlongercheerp.wasm",4,1,2,"local.(get|tee)"
"strlongercheerp.wasm",5,1,5,"i32.const"
"strlongercheerp.wasm",6,4,6,"local.(get|tee)"
