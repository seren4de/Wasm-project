Input file: spec2defcheerp.wasm
  binary:    spec2defcheerp.wasm

Functions:          149
  Imported:           6
  Non-imported:     143
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         16
  Of those, unique functions:    16 (i.e., at least 10.74% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     25129
  call:             525 (2.09% of all instructions)
  call_indirect:     51 (0.20% of all instructions, 8.85% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     163 × global.get   393 × global.set   556 total (29/71% split)
  #1 i32
     init: i32.const 1050260
      47 × global.get     0 × global.set    47 total (100/0% split)
  #2 i32
     init: i32.const 1049204
       0 × global.get     0 × global.set     0 total
  #3 i32
     init: i32.const 1054776
      22 × global.get     0 × global.set    22 total (100/0% split)
  #4 i32
     init: i32.const 1054764
      20 × global.get     0 × global.set    20 total (100/0% split)
  #5 i32
     init: i32.const 1049212
       0 × global.get     0 × global.set     0 total
  #6 i32
     init: i32.const 1054552
      13 × global.get     0 × global.set    13 total (100/0% split)
  #7 i32
     init: i32.const 1054656
      13 × global.get     0 × global.set    13 total (100/0% split)
  #8 i32
     init: i32.const 1054448
      13 × global.get     0 × global.set    13 total (100/0% split)
  #9 i32
     init: i32.const 1054832
      12 × global.get     0 × global.set    12 total (100/0% split)
  #10 i32
     init: i32.const 1054440
      10 × global.get     0 × global.set    10 total (100/0% split)
  #11 i32
     init: i32.const 1054784
       9 × global.get     0 × global.set     9 total (100/0% split)
  #12 i32
     init: i32.const 1054436
       9 × global.get     0 × global.set     9 total (100/0% split)
  #13 i32
     init: i32.const 1054432
       8 × global.get     0 × global.set     8 total (100/0% split)
  #14 i32
     init: i32.const 1050256
       8 × global.get     0 × global.set     8 total (100/0% split)
  #15 i32
     init: i32.const 1054828
       6 × global.get     0 × global.set     6 total (100/0% split)
  #16 i32
     init: i32.const 1054760
       5 × global.get     0 × global.set     5 total (100/0% split)
  #17 i32
     init: i32.const 1050236
       5 × global.get     0 × global.set     5 total (100/0% split)
  #18 i32
     init: i32.const 1050232
       4 × global.get     0 × global.set     4 total (100/0% split)
  #19 i32
     init: i32.const 1052023
       4 × global.get     0 × global.set     4 total (100/0% split)
  #20 i32
     init: i32.const 1053935
       4 × global.get     0 × global.set     4 total (100/0% split)
  #21 i32
     init: i32.const 1050309
       4 × global.get     0 × global.set     4 total (100/0% split)
  #22 i32
     init: i32.const 1050524
       4 × global.get     0 × global.set     4 total (100/0% split)
  #23 i32
     init: i32.const 1049188
       4 × global.get     0 × global.set     4 total (100/0% split)
  #24 i32
     init: i32.const 1049184
       4 × global.get     0 × global.set     4 total (100/0% split)
  #25 i32
     init: i32.const 1054824
       4 × global.get     0 × global.set     4 total (100/0% split)
  #26 i32
     init: i32.const 1050841
       4 × global.get     0 × global.set     4 total (100/0% split)
  #27 i32
     init: i32.const 1052934
       3 × global.get     0 × global.set     3 total (100/0% split)
  #28 f64
     init: f64.const 0.5
       3 × global.get     0 × global.set     3 total (100/0% split)
  #29 i32
     init: i32.const 1054772
       3 × global.get     0 × global.set     3 total (100/0% split)
  #30 i32
     init: i32.const 1053862
       3 × global.get     0 × global.set     3 total (100/0% split)
  #31 i32
     init: i32.const 1052672
       3 × global.get     0 × global.set     3 total (100/0% split)
  #32 i32
     init: i32.const 1050240
       3 × global.get     0 × global.set     3 total (100/0% split)
  #33 i32
     init: i32.const 1050264
       3 × global.get     0 × global.set     3 total (100/0% split)
  #34 i32
     init: i32.const 1053110
       3 × global.get     0 × global.set     3 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     35 (24.48% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
  143(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"spec2defcheerp.wasm",143,100,"[]",0,0

Counts of function types (17 unique types):
    1  (0.67%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (0.67%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.67%) × [i32, f64, i32, i32] -> [i32]
    1  (0.67%) × [i32, f64, i32, i32, i32, i32, i32] -> [i32]
    1  (0.67%) × [i32, f64, i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.67%) × [f64] -> [i32]
    2  (1.34%) × [i32, i32, i32] -> []
    2  (1.34%) × [i32, i32, i32, i32] -> []
    3  (2.01%) × [] -> [i32]
    5  (3.36%) × [] -> []
    6  (4.03%) × [i32, i32, i32, i32, i32] -> [i32]
    9  (6.04%) × [i32] -> []
   12  (8.05%) × [i32, i32] -> []
   18 (12.08%) × [i32, i32, i32, i32] -> [i32]
   19 (12.75%) × [i32] -> [i32]
   30 (20.13%) × [i32, i32, i32] -> [i32]
   37 (24.83%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 19 (13.29% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    4]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [    5,   10]   length:   6   unique funcs:    6   type: [i32, i32, i32, i32] -> [i32]
         range: [   11,   12]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   14,   14]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   15,   15]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               37
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     7 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
    29 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               30
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      4                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               37
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              1
     2 × fixed index:     10                  source:  i32.const   type: [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     12                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               30
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  10 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #4 is indirectly called with a fixed table index
  global.get 25
  i32.load
  local.tee 2
  ...
function #10 is indirectly called with a fixed table index
  global.get 9
  i32.const 0
  i32.store
  ...
function #12 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: Some(12), end idx: Some(12)
    size (of class): 1
    count (how often class appears): 1
  class #4
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 2
  class #5
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #6
    type: [i32, i32, i32, i32] -> [i32]
    start idx: Some(10), end idx: Some(10)
    size (of class): 1
    count (how often class appears): 2
  class #7
    type: [i32, i32] -> [i32]
    start idx: Some(4), end idx: Some(4)
    size (of class): 1
    count (how often class appears): 5
  class #8
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 7
  class #9
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 29
  total classes: 10

CSV data for further analysis: spec2defcheerp.wasm,25129,525,51,8.854167,149,16,6,10,1,29,5.1,2,1043,264,25.311602,236,22.627037,42,4.0268455

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"spec2defcheerp.wasm",0,1,1,"local.(get|tee)"
"spec2defcheerp.wasm",1,1,1,"local.(get|tee)"
"spec2defcheerp.wasm",2,0,1,"i32.const"
"spec2defcheerp.wasm",3,1,1,"i32.const"
"spec2defcheerp.wasm",4,4,2,"local.(get|tee)"
"spec2defcheerp.wasm",5,1,2,"local.(get|tee)"
"spec2defcheerp.wasm",6,1,2,"i32.const"
"spec2defcheerp.wasm",7,1,5,"i32.const"
"spec2defcheerp.wasm",8,6,7,"i32.load"
"spec2defcheerp.wasm",9,6,29,"local.(get|tee)"
