Input file: calc_vmlinuz_load_addrcheerp.wasm
  binary:    calc_vmlinuz_load_addrcheerp.wasm

Functions:          120
  Imported:           3
  Non-imported:     117
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         18
  Of those, unique functions:    18 (i.e., at least 15.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     22512
  call:             266 (1.18% of all instructions)
  call_indirect:     39 (0.17% of all instructions, 12.79% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     31 × global.get   86 × global.set  117 total (26/74% split)
  #1 i32
     init: i32.const 1049260
      0 × global.get    0 × global.set    0 total
  #2 i32
     init: i32.const 1049268
      0 × global.get    0 × global.set    0 total
  #3 i32
     init: i32.const 1053244
     14 × global.get    0 × global.set   14 total (100/0% split)
  #4 i32
     init: i32.const 1050284
     14 × global.get    0 × global.set   14 total (100/0% split)
  #5 i32
     init: i32.const 1049236
     10 × global.get    0 × global.set   10 total (100/0% split)
  #6 i32
     init: i32.const 1053080
      9 × global.get    0 × global.set    9 total (100/0% split)
  #7 i32
     init: i32.const 1053192
      9 × global.get    0 × global.set    9 total (100/0% split)
  #8 i32
     init: i32.const 1052872
      9 × global.get    0 × global.set    9 total (100/0% split)
  #9 i32
     init: i32.const 1052976
      9 × global.get    0 × global.set    9 total (100/0% split)
  #10 i32
     init: i32.const 1049244
      4 × global.get    0 × global.set    4 total (100/0% split)
  #11 f64
     init: f64.const 0.5
      4 × global.get    0 × global.set    4 total (100/0% split)
  #12 f64
     init: f64.const 0
      4 × global.get    0 × global.set    4 total (100/0% split)
  #13 i32
     init: i32.const 1050292
      4 × global.get    0 × global.set    4 total (100/0% split)
  #14 i32
     init: i32.const 1053232
      4 × global.get    0 × global.set    4 total (100/0% split)
  #15 i32
     init: i32.const 1050919
      4 × global.get    0 × global.set    4 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     27 (23.08% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
  117(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"calc_vmlinuz_load_addrcheerp.wasm",117,100,"[]",0,0

Counts of function types (19 unique types):
    1  (0.83%) × [i32] -> [f32]
    1  (0.83%) × [i32, i32, i32] -> [f64]
    1  (0.83%) × [i32, i32, i32, i32] -> []
    1  (0.83%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.83%) × [i32, f64, i32, i32] -> [i32]
    1  (0.83%) × [f64] -> [i32]
    1  (0.83%) × [f64] -> [f64]
    2  (1.67%) × [i32, i32] -> [f64]
    2  (1.67%) × [i32, i32, i32, i32, i32] -> []
    3  (2.50%) × [] -> []
    3  (2.50%) × [] -> [i32]
    3  (2.50%) × [i32, i32, i32] -> []
    4  (3.33%) × [i32] -> []
    5  (4.17%) × [i32, i32, i32, i32, i32] -> [i32]
    7  (5.83%) × [i32, i32] -> []
   10  (8.33%) × [i32] -> [i32]
   20 (16.67%) × [i32, i32, i32, i32] -> [i32]
   26 (21.67%) × [i32, i32, i32] -> [i32]
   28 (23.33%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 16 (13.68% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    6]   length:   6   unique funcs:    6   type: [i32, i32, i32, i32] -> [i32]
         range: [    7,   10]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   12,   14]   length:   3   unique funcs:    3   type: [i32, i32, i32] -> [i32]
         range: [   15,   15]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   16,   17]   length:   2   unique funcs:    2   type: [i32, i32, i32, i32, i32] -> []
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     8 × unrestricted                         source:   i32.load   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               28
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               28
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     7 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     5 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    6
         functions matching by type and present in permissable table index range:              6
     1 × unrestricted                         source:      other   type [i32, i32, i32, i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      9                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               28
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     13                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              1
  10 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #9 is indirectly called with a fixed table index
  global.get 14
  i32.load
  local.tee 2
  ...
function #13 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i32, i32, i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: Some(13), end idx: Some(13)
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 2
  class #3
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #4
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 2
  class #5
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 5
  class #6
    type: [i32, i32] -> [i32]
    start idx: Some(9), end idx: Some(9)
    size (of class): 1
    count (how often class appears): 5
  class #7
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 6
    count (how often class appears): 6
  class #8
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 7
  class #9
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 8
  total classes: 10

CSV data for further analysis: calc_vmlinuz_load_addrcheerp.wasm,22512,266,39,12.786885,120,18,13,10,1,8,3.9,5,870,156,17.931034,137,15.747127,83,9.54023

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"calc_vmlinuz_load_addrcheerp.wasm",0,2,1,"other"
"calc_vmlinuz_load_addrcheerp.wasm",1,1,1,"i32.const"
"calc_vmlinuz_load_addrcheerp.wasm",2,4,2,"local.(get|tee)"
"calc_vmlinuz_load_addrcheerp.wasm",3,1,2,"local.(get|tee)"
"calc_vmlinuz_load_addrcheerp.wasm",4,0,2,"i32.const"
"calc_vmlinuz_load_addrcheerp.wasm",5,6,5,"i32.load"
"calc_vmlinuz_load_addrcheerp.wasm",6,1,5,"i32.const"
"calc_vmlinuz_load_addrcheerp.wasm",7,6,6,"local.(get|tee)"
"calc_vmlinuz_load_addrcheerp.wasm",8,3,7,"i32.load"
"calc_vmlinuz_load_addrcheerp.wasm",9,4,8,"i32.load"
