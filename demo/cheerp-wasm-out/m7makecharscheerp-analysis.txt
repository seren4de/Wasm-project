Input file: m7makecharscheerp.wasm
  binary:    m7makecharscheerp.wasm

Functions:          109
  Imported:           4
  Non-imported:     105
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         14
  Of those, unique functions:    14 (i.e., at least 12.84% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15502
  call:             261 (1.68% of all instructions)
  call_indirect:     29 (0.19% of all instructions, 10.00% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     20 × global.get   62 × global.set   82 total (24/76% split)
  #1 i32
     init: i32.const 1048840
      0 × global.get    0 × global.set    0 total
  #2 i32
     init: i32.const 1049896
     38 × global.get    0 × global.set   38 total (100/0% split)
  #3 i32
     init: i32.const 1048848
      0 × global.get    0 × global.set    0 total
  #4 i32
     init: i32.const 1077860
     14 × global.get    0 × global.set   14 total (100/0% split)
  #5 i32
     init: i32.const 1077672
     12 × global.get    0 × global.set   12 total (100/0% split)
  #6 i32
     init: i32.const 1077464
     12 × global.get    0 × global.set   12 total (100/0% split)
  #7 i32
     init: i32.const 1077568
     12 × global.get    0 × global.set   12 total (100/0% split)
  #8 i32
     init: i32.const 1077816
      9 × global.get    0 × global.set    9 total (100/0% split)
  #9 i32
     init: i32.const 1077796
      8 × global.get    0 × global.set    8 total (100/0% split)
  #10 i32
     init: i32.const 1077788
      7 × global.get    0 × global.set    7 total (100/0% split)
  #11 i32
     init: i32.const 1077792
      7 × global.get    0 × global.set    7 total (100/0% split)
  #12 i32
     init: i32.const 1077784
      7 × global.get    0 × global.set    7 total (100/0% split)
  #13 i32
     init: i32.const 1077780
      6 × global.get    0 × global.set    6 total (100/0% split)
  #14 i32
     init: i32.const 1077776
      6 × global.get    0 × global.set    6 total (100/0% split)
  #15 i32
     init: i32.const 1077456
      6 × global.get    0 × global.set    6 total (100/0% split)
  #16 i32
     init: i32.const 1077804
      5 × global.get    0 × global.set    5 total (100/0% split)
  #17 i32
     init: i32.const 1077800
      5 × global.get    0 × global.set    5 total (100/0% split)
  #18 i32
     init: i32.const 1049868
      4 × global.get    0 × global.set    4 total (100/0% split)
  #19 i32
     init: i32.const 1049876
      4 × global.get    0 × global.set    4 total (100/0% split)
  #20 i32
     init: i32.const 1058728
      4 × global.get    0 × global.set    4 total (100/0% split)
  #21 i32
     init: i32.const 1077856
      4 × global.get    0 × global.set    4 total (100/0% split)
  #22 i32
     init: i32.const 1049872
      4 × global.get    0 × global.set    4 total (100/0% split)
  #23 i32
     init: i32.const 1058265
      4 × global.get    0 × global.set    4 total (100/0% split)
  #24 i32
     init: i32.const 1077460
      3 × global.get    0 × global.set    3 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     16 (15.24% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
  105(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"m7makecharscheerp.wasm",105,100,"[]",0,0

Counts of function types (13 unique types):
    1  (0.92%) × [i32, i32, i32, i32] -> []
    1  (0.92%) × [i32, i32, i32, i32, i32] -> []
    1  (0.92%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    3  (2.75%) × [] -> [i32]
    4  (3.67%) × [] -> []
    5  (4.59%) × [i32, i32, i32] -> []
    5  (4.59%) × [i32, i32, i32, i32, i32] -> [i32]
    7  (6.42%) × [i32, i32] -> []
    8  (7.34%) × [i32] -> []
   13 (11.93%) × [i32] -> [i32]
   16 (14.68%) × [i32, i32, i32, i32] -> [i32]
   22 (20.18%) × [i32, i32] -> [i32]
   23 (21.10%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 15 (14.29% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    4]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [    5,    8]   length:   4   unique funcs:    4   type: [i32, i32, i32, i32] -> [i32]
         range: [    9,    9]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   10,   11]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
    10 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              0
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      4                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     10                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  9 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #4 is indirectly called with a fixed table index
  global.get 21
  i32.load
  local.tee 2
  ...
function #10 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: Some(10), end idx: Some(10)
    size (of class): 1
    count (how often class appears): 1
  class #4
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 2
  class #5
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #6
    type: [i32, i32] -> [i32]
    start idx: Some(4), end idx: Some(4)
    size (of class): 1
    count (how often class appears): 5
  class #7
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 6
  class #8
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 10
  total classes: 9

CSV data for further analysis: m7makecharscheerp.wasm,15502,261,29,10,109,14,4,9,1,10,3.2222222222222223,2,484,100,20.661158,81,16.735537,24,4.958678

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"m7makecharscheerp.wasm",0,1,1,"local.(get|tee)"
"m7makecharscheerp.wasm",1,0,1,"i32.const"
"m7makecharscheerp.wasm",2,0,1,"i32.const"
"m7makecharscheerp.wasm",3,1,1,"i32.const"
"m7makecharscheerp.wasm",4,4,2,"local.(get|tee)"
"m7makecharscheerp.wasm",5,1,2,"local.(get|tee)"
"m7makecharscheerp.wasm",6,1,5,"i32.const"
"m7makecharscheerp.wasm",7,4,6,"i32.load"
"m7makecharscheerp.wasm",8,4,10,"local.(get|tee)"
