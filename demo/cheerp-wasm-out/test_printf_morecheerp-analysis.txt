Input file: test_printf_morecheerp.wasm
  binary:    test_printf_morecheerp.wasm

Functions:           89
  Imported:           3
  Non-imported:      86
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         13
  Of those, unique functions:    13 (i.e., at least 14.61% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15799
  call:             207 (1.31% of all instructions)
  call_indirect:     40 (0.25% of all instructions, 16.19% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     25 × global.get   90 × global.set  115 total (22/78% split)
  #1 i32
     init: i32.const 1049160
      0 × global.get    0 × global.set    0 total
  #2 i32
     init: i32.const 1049168
      0 × global.get    0 × global.set    0 total
  #3 i32
     init: i32.const 1050756
     12 × global.get    0 × global.set   12 total (100/0% split)
  #4 i32
     init: i32.const 1050704
      9 × global.get    0 × global.set    9 total (100/0% split)
  #5 i32
     init: i32.const 1050188
      8 × global.get    0 × global.set    8 total (100/0% split)
  #6 i32
     init: i32.const 1050488
      5 × global.get    0 × global.set    5 total (100/0% split)
  #7 i32
     init: i32.const 1050384
      5 × global.get    0 × global.set    5 total (100/0% split)
  #8 i32
     init: i32.const 1050592
      5 × global.get    0 × global.set    5 total (100/0% split)
  #9 i32
     init: i32.const 1049144
      4 × global.get    0 × global.set    4 total (100/0% split)
  #10 i32
     init: i32.const 1049148
      4 × global.get    0 × global.set    4 total (100/0% split)
  #11 f64
     init: f64.const 1.345
      2 × global.get    0 × global.set    2 total (100/0% split)
  #12 i32
     init: i32.const 1050294
      4 × global.get    0 × global.set    4 total (100/0% split)
  #13 i32
     init: i32.const 1050744
      4 × global.get    0 × global.set    4 total (100/0% split)
  #14 i32
     init: i32.const 1050280
      2 × global.get    0 × global.set    2 total (100/0% split)
  #15 f64
     init: f64.const 0.5
      3 × global.get    0 × global.set    3 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     18 (20.93% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   86(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_printf_morecheerp.wasm",86,100,"[]",0,0

Counts of function types (15 unique types):
    1  (1.12%) × [i32, i32, i32, i32] -> []
    1  (1.12%) × [i32, f64, i32, i32] -> [i32]
    1  (1.12%) × [i32, f64, i32, i32, i32, i32, i32] -> [i32]
    1  (1.12%) × [i32, f64, i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.12%) × [f64] -> [i32]
    2  (2.25%) × [i32, i32, i32] -> []
    3  (3.37%) × [] -> []
    4  (4.49%) × [] -> [i32]
    4  (4.49%) × [i32] -> []
    4  (4.49%) × [i32, i32, i32, i32, i32] -> [i32]
    5  (5.62%) × [i32, i32] -> []
   11 (12.36%) × [i32] -> [i32]
   12 (13.48%) × [i32, i32, i32, i32] -> [i32]
   19 (21.35%) × [i32, i32] -> [i32]
   20 (22.47%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 11 (12.79% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    5]   length:   5   unique funcs:    5   type: [i32, i32, i32, i32] -> [i32]
         range: [    6,    8]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [    9,   10]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     5 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
    25 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     5 × fixed index:      8                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      9                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  6 call_indirect patterns in total

function #8 is indirectly called with a fixed table index
  global.get 13
  i32.load
  local.tee 2
  ...
function #9 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i32, i32] -> [i32]
    start idx: Some(9), end idx: Some(9)
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 2
  class #2
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #3
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 5
  class #4
    type: [i32, i32] -> [i32]
    start idx: Some(8), end idx: Some(8)
    size (of class): 1
    count (how often class appears): 5
  class #5
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 25
  total classes: 6

CSV data for further analysis: test_printf_morecheerp.wasm,15799,207,40,16.194332,89,13,5,6,1,25,6.666666666666667,5,521,175,33.589252,164,31.477926,25,4.7984643

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_printf_morecheerp.wasm",0,1,1,"i32.const"
"test_printf_morecheerp.wasm",1,3,2,"local.(get|tee)"
"test_printf_morecheerp.wasm",2,1,2,"local.(get|tee)"
"test_printf_morecheerp.wasm",3,5,5,"i32.load"
"test_printf_morecheerp.wasm",4,1,5,"i32.const"
"test_printf_morecheerp.wasm",5,5,25,"local.(get|tee)"
