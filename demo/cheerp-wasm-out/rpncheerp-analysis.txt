Input file: rpncheerp.wasm
  binary:    rpncheerp.wasm

Functions:          100
  Imported:           3
  Non-imported:      97
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         14
  Of those, unique functions:    14 (i.e., at least 14.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     16454
  call:             235 (1.43% of all instructions)
  call_indirect:     42 (0.26% of all instructions, 15.16% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     24 × global.get   90 × global.set  114 total (21/79% split)
  #1 i32
     init: i32.const 1049160
      0 × global.get    0 × global.set    0 total
  #2 f64
     init: f64.const 0
     24 × global.get    0 × global.set   24 total (100/0% split)
  #3 i32
     init: i32.const 1049168
      0 × global.get    0 × global.set    0 total
  #4 i32
     init: i32.const 1052820
     12 × global.get    0 × global.set   12 total (100/0% split)
  #5 f64
     init: f64.const 4294967296
     14 × global.get    0 × global.set   14 total (100/0% split)
  #6 i32
     init: i32.const 1052768
      9 × global.get    0 × global.set    9 total (100/0% split)
  #7 i32
     init: i32.const 1050616
      8 × global.get    0 × global.set    8 total (100/0% split)
  #8 i32
     init: i32.const 1050512
      8 × global.get    0 × global.set    8 total (100/0% split)
  #9 i32
     init: i32.const 1050192
      8 × global.get    0 × global.set    8 total (100/0% split)
  #10 i32
     init: i32.const 1050408
      8 × global.get    0 × global.set    8 total (100/0% split)
  #11 i32
     init: i32.const 1052824
      6 × global.get    0 × global.set    6 total (100/0% split)
  #12 i32
     init: i32.const 1050323
      4 × global.get    0 × global.set    4 total (100/0% split)
  #13 i32
     init: i32.const 1049140
      4 × global.get    0 × global.set    4 total (100/0% split)
  #14 i32
     init: i32.const 1052808
      4 × global.get    0 × global.set    4 total (100/0% split)
  #15 i32
     init: i32.const 1049144
      4 × global.get    0 × global.set    4 total (100/0% split)
  #16 i32
     init: i32.const 1049148
      4 × global.get    0 × global.set    4 total (100/0% split)
  #17 f64
     init: f64.const 0.5
      3 × global.get    0 × global.set    3 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (20.62% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   97(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"rpncheerp.wasm",97,100,"[]",0,0

Counts of function types (19 unique types):
    1  (1.00%) × [] -> [f64]
    1  (1.00%) × [i32, i32, i32, i32] -> []
    1  (1.00%) × [i32, f64, i32, i32] -> [i32]
    1  (1.00%) × [i32, f64, i32, i32, i32, i32, i32] -> [i32]
    1  (1.00%) × [i32, f64, i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.00%) × [f64] -> []
    1  (1.00%) × [f64] -> [i32]
    1  (1.00%) × [f64, i32] -> [f64]
    2  (2.00%) × [i32] -> [f64]
    3  (3.00%) × [] -> []
    3  (3.00%) × [i32] -> []
    4  (4.00%) × [] -> [i32]
    4  (4.00%) × [i32, i32, i32] -> []
    4  (4.00%) × [i32, i32, i32, i32, i32] -> [i32]
    5  (5.00%) × [i32, i32] -> []
   10 (10.00%) × [i32, i32, i32, i32] -> [i32]
   17 (17.00%) × [i32] -> [i32]
   19 (19.00%) × [i32, i32, i32] -> [i32]
   21 (21.00%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 13 (13.40% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    4]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [    5,    8]   length:   4   unique funcs:    4   type: [i32, i32, i32, i32] -> [i32]
         range: [    9,   10]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
    25 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     5 × fixed index:      4                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      9                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  7 call_indirect patterns in total

function #4 is indirectly called with a fixed table index
  global.get 14
  i32.load
  local.tee 2
  ...
function #9 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: Some(9), end idx: Some(9)
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 2
  class #3
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #4
    type: [i32, i32] -> [i32]
    start idx: Some(4), end idx: Some(4)
    size (of class): 1
    count (how often class appears): 5
  class #5
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 6
  class #6
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 25
  total classes: 7

CSV data for further analysis: rpncheerp.wasm,16454,235,42,15.162455,100,14,4,7,1,25,6,2,501,157,31.337326,141,28.143713,24,4.790419

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"rpncheerp.wasm",0,1,1,"local.(get|tee)"
"rpncheerp.wasm",1,1,1,"i32.const"
"rpncheerp.wasm",2,4,2,"local.(get|tee)"
"rpncheerp.wasm",3,1,2,"local.(get|tee)"
"rpncheerp.wasm",4,1,5,"i32.const"
"rpncheerp.wasm",5,4,6,"i32.load"
"rpncheerp.wasm",6,4,25,"local.(get|tee)"
