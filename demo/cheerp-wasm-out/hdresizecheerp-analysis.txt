Input file: hdresizecheerp.wasm
  binary:    hdresizecheerp.wasm

Functions:          112
  Imported:           4
  Non-imported:     108
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         15
  Of those, unique functions:    15 (i.e., at least 13.39% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     18566
  call:             283 (1.52% of all instructions)
  call_indirect:     47 (0.25% of all instructions, 14.24% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
      35 × global.get   128 × global.set   163 total (21/79% split)
  #1 i32
     init: i32.const 1049132
       0 × global.get     0 × global.set     0 total
  #2 i32
     init: i32.const 1050192
      24 × global.get     0 × global.set    24 total (100/0% split)
  #3 i32
     init: i32.const 1049140
       0 × global.get     0 × global.set     0 total
  #4 i32
     init: i32.const 1053292
      14 × global.get     0 × global.set    14 total (100/0% split)
  #5 i32
     init: i32.const 1053136
       9 × global.get     0 × global.set     9 total (100/0% split)
  #6 i32
     init: i32.const 1053248
       9 × global.get     0 × global.set     9 total (100/0% split)
  #7 i32
     init: i32.const 1053032
       9 × global.get     0 × global.set     9 total (100/0% split)
  #8 i32
     init: i32.const 1052928
       9 × global.get     0 × global.set     9 total (100/0% split)
  #9 i32
     init: i32.const 1049120
       4 × global.get     0 × global.set     4 total (100/0% split)
  #10 i32
     init: i32.const 1053288
       4 × global.get     0 × global.set     4 total (100/0% split)
  #11 i32
     init: i32.const 1050168
       4 × global.get     0 × global.set     4 total (100/0% split)
  #12 i32
     init: i32.const 1051111
       4 × global.get     0 × global.set     4 total (100/0% split)
  #13 i32
     init: i32.const 1050172
       4 × global.get     0 × global.set     4 total (100/0% split)
  #14 f64
     init: f64.const 0.5
       3 × global.get     0 × global.set     3 total (100/0% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     21 (19.44% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
  108(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"hdresizecheerp.wasm",108,100,"[]",0,0

Counts of function types (15 unique types):
    1  (0.89%) × [i32, i32, i32, i32] -> []
    1  (0.89%) × [i32, f64, i32, i32] -> [i32]
    1  (0.89%) × [i32, f64, i32, i32, i32, i32, i32] -> [i32]
    1  (0.89%) × [i32, f64, i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.89%) × [f64] -> [i32]
    2  (1.79%) × [i32, i32, i32] -> []
    3  (2.68%) × [] -> [i32]
    3  (2.68%) × [i32] -> []
    4  (3.57%) × [] -> []
    6  (5.36%) × [i32, i32] -> []
    6  (5.36%) × [i32, i32, i32, i32, i32] -> [i32]
   17 (15.18%) × [i32] -> [i32]
   19 (16.96%) × [i32, i32, i32, i32] -> [i32]
   22 (19.64%) × [i32, i32] -> [i32]
   25 (22.32%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 15 (13.89% of all functions)

Table elements initialization:
         range: [    0,    0]   length:   1   unique funcs:    1   type: [] -> []
         range: [    1,    4]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [    5,    9]   length:   5   unique funcs:    5   type: [i32, i32, i32, i32] -> [i32]
         range: [   10,   11]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [   14,   14]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source:   i32.load   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
    29 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    5
         functions matching by type and present in permissable table index range:              5
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:      0                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               25
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              0
     5 × fixed index:      4                  source:  i32.const   type: [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              1
     1 × fixed index:     11                  source:  i32.const   type: [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               25
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              1
  8 call_indirect patterns in total

function #0 is indirectly called with a fixed table index
  unreachable
  end
  ...
function #4 is indirectly called with a fixed table index
  global.get 10
  i32.load
  local.tee 2
  ...
function #11 is indirectly called with a fixed table index
  i32.const -1
  end
  ...

call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: Some(0), end idx: Some(0)
    size (of class): 0
    count (how often class appears): 1
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: Some(11), end idx: Some(11)
    size (of class): 1
    count (how often class appears): 1
  class #3
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 2
  class #4
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 2
  class #5
    type: [i32, i32] -> [i32]
    start idx: Some(4), end idx: Some(4)
    size (of class): 1
    count (how often class appears): 5
  class #6
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 6
  class #7
    type: [i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 5
    count (how often class appears): 29
  total classes: 8

CSV data for further analysis: hdresizecheerp.wasm,18566,283,47,14.242424,112,15,5,8,1,29,5.875,2,898,210,23.385302,192,21.380846,30,3.3407571

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"hdresizecheerp.wasm",0,1,1,"local.(get|tee)"
"hdresizecheerp.wasm",1,0,1,"i32.const"
"hdresizecheerp.wasm",2,1,1,"i32.const"
"hdresizecheerp.wasm",3,4,2,"local.(get|tee)"
"hdresizecheerp.wasm",4,1,2,"local.(get|tee)"
"hdresizecheerp.wasm",5,1,5,"i32.const"
"hdresizecheerp.wasm",6,5,6,"i32.load"
"hdresizecheerp.wasm",7,5,29,"local.(get|tee)"
