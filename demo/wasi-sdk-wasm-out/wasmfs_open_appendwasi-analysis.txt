Input file: wasmfs_open_appendwasi.wasm
  binary:    wasmfs_open_appendwasi.wasm

Functions:           83
  Imported:          10
  Non-imported:      73
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 4.82% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13711
  call:             224 (1.63% of all instructions)
  call_indirect:     13 (0.09% of all instructions, 5.49% of all calls)

Globals:
  #0 i32
     init: i32.const 71152
     21 × global.get   41 × global.set   62 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     21 (28.77% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.37%) × [-880]
    1  (1.37%) × [-256]
    1  (1.37%) × [-208]
    2  (2.74%) × [-32]
   13 (17.81%) × [-16]
   55 (75.34%) × []
  functions with stack allocation total: 18 (24.66%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"wasmfs_open_appendwasi.wasm",1,1.369863,"[-880]",-880,880
sp_csv_line:"wasmfs_open_appendwasi.wasm",1,1.369863,"[-256]",-256,256
sp_csv_line:"wasmfs_open_appendwasi.wasm",1,1.369863,"[-208]",-208,208
sp_csv_line:"wasmfs_open_appendwasi.wasm",2,2.739726,"[-32]",-32,32
sp_csv_line:"wasmfs_open_appendwasi.wasm",13,17.80822,"[-16]",-16,16
sp_csv_line:"wasmfs_open_appendwasi.wasm",55,75.34247,"[]",0,0

Counts of function types (18 unique types):
    1  (1.20%) × [i32, i32, i32] -> []
    1  (1.20%) × [i32, i32, i32, i32] -> []
    1  (1.20%) × [i32, i32, i32, i32, i32] -> []
    1  (1.20%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.20%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.20%) × [i32, i64] -> []
    1  (1.20%) × [f64, i32] -> [f64]
    2  (2.41%) × [] -> [i32]
    2  (2.41%) × [i32] -> [i64]
    2  (2.41%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.41%) × [i32, i64, i32] -> [i64]
    2  (2.41%) × [i32, i64, i32, i32] -> [i32]
    6  (7.23%) × [i32] -> []
    6  (7.23%) × [i32, i32, i32, i32] -> [i32]
    9 (10.84%) × [] -> []
   12 (14.46%) × [i32] -> [i32]
   15 (18.07%) × [i32, i32] -> [i32]
   18 (21.69%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 4 (5.48% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 2

CSV data for further analysis: wasmfs_open_appendwasi.wasm,13711,224,13,5.485232,83,4,3,2,4,9,6.5,9,170,22,12.941176,22,12.941176,22,12.941176

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"wasmfs_open_appendwasi.wasm",0,1,4,"i32.load"
"wasmfs_open_appendwasi.wasm",1,2,9,"i32.load"
