Input file: s-unrollwasi.wasm
  binary:    s-unrollwasi.wasm

Functions:           35
  Imported:           3
  Non-imported:      32
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          0
  Of those, unique functions:     0 (i.e., at least 0.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      6710
  call:              64 (0.95% of all instructions)
  call_indirect:     10 (0.15% of all instructions, 13.51% of all calls)

Globals:
  #0 i32
     init: i32.const 67472
      8 × global.get   14 × global.set   22 total (36/64% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      8 (25.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (3.12%) × [-112]
    4 (12.50%) × [-16]
   27 (84.38%) × []
  functions with stack allocation total: 5 (15.62%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-unrollwasi.wasm",1,3.125,"[-112]",-112,112
sp_csv_line:"s-unrollwasi.wasm",4,12.5,"[-16]",-16,16
sp_csv_line:"s-unrollwasi.wasm",27,84.375,"[]",0,0

Counts of function types (9 unique types):
    1  (2.86%) × [i32, i32, i32, i64] -> [i64]
    1  (2.86%) × [i32, i64] -> []
    1  (2.86%) × [i32, i64, i64, i64, i64] -> []
    2  (5.71%) × [i32, i32, i32] -> [i32]
    3  (8.57%) × [] -> [i32]
    6 (17.14%) × [] -> []
    6 (17.14%) × [i32] -> []
    6 (17.14%) × [i32, i32] -> [i32]
    9 (25.71%) × [i32] -> [i32]

Functions with at least one call_indirect: 3 (9.38% of all functions)

Table elements initialization:
  0 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     6 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                0
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 6
  total classes: 2

CSV data for further analysis: s-unrollwasi.wasm,6710,64,10,13.513514,35,0,0,2,4,6,5,6,12,0,0,0,0,0,0

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"s-unrollwasi.wasm",0,0,4,"i32.load"
"s-unrollwasi.wasm",1,0,6,"i32.load"
