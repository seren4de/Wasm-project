Input file: cvmwasi.wasm
  binary:    cvmwasi.wasm

Functions:          135
  Imported:          12
  Non-imported:     123
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 3.70% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     22647
  call:             374 (1.65% of all instructions)
  call_indirect:     24 (0.11% of all instructions, 6.03% of all calls)

Globals:
  #0 i32
     init: i32.const 75472
     50 × global.get   85 × global.set  135 total (37/63% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     50 (40.65% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.81%) × [-880]
    1  (0.81%) × [-256]
    1  (0.81%) × [-208]
    4  (3.25%) × [-32]
   14 (11.38%) × [-16]
  102 (82.93%) × []
  functions with stack allocation total: 21 (17.07%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"cvmwasi.wasm",1,0.8130081,"[-880]",-880,880
sp_csv_line:"cvmwasi.wasm",1,0.8130081,"[-256]",-256,256
sp_csv_line:"cvmwasi.wasm",1,0.8130081,"[-208]",-208,208
sp_csv_line:"cvmwasi.wasm",4,3.2520325,"[-32]",-32,32
sp_csv_line:"cvmwasi.wasm",14,11.382113,"[-16]",-16,16
sp_csv_line:"cvmwasi.wasm",102,82.92683,"[]",0,0

Counts of function types (16 unique types):
    1  (0.74%) × [i32, i32, i32] -> []
    1  (0.74%) × [i32, i32, i32, i32, i32] -> []
    1  (0.74%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.74%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.74%) × [f64, i32] -> [f64]
    2  (1.48%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.48%) × [i32, i64, i32] -> [i64]
    2  (1.48%) × [i32, i64, i32, i32] -> [i32]
    3  (2.22%) × [i32, i32] -> []
    4  (2.96%) × [] -> [i32]
    9  (6.67%) × [i32, i32, i32, i32] -> [i32]
   10  (7.41%) × [] -> []
   10  (7.41%) × [i32] -> []
   23 (17.04%) × [i32, i32, i32] -> [i32]
   28 (20.74%) × [i32] -> [i32]
   37 (27.41%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 11 (8.94% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               28
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    15 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     7 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 7
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 15
  total classes: 4

CSV data for further analysis: cvmwasi.wasm,22647,374,24,6.030151,135,5,5,4,1,15,6,7,389,54,13.881748,54,13.881748,53,13.624679

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"cvmwasi.wasm",0,1,1,"i32.load"
"cvmwasi.wasm",1,1,1,"local.(get|tee)"
"cvmwasi.wasm",2,1,7,"i32.load"
"cvmwasi.wasm",3,3,15,"i32.load"
