Input file: 05_06wasi.wasm
  binary:    05_06wasi.wasm

Functions:           69
  Imported:           6
  Non-imported:      63
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 8.70% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15487
  call:             191 (1.23% of all instructions)
  call_indirect:     27 (0.17% of all instructions, 12.39% of all calls)

Globals:
  #0 i32
     init: i32.const 72000
     19 × global.get   38 × global.set   57 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     19 (30.16% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.59%) × [-880]
    1  (1.59%) × [-736]
    1  (1.59%) × [-704]
    1  (1.59%) × [-256]
    1  (1.59%) × [-208]
    1  (1.59%) × [-32]
    9 (14.29%) × [-16]
   48 (76.19%) × []
  functions with stack allocation total: 15 (23.81%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"05_06wasi.wasm",1,1.5873016,"[-880]",-880,880
sp_csv_line:"05_06wasi.wasm",1,1.5873016,"[-736]",-736,736
sp_csv_line:"05_06wasi.wasm",1,1.5873016,"[-704]",-704,704
sp_csv_line:"05_06wasi.wasm",1,1.5873016,"[-256]",-256,256
sp_csv_line:"05_06wasi.wasm",1,1.5873016,"[-208]",-208,208
sp_csv_line:"05_06wasi.wasm",1,1.5873016,"[-32]",-32,32
sp_csv_line:"05_06wasi.wasm",9,14.285714,"[-16]",-16,16
sp_csv_line:"05_06wasi.wasm",48,76.190475,"[]",0,0

Counts of function types (16 unique types):
    1  (1.45%) × [i32, i32, i32] -> []
    1  (1.45%) × [i32, i32, i32, i32] -> []
    1  (1.45%) × [i32, i32, i32, i32, i32] -> []
    1  (1.45%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.45%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (1.45%) × [f64, i32] -> [f64]
    2  (2.90%) × [] -> [i32]
    2  (2.90%) × [i32, i32] -> []
    2  (2.90%) × [i32, i64, i32] -> [i64]
    2  (2.90%) × [i32, i64, i32, i32] -> [i32]
    5  (7.25%) × [i32] -> []
    5  (7.25%) × [i32, i32, i32, i32] -> [i32]
    7 (10.14%) × [] -> []
   12 (17.39%) × [i32, i32] -> [i32]
   13 (18.84%) × [i32] -> [i32]
   13 (18.84%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 8 (12.70% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    6]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    12 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 11
  class #2
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 12
  total classes: 3

CSV data for further analysis: 05_06wasi.wasm,15487,191,27,12.385321,69,6,4,3,4,12,9,11,295,49,16.61017,49,16.61017,37,12.542373

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"05_06wasi.wasm",0,1,4,"i32.load"
"05_06wasi.wasm",1,3,11,"i32.load"
"05_06wasi.wasm",2,1,12,"local.(get|tee)"
