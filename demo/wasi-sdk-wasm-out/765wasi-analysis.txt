Input file: 765wasi.wasm
  binary:    765wasi.wasm

Functions:          105
  Imported:          12
  Non-imported:      93
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 5.71% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     14682
  call:             274 (1.87% of all instructions)
  call_indirect:     18 (0.12% of all instructions, 6.16% of all calls)

Globals:
  #0 i32
     init: i32.const 72304
     24 × global.get   45 × global.set   69 total (35/65% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     24 (25.81% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.08%) × [-880]
    1  (1.08%) × [-256]
    1  (1.08%) × [-208]
    1  (1.08%) × [-128]
    4  (4.30%) × [-32]
   13 (13.98%) × [-16]
   72 (77.42%) × []
  functions with stack allocation total: 21 (22.58%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"765wasi.wasm",1,1.0752689,"[-880]",-880,880
sp_csv_line:"765wasi.wasm",1,1.0752689,"[-256]",-256,256
sp_csv_line:"765wasi.wasm",1,1.0752689,"[-208]",-208,208
sp_csv_line:"765wasi.wasm",1,1.0752689,"[-128]",-128,128
sp_csv_line:"765wasi.wasm",4,4.3010755,"[-32]",-32,32
sp_csv_line:"765wasi.wasm",13,13.978495,"[-16]",-16,16
sp_csv_line:"765wasi.wasm",72,77.41936,"[]",0,0

Counts of function types (15 unique types):
    1  (0.95%) × [i32, i32, i32] -> []
    1  (0.95%) × [i32, i32, i32, i32, i32] -> []
    1  (0.95%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.95%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.95%) × [f64, i32] -> [f64]
    2  (1.90%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.90%) × [i32, i64, i32] -> [i64]
    2  (1.90%) × [i32, i64, i32, i32] -> [i32]
    3  (2.86%) × [] -> [i32]
    7  (6.67%) × [i32, i32, i32, i32] -> [i32]
    8  (7.62%) × [i32] -> []
   10  (9.52%) × [] -> []
   18 (17.14%) × [i32] -> [i32]
   21 (20.00%) × [i32, i32, i32] -> [i32]
   27 (25.71%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (6.45% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    3,    4]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 11
  total classes: 3

CSV data for further analysis: 765wasi.wasm,14682,274,18,6.1643834,105,6,6,3,1,11,6,6,261,51,19.54023,51,19.54023,51,19.54023

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"765wasi.wasm",0,1,1,"i32.load"
"765wasi.wasm",1,1,6,"i32.load"
"765wasi.wasm",2,4,11,"i32.load"
