Input file: words_alphabeticalwasi.wasm
  binary:    words_alphabeticalwasi.wasm

Functions:          113
  Imported:          12
  Non-imported:     101
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 3.54% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15797
  call:             282 (1.79% of all instructions)
  call_indirect:     20 (0.13% of all instructions, 6.62% of all calls)

Globals:
  #0 i32
     init: i32.const 70576
     31 × global.get   60 × global.set   91 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     31 (30.69% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.99%) × [-880]
    1  (0.99%) × [-256]
    1  (0.99%) × [-208]
    4  (3.96%) × [-32]
   14 (13.86%) × [-16]
   80 (79.21%) × []
  functions with stack allocation total: 21 (20.79%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"words_alphabeticalwasi.wasm",1,0.990099,"[-880]",-880,880
sp_csv_line:"words_alphabeticalwasi.wasm",1,0.990099,"[-256]",-256,256
sp_csv_line:"words_alphabeticalwasi.wasm",1,0.990099,"[-208]",-208,208
sp_csv_line:"words_alphabeticalwasi.wasm",4,3.960396,"[-32]",-32,32
sp_csv_line:"words_alphabeticalwasi.wasm",14,13.861386,"[-16]",-16,16
sp_csv_line:"words_alphabeticalwasi.wasm",80,79.207924,"[]",0,0

Counts of function types (17 unique types):
    1  (0.88%) × [i32, i32] -> []
    1  (0.88%) × [i32, i32, i32] -> []
    1  (0.88%) × [i32, i32, i32, i32] -> []
    1  (0.88%) × [i32, i32, i32, i32, i32] -> []
    1  (0.88%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.88%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.88%) × [f64, i32] -> [f64]
    2  (1.77%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.77%) × [i32, i64, i32] -> [i64]
    2  (1.77%) × [i32, i64, i32, i32] -> [i32]
    3  (2.65%) × [] -> [i32]
    6  (5.31%) × [i32, i32, i32, i32] -> [i32]
   10  (8.85%) × [i32] -> []
   11  (9.73%) × [] -> []
   20 (17.70%) × [i32, i32, i32] -> [i32]
   23 (20.35%) × [i32] -> [i32]
   27 (23.89%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 8 (7.92% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 13
  total classes: 3

CSV data for further analysis: words_alphabeticalwasi.wasm,15797,282,20,6.6225166,113,4,4,3,1,13,6.666666666666667,6,295,33,11.18644,33,11.18644,33,11.18644

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"words_alphabeticalwasi.wasm",0,1,1,"i32.load"
"words_alphabeticalwasi.wasm",1,1,6,"i32.load"
"words_alphabeticalwasi.wasm",2,2,13,"i32.load"
