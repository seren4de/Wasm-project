Input file: k_means_clusteringwasi.wasm
  binary:    k_means_clusteringwasi.wasm

Functions:           71
  Imported:           6
  Non-imported:      65
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 5.63% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     17894
  call:             188 (1.05% of all instructions)
  call_indirect:     13 (0.07% of all instructions, 6.47% of all calls)

Globals:
  #0 i32
     init: i32.const 73984
     20 × global.get   36 × global.set   56 total (36/64% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (30.77% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.54%) × [-880]
    1  (1.54%) × [-560]
    1  (1.54%) × [-256]
    1  (1.54%) × [-208]
    1  (1.54%) × [-48]
    1  (1.54%) × [-32]
    8 (12.31%) × [-16]
   51 (78.46%) × []
  functions with stack allocation total: 14 (21.54%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"k_means_clusteringwasi.wasm",1,1.5384616,"[-880]",-880,880
sp_csv_line:"k_means_clusteringwasi.wasm",1,1.5384616,"[-560]",-560,560
sp_csv_line:"k_means_clusteringwasi.wasm",1,1.5384616,"[-256]",-256,256
sp_csv_line:"k_means_clusteringwasi.wasm",1,1.5384616,"[-208]",-208,208
sp_csv_line:"k_means_clusteringwasi.wasm",1,1.5384616,"[-48]",-48,48
sp_csv_line:"k_means_clusteringwasi.wasm",1,1.5384616,"[-32]",-32,32
sp_csv_line:"k_means_clusteringwasi.wasm",8,12.307693,"[-16]",-16,16
sp_csv_line:"k_means_clusteringwasi.wasm",51,78.46154,"[]",0,0

Counts of function types (20 unique types):
    1  (1.41%) × [i32] -> [i64]
    1  (1.41%) × [i32, i32, i32, i32] -> []
    1  (1.41%) × [i32, i32, i32, i32, i32] -> []
    1  (1.41%) × [f64, i32] -> [i32]
    1  (1.41%) × [f64, f64] -> [f64]
    1  (1.41%) × [f64, f64, i32] -> [f64]
    2  (2.82%) × [i32, i32, i32] -> []
    2  (2.82%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.82%) × [i32, i64, i32] -> [i32]
    2  (2.82%) × [i32, i64, i32] -> [i64]
    2  (2.82%) × [i32, i64, i32, i32] -> [i32]
    2  (2.82%) × [f64] -> [f64]
    2  (2.82%) × [f64, i32] -> [f64]
    3  (4.23%) × [] -> [i32]
    3  (4.23%) × [i32, i32, i32, i32] -> [i32]
    7  (9.86%) × [i32] -> []
    8 (11.27%) × [] -> []
    8 (11.27%) × [i32, i32] -> [i32]
   11 (15.49%) × [i32] -> [i32]
   11 (15.49%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 4 (6.15% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 2

CSV data for further analysis: k_means_clusteringwasi.wasm,17894,188,13,6.467662,71,4,3,2,4,9,6.5,9,107,22,20.560747,22,20.560747,22,20.560747

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"k_means_clusteringwasi.wasm",0,1,4,"i32.load"
"k_means_clusteringwasi.wasm",1,2,9,"i32.load"
