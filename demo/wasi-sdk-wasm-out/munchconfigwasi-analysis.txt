Input file: munchconfigwasi.wasm
  binary:    munchconfigwasi.wasm

Functions:          117
  Imported:          12
  Non-imported:     105
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.27% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     20368
  call:             321 (1.58% of all instructions)
  call_indirect:     21 (0.10% of all instructions, 6.14% of all calls)

Globals:
  #0 i32
     init: i32.const 71408
     28 × global.get   52 × global.set   80 total (35/65% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     28 (26.67% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.95%) × [-1056]
    1  (0.95%) × [-880]
    1  (0.95%) × [-256]
    1  (0.95%) × [-208]
    4  (3.81%) × [-32]
   16 (15.24%) × [-16]
   81 (77.14%) × []
  functions with stack allocation total: 24 (22.86%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"munchconfigwasi.wasm",1,0.95238096,"[-1056]",-1056,1056
sp_csv_line:"munchconfigwasi.wasm",1,0.95238096,"[-880]",-880,880
sp_csv_line:"munchconfigwasi.wasm",1,0.95238096,"[-256]",-256,256
sp_csv_line:"munchconfigwasi.wasm",1,0.95238096,"[-208]",-208,208
sp_csv_line:"munchconfigwasi.wasm",4,3.8095238,"[-32]",-32,32
sp_csv_line:"munchconfigwasi.wasm",16,15.238095,"[-16]",-16,16
sp_csv_line:"munchconfigwasi.wasm",81,77.14286,"[]",0,0

Counts of function types (16 unique types):
    1  (0.85%) × [i32, i32, i32, i32] -> []
    1  (0.85%) × [i32, i32, i32, i32, i32] -> []
    1  (0.85%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.85%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.85%) × [f64, i32] -> [f64]
    2  (1.71%) × [i32, i32, i32] -> []
    2  (1.71%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.71%) × [i32, i64, i32] -> [i64]
    2  (1.71%) × [i32, i64, i32, i32] -> [i32]
    3  (2.56%) × [] -> [i32]
    6  (5.13%) × [i32, i32, i32, i32] -> [i32]
    7  (5.98%) × [i32] -> []
   10  (8.55%) × [] -> []
   22 (18.80%) × [i32] -> [i32]
   23 (19.66%) × [i32, i32, i32] -> [i32]
   33 (28.21%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 9 (8.57% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    14 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 14
  total classes: 3

CSV data for further analysis: munchconfigwasi.wasm,20368,321,21,6.140351,117,5,5,3,1,14,7,6,356,49,13.764045,49,13.764045,49,13.764045

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"munchconfigwasi.wasm",0,1,1,"i32.load"
"munchconfigwasi.wasm",1,1,6,"i32.load"
"munchconfigwasi.wasm",2,3,14,"i32.load"
