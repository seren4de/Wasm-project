Input file: test_varargswasi.wasm
  binary:    test_varargswasi.wasm

Functions:           73
  Imported:           7
  Non-imported:      66
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 8.22% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13371
  call:             188 (1.41% of all instructions)
  call_indirect:     15 (0.11% of all instructions, 7.39% of all calls)

Globals:
  #0 i32
     init: i32.const 71008
     21 × global.get   38 × global.set   59 total (36/64% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     21 (31.82% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.52%) × [-880]
    1  (1.52%) × [-256]
    1  (1.52%) × [-208]
    1  (1.52%) × [-128]
    1  (1.52%) × [-32]
    7 (10.61%) × [-16]
   54 (81.82%) × []
  functions with stack allocation total: 12 (18.18%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_varargswasi.wasm",1,1.5151515,"[-880]",-880,880
sp_csv_line:"test_varargswasi.wasm",1,1.5151515,"[-256]",-256,256
sp_csv_line:"test_varargswasi.wasm",1,1.5151515,"[-208]",-208,208
sp_csv_line:"test_varargswasi.wasm",1,1.5151515,"[-128]",-128,128
sp_csv_line:"test_varargswasi.wasm",1,1.5151515,"[-32]",-32,32
sp_csv_line:"test_varargswasi.wasm",7,10.606061,"[-16]",-16,16
sp_csv_line:"test_varargswasi.wasm",54,81.818184,"[]",0,0

Counts of function types (15 unique types):
    1  (1.37%) × [i32, i32] -> []
    1  (1.37%) × [i32, i32] -> [f64]
    1  (1.37%) × [i32, i32, i32, i32, i32] -> []
    1  (1.37%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.37%) × [f64, i32] -> [f64]
    2  (2.74%) × [i32, i64, i32] -> [i64]
    2  (2.74%) × [i32, i64, i32, i32] -> [i32]
    3  (4.11%) × [] -> [i32]
    4  (5.48%) × [i32, i32, i32, i32] -> [i32]
    5  (6.85%) × [i32, i32, i32] -> []
    6  (8.22%) × [i32] -> []
    8 (10.96%) × [] -> []
   10 (13.70%) × [i32, i32, i32] -> [i32]
   12 (16.44%) × [i32] -> [i32]
   16 (21.92%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (9.09% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 10
  total classes: 3

CSV data for further analysis: test_varargswasi.wasm,13371,188,15,7.3891625,73,6,4,3,1,10,5,4,109,35,32.110092,35,32.110092,34,31.192661

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_varargswasi.wasm",0,1,1,"local.(get|tee)"
"test_varargswasi.wasm",1,1,4,"i32.load"
"test_varargswasi.wasm",2,3,10,"i32.load"
