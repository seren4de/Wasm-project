Input file: fractionwasi.wasm
  binary:    fractionwasi.wasm

Functions:           74
  Imported:           7
  Non-imported:      67
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 6.76% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13599
  call:             185 (1.36% of all instructions)
  call_indirect:     13 (0.10% of all instructions, 6.57% of all calls)

Globals:
  #0 i32
     init: i32.const 70816
     19 × global.get   32 × global.set   51 total (37/63% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     19 (28.36% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.49%) × [-880]
    1  (1.49%) × [-256]
    1  (1.49%) × [-208]
    1  (1.49%) × [-128]
    1  (1.49%) × [-32]
    8 (11.94%) × [-16]
   54 (80.60%) × []
  functions with stack allocation total: 13 (19.40%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"fractionwasi.wasm",1,1.4925373,"[-880]",-880,880
sp_csv_line:"fractionwasi.wasm",1,1.4925373,"[-256]",-256,256
sp_csv_line:"fractionwasi.wasm",1,1.4925373,"[-208]",-208,208
sp_csv_line:"fractionwasi.wasm",1,1.4925373,"[-128]",-128,128
sp_csv_line:"fractionwasi.wasm",1,1.4925373,"[-32]",-32,32
sp_csv_line:"fractionwasi.wasm",8,11.940298,"[-16]",-16,16
sp_csv_line:"fractionwasi.wasm",54,80.597015,"[]",0,0

Counts of function types (14 unique types):
    1  (1.35%) × [i32, i32] -> []
    1  (1.35%) × [i32, i32, i32, i32, i32] -> []
    1  (1.35%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.35%) × [f64, i32] -> [f64]
    2  (2.70%) × [i32, i32, i32] -> []
    2  (2.70%) × [i32, i64, i32] -> [i64]
    2  (2.70%) × [i32, i64, i32, i32] -> [i32]
    3  (4.05%) × [] -> [i32]
    4  (5.41%) × [i32, i32, i32, i32] -> [i32]
    7  (9.46%) × [] -> []
    7  (9.46%) × [i32] -> []
   12 (16.22%) × [i32] -> [i32]
   14 (18.92%) × [i32, i32, i32] -> [i32]
   17 (22.97%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 4 (5.97% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 9
  total classes: 2

CSV data for further analysis: fractionwasi.wasm,13599,185,13,6.5656567,74,5,4,2,4,9,6.5,9,134,31,23.134329,31,23.134329,31,23.134329

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"fractionwasi.wasm",0,1,4,"i32.load"
"fractionwasi.wasm",1,3,9,"i32.load"
