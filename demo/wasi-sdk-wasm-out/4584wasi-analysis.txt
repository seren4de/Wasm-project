Input file: 4584wasi.wasm
  binary:    4584wasi.wasm

Functions:           92
  Imported:          10
  Non-imported:      82
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 5.43% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13840
  call:             231 (1.67% of all instructions)
  call_indirect:     19 (0.14% of all instructions, 7.60% of all calls)

Globals:
  #0 i32
     init: i32.const 87376
     20 × global.get   40 × global.set   60 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (24.39% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.22%) × [-880]
    1  (1.22%) × [-256]
    1  (1.22%) × [-208]
    4  (4.88%) × [-32]
   12 (14.63%) × [-16]
   63 (76.83%) × []
  functions with stack allocation total: 19 (23.17%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"4584wasi.wasm",1,1.2195122,"[-880]",-880,880
sp_csv_line:"4584wasi.wasm",1,1.2195122,"[-256]",-256,256
sp_csv_line:"4584wasi.wasm",1,1.2195122,"[-208]",-208,208
sp_csv_line:"4584wasi.wasm",4,4.878049,"[-32]",-32,32
sp_csv_line:"4584wasi.wasm",12,14.634147,"[-16]",-16,16
sp_csv_line:"4584wasi.wasm",63,76.82927,"[]",0,0

Counts of function types (15 unique types):
    1  (1.09%) × [i32, i32, i32] -> []
    1  (1.09%) × [i32, i32, i32, i32, i32] -> []
    1  (1.09%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.09%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.09%) × [f64, i32] -> [f64]
    2  (2.17%) × [] -> [i32]
    2  (2.17%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.17%) × [i32, i64, i32] -> [i64]
    2  (2.17%) × [i32, i64, i32, i32] -> [i32]
    6  (6.52%) × [i32, i32, i32, i32] -> [i32]
    7  (7.61%) × [i32] -> []
   11 (11.96%) × [] -> []
   16 (17.39%) × [i32] -> [i32]
   18 (19.57%) × [i32, i32, i32] -> [i32]
   21 (22.83%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 7 (8.54% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 3

CSV data for further analysis: 4584wasi.wasm,13840,231,19,7.6,92,5,5,3,1,12,6.333333333333333,6,244,43,17.622952,43,17.622952,43,17.622952

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"4584wasi.wasm",0,1,1,"i32.load"
"4584wasi.wasm",1,1,6,"i32.load"
"4584wasi.wasm",2,3,12,"i32.load"
