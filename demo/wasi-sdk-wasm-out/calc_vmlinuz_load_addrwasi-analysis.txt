Input file: calc_vmlinuz_load_addrwasi.wasm
  binary:    calc_vmlinuz_load_addrwasi.wasm

Functions:          101
  Imported:          10
  Non-imported:      91
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.95% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     20691
  call:             307 (1.48% of all instructions)
  call_indirect:     16 (0.08% of all instructions, 4.95% of all calls)

Globals:
  #0 i32
     init: i32.const 71424
     24 × global.get   46 × global.set   70 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     24 (26.37% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.10%) × [-880]
    1  (1.10%) × [-512]
    1  (1.10%) × [-304]
    1  (1.10%) × [-256]
    1  (1.10%) × [-208]
    1  (1.10%) × [-112]
    1  (1.10%) × [-96]
    1  (1.10%) × [-32]
   14 (15.38%) × [-16]
   69 (75.82%) × []
  functions with stack allocation total: 22 (24.18%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-880]",-880,880
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-512]",-512,512
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-304]",-304,304
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-256]",-256,256
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-208]",-208,208
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-112]",-112,112
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-96]",-96,96
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",1,1.0989012,"[-32]",-32,32
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",14,15.384615,"[-16]",-16,16
sp_csv_line:"calc_vmlinuz_load_addrwasi.wasm",69,75.82417,"[]",0,0

Counts of function types (21 unique types):
    1  (0.99%) × [i32, i32] -> []
    1  (0.99%) × [i32, i32] -> [i64]
    1  (0.99%) × [i32, i32, i32] -> []
    1  (0.99%) × [i32, i32, i32] -> [f64]
    1  (0.99%) × [i32, i32, i32, i32, i32] -> []
    1  (0.99%) × [i32, i32, i32, i32, i32] -> [f64]
    1  (0.99%) × [i32, i32, i32, i64] -> [i64]
    1  (0.99%) × [i32, i64] -> []
    1  (0.99%) × [i32, i64, i64, i64, i64] -> []
    1  (0.99%) × [f64, f64] -> [f64]
    2  (1.98%) × [i32, i64, i32] -> [i64]
    2  (1.98%) × [i32, i64, i32, i32] -> [i32]
    2  (1.98%) × [f64, i32] -> [f64]
    3  (2.97%) × [] -> [i32]
    3  (2.97%) × [i32, i32, i32, i32, i32] -> [i32]
    7  (6.93%) × [i32] -> []
    7  (6.93%) × [i32, i32, i32, i32] -> [i32]
   10  (9.90%) × [] -> []
   16 (15.84%) × [i32] -> [i32]
   18 (17.82%) × [i32, i32, i32] -> [i32]
   21 (20.79%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 7 (7.69% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 2

CSV data for further analysis: calc_vmlinuz_load_addrwasi.wasm,20691,307,16,4.9535604,101,5,4,2,4,12,8,12,224,40,17.857143,40,17.857143,40,17.857143

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"calc_vmlinuz_load_addrwasi.wasm",0,1,4,"i32.load"
"calc_vmlinuz_load_addrwasi.wasm",1,3,12,"i32.load"
