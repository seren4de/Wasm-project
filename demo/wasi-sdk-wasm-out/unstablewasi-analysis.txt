Input file: unstablewasi.wasm
  binary:    unstablewasi.wasm

Functions:          107
  Imported:          13
  Non-imported:      94
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.67% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     14446
  call:             257 (1.78% of all instructions)
  call_indirect:     23 (0.16% of all instructions, 8.21% of all calls)

Globals:
  #0 i32
     init: i32.const 71136
     25 × global.get   49 × global.set   74 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     25 (26.60% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.06%) × [-880]
    1  (1.06%) × [-256]
    1  (1.06%) × [-208]
    4  (4.26%) × [-32]
   15 (15.96%) × [-16]
   72 (76.60%) × []
  functions with stack allocation total: 22 (23.40%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"unstablewasi.wasm",1,1.0638298,"[-880]",-880,880
sp_csv_line:"unstablewasi.wasm",1,1.0638298,"[-256]",-256,256
sp_csv_line:"unstablewasi.wasm",1,1.0638298,"[-208]",-208,208
sp_csv_line:"unstablewasi.wasm",4,4.255319,"[-32]",-32,32
sp_csv_line:"unstablewasi.wasm",15,15.957447,"[-16]",-16,16
sp_csv_line:"unstablewasi.wasm",72,76.59574,"[]",0,0

Counts of function types (18 unique types):
    1  (0.93%) × [i32, i32] -> []
    1  (0.93%) × [i32, i32, i32] -> []
    1  (0.93%) × [i32, i32, i32, i32] -> []
    1  (0.93%) × [i32, i32, i32, i32, i32] -> []
    1  (0.93%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.93%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.93%) × [f64, i32] -> [f64]
    2  (1.87%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.87%) × [i32, i64, i32] -> [i32]
    2  (1.87%) × [i32, i64, i32] -> [i64]
    2  (1.87%) × [i32, i64, i32, i32] -> [i32]
    3  (2.80%) × [] -> [i32]
    7  (6.54%) × [i32, i32, i32, i32] -> [i32]
    9  (8.41%) × [i32] -> []
   10  (9.35%) × [] -> []
   18 (16.82%) × [i32] -> [i32]
   20 (18.69%) × [i32, i32, i32] -> [i32]
   25 (23.36%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 10 (10.64% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    14 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     7 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 7
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 14
  total classes: 4

CSV data for further analysis: unstablewasi.wasm,14446,257,23,8.214286,107,5,5,4,1,14,5.75,7,314,51,16.242039,51,16.242039,50,15.923567

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"unstablewasi.wasm",0,1,1,"i32.load"
"unstablewasi.wasm",1,1,1,"local.(get|tee)"
"unstablewasi.wasm",2,1,7,"i32.load"
"unstablewasi.wasm",3,3,14,"i32.load"
