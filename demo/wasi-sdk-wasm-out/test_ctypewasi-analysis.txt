Input file: test_ctypewasi.wasm
  binary:    test_ctypewasi.wasm

Functions:           66
  Imported:           5
  Non-imported:      61
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         17
  Of those, unique functions:    17 (i.e., at least 25.76% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     10524
  call:             310 (2.95% of all instructions)
  call_indirect:     20 (0.19% of all instructions, 6.06% of all calls)

Globals:
  #0 i32
     init: i32.const 72368
     10 × global.get   18 × global.set   28 total (36/64% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     10 (16.39% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.64%) × [-880]
    1  (1.64%) × [-256]
    1  (1.64%) × [-208]
    1  (1.64%) × [-32]
    4  (6.56%) × [-16]
   53 (86.89%) × []
  functions with stack allocation total: 8 (13.11%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_ctypewasi.wasm",1,1.6393442,"[-880]",-880,880
sp_csv_line:"test_ctypewasi.wasm",1,1.6393442,"[-256]",-256,256
sp_csv_line:"test_ctypewasi.wasm",1,1.6393442,"[-208]",-208,208
sp_csv_line:"test_ctypewasi.wasm",1,1.6393442,"[-32]",-32,32
sp_csv_line:"test_ctypewasi.wasm",4,6.557377,"[-16]",-16,16
sp_csv_line:"test_ctypewasi.wasm",53,86.88525,"[]",0,0

Counts of function types (13 unique types):
    1  (1.52%) × [i32, i32, i32] -> []
    1  (1.52%) × [i32, i32, i32, i32, i32] -> []
    1  (1.52%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.52%) × [f64, i32] -> [f64]
    2  (3.03%) × [] -> [i32]
    2  (3.03%) × [i32, i64, i32] -> [i64]
    2  (3.03%) × [i32, i64, i32, i32] -> [i32]
    3  (4.55%) × [i32, i32, i32, i32] -> [i32]
    4  (6.06%) × [i32] -> []
    7 (10.61%) × [] -> []
    8 (12.12%) × [i32, i32] -> [i32]
    9 (13.64%) × [i32, i32, i32] -> [i32]
   25 (37.88%) × [i32] -> [i32]

Functions with at least one call_indirect: 5 (8.20% of all functions)

Table elements initialization:
         range: [    1,   14]   length:  14   unique funcs:   14   type: [i32] -> [i32]
         range: [   15,   15]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   16,   16]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [   17,   17]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     7 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               25
         functions matching by type and present in table (regardless at which table index):   14
         functions matching by type and present in permissable table index range:             14
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 14
    count (how often class appears): 7
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 3

CSV data for further analysis: test_ctypewasi.wasm,10524,310,20,6.060606,66,17,3,3,4,9,6.666666666666667,7,264,120,45.454544,120,45.454544,22,8.333333

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_ctypewasi.wasm",0,1,4,"i32.load"
"test_ctypewasi.wasm",1,14,7,"local.(get|tee)"
"test_ctypewasi.wasm",2,2,9,"i32.load"
