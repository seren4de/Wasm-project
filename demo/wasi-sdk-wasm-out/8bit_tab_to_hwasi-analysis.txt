Input file: 8bit_tab_to_hwasi.wasm
  binary:    8bit_tab_to_hwasi.wasm

Functions:          123
  Imported:          12
  Non-imported:     111
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.07% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     29819
  call:             470 (1.58% of all instructions)
  call_indirect:     20 (0.07% of all instructions, 4.08% of all calls)

Globals:
  #0 i32
     init: i32.const 73184
     28 × global.get   53 × global.set   81 total (35/65% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     28 (25.23% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.90%) × [-880]
    1  (0.90%) × [-512]
    1  (0.90%) × [-304]
    1  (0.90%) × [-256]
    1  (0.90%) × [-208]
    1  (0.90%) × [-128]
    4  (3.60%) × [-32]
   16 (14.41%) × [-16]
   85 (76.58%) × []
  functions with stack allocation total: 26 (23.42%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"8bit_tab_to_hwasi.wasm",1,0.9009009,"[-880]",-880,880
sp_csv_line:"8bit_tab_to_hwasi.wasm",1,0.9009009,"[-512]",-512,512
sp_csv_line:"8bit_tab_to_hwasi.wasm",1,0.9009009,"[-304]",-304,304
sp_csv_line:"8bit_tab_to_hwasi.wasm",1,0.9009009,"[-256]",-256,256
sp_csv_line:"8bit_tab_to_hwasi.wasm",1,0.9009009,"[-208]",-208,208
sp_csv_line:"8bit_tab_to_hwasi.wasm",1,0.9009009,"[-128]",-128,128
sp_csv_line:"8bit_tab_to_hwasi.wasm",4,3.6036036,"[-32]",-32,32
sp_csv_line:"8bit_tab_to_hwasi.wasm",16,14.414414,"[-16]",-16,16
sp_csv_line:"8bit_tab_to_hwasi.wasm",85,76.57658,"[]",0,0

Counts of function types (23 unique types):
    1  (0.81%) × [i32, i32] -> []
    1  (0.81%) × [i32, i32] -> [i64]
    1  (0.81%) × [i32, i32, i32] -> []
    1  (0.81%) × [i32, i32, i32] -> [f64]
    1  (0.81%) × [i32, i32, i32, i32, i32] -> []
    1  (0.81%) × [i32, i32, i32, i32, i32] -> [f64]
    1  (0.81%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.81%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.81%) × [i32, i32, i32, i64] -> [i64]
    1  (0.81%) × [i32, i64] -> []
    1  (0.81%) × [i32, i64, i64, i64, i64] -> []
    1  (0.81%) × [f64, f64] -> [f64]
    2  (1.63%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.63%) × [i32, i64, i32] -> [i64]
    2  (1.63%) × [i32, i64, i32, i32] -> [i32]
    2  (1.63%) × [f64, i32] -> [f64]
    3  (2.44%) × [] -> [i32]
    7  (5.69%) × [i32] -> []
    8  (6.50%) × [i32, i32, i32, i32] -> [i32]
   11  (8.94%) × [] -> []
   22 (17.89%) × [i32] -> [i32]
   22 (17.89%) × [i32, i32, i32] -> [i32]
   30 (24.39%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 8 (7.21% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 13
  total classes: 3

CSV data for further analysis: 8bit_tab_to_hwasi.wasm,29819,470,20,4.0816326,123,5,5,3,1,13,6.666666666666667,6,320,46,14.375,46,14.375,46,14.375

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"8bit_tab_to_hwasi.wasm",0,1,1,"i32.load"
"8bit_tab_to_hwasi.wasm",1,1,6,"i32.load"
"8bit_tab_to_hwasi.wasm",2,3,13,"i32.load"
