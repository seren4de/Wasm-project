Input file: 3888wasi.wasm
  binary:    3888wasi.wasm

Functions:           95
  Imported:          12
  Non-imported:      83
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 5.26% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13785
  call:             238 (1.73% of all instructions)
  call_indirect:     18 (0.13% of all instructions, 7.03% of all calls)

Globals:
  #0 i32
     init: i32.const 75136
     20 × global.get   40 × global.set   60 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (24.10% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.20%) × [-880]
    1  (1.20%) × [-256]
    1  (1.20%) × [-208]
    4  (4.82%) × [-32]
   12 (14.46%) × [-16]
   64 (77.11%) × []
  functions with stack allocation total: 19 (22.89%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"3888wasi.wasm",1,1.2048193,"[-880]",-880,880
sp_csv_line:"3888wasi.wasm",1,1.2048193,"[-256]",-256,256
sp_csv_line:"3888wasi.wasm",1,1.2048193,"[-208]",-208,208
sp_csv_line:"3888wasi.wasm",4,4.8192773,"[-32]",-32,32
sp_csv_line:"3888wasi.wasm",12,14.457831,"[-16]",-16,16
sp_csv_line:"3888wasi.wasm",64,77.10844,"[]",0,0

Counts of function types (15 unique types):
    1  (1.05%) × [i32, i32, i32] -> []
    1  (1.05%) × [i32, i32, i32, i32, i32] -> []
    1  (1.05%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.05%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.05%) × [f64, i32] -> [f64]
    2  (2.11%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.11%) × [i32, i64, i32] -> [i64]
    2  (2.11%) × [i32, i64, i32, i32] -> [i32]
    3  (3.16%) × [] -> [i32]
    6  (6.32%) × [i32, i32, i32, i32] -> [i32]
    7  (7.37%) × [i32] -> []
   10 (10.53%) × [] -> []
   16 (16.84%) × [i32] -> [i32]
   18 (18.95%) × [i32, i32, i32] -> [i32]
   24 (25.26%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (7.23% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 11
  total classes: 3

CSV data for further analysis: 3888wasi.wasm,13785,238,18,7.03125,95,5,5,3,1,11,6,6,226,40,17.699116,40,17.699116,40,17.699116

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"3888wasi.wasm",0,1,1,"i32.load"
"3888wasi.wasm",1,1,6,"i32.load"
"3888wasi.wasm",2,3,11,"i32.load"
