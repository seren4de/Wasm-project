Input file: dtwasi.wasm
  binary:    dtwasi.wasm

Functions:           93
  Imported:           8
  Non-imported:      85
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 5.38% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     17755
  call:             294 (1.66% of all instructions)
  call_indirect:     14 (0.08% of all instructions, 4.55% of all calls)

Globals:
  #0 i32
     init: i32.const 72096
     22 × global.get   41 × global.set   63 total (35/65% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     22 (25.88% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.18%) × [-880]
    1  (1.18%) × [-256]
    1  (1.18%) × [-208]
    1  (1.18%) × [-128]
    1  (1.18%) × [-64]
    1  (1.18%) × [-32]
   11 (12.94%) × [-16]
   68 (80.00%) × []
  functions with stack allocation total: 17 (20.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"dtwasi.wasm",1,1.1764706,"[-880]",-880,880
sp_csv_line:"dtwasi.wasm",1,1.1764706,"[-256]",-256,256
sp_csv_line:"dtwasi.wasm",1,1.1764706,"[-208]",-208,208
sp_csv_line:"dtwasi.wasm",1,1.1764706,"[-128]",-128,128
sp_csv_line:"dtwasi.wasm",1,1.1764706,"[-64]",-64,64
sp_csv_line:"dtwasi.wasm",1,1.1764706,"[-32]",-32,32
sp_csv_line:"dtwasi.wasm",11,12.941176,"[-16]",-16,16
sp_csv_line:"dtwasi.wasm",68,80,"[]",0,0

Counts of function types (19 unique types):
    1  (1.08%) × [i32, i32, i32, i32, i32] -> []
    1  (1.08%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.08%) × [i64] -> []
    1  (1.08%) × [i64, i32] -> [i32]
    1  (1.08%) × [i64, i32] -> [i64]
    1  (1.08%) × [i64, i32, i32, i32, i32, i32] -> []
    1  (1.08%) × [f64, i32] -> [f64]
    2  (2.15%) × [i32] -> [i64]
    2  (2.15%) × [i32, i32, i32] -> []
    2  (2.15%) × [i32, i64, i32] -> [i32]
    2  (2.15%) × [i32, i64, i32] -> [i64]
    2  (2.15%) × [i32, i64, i32, i32] -> [i32]
    3  (3.23%) × [] -> [i32]
    4  (4.30%) × [i32, i32, i32, i32] -> [i32]
    7  (7.53%) × [] -> []
    8  (8.60%) × [i32] -> []
   14 (15.05%) × [i32, i32, i32] -> [i32]
   17 (18.28%) × [i32] -> [i32]
   23 (24.73%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 5 (5.88% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: dtwasi.wasm,17755,294,14,4.5454545,93,5,4,2,4,10,7,10,148,34,22.972973,34,22.972973,34,22.972973

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"dtwasi.wasm",0,1,4,"i32.load"
"dtwasi.wasm",1,3,10,"i32.load"
