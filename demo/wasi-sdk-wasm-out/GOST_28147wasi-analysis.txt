Input file: GOST_28147wasi.wasm
  binary:    GOST_28147wasi.wasm

Functions:           72
  Imported:           6
  Non-imported:      66
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 6.94% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     10203
  call:             171 (1.68% of all instructions)
  call_indirect:     16 (0.16% of all instructions, 8.56% of all calls)

Globals:
  #0 i32
     init: i32.const 71664
     27 × global.get   38 × global.set   65 total (42/58% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     27 (40.91% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.52%) × [-880]
    1  (1.52%) × [-256]
    1  (1.52%) × [-208]
    1  (1.52%) × [-32]
    9 (13.64%) × [-16]
   53 (80.30%) × []
  functions with stack allocation total: 13 (19.70%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"GOST_28147wasi.wasm",1,1.5151515,"[-880]",-880,880
sp_csv_line:"GOST_28147wasi.wasm",1,1.5151515,"[-256]",-256,256
sp_csv_line:"GOST_28147wasi.wasm",1,1.5151515,"[-208]",-208,208
sp_csv_line:"GOST_28147wasi.wasm",1,1.5151515,"[-32]",-32,32
sp_csv_line:"GOST_28147wasi.wasm",9,13.636364,"[-16]",-16,16
sp_csv_line:"GOST_28147wasi.wasm",53,80.30303,"[]",0,0

Counts of function types (19 unique types):
    1  (1.39%) × [i32] -> [i64]
    1  (1.39%) × [i32, i32] -> [i64]
    1  (1.39%) × [i32, i32, i32] -> []
    1  (1.39%) × [i32, i32, i32, i32, i32] -> []
    1  (1.39%) × [i64, i32] -> []
    1  (1.39%) × [i64, i32, i32] -> []
    1  (1.39%) × [f64, i32] -> [f64]
    2  (2.78%) × [i32, i32, i32, i32] -> []
    2  (2.78%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.78%) × [i32, i64, i32] -> [i64]
    2  (2.78%) × [i32, i64, i32, i32] -> [i32]
    3  (4.17%) × [] -> [i32]
    4  (5.56%) × [i32] -> []
    4  (5.56%) × [i32, i32] -> []
    5  (6.94%) × [i32, i32, i32, i32] -> [i32]
    7  (9.72%) × [] -> []
   10 (13.89%) × [i32, i32] -> [i32]
   12 (16.67%) × [i32] -> [i32]
   12 (16.67%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 7 (10.61% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 2

CSV data for further analysis: GOST_28147wasi.wasm,10203,171,16,8.5561495,72,5,4,2,4,12,8,12,152,40,26.31579,40,26.31579,40,26.31579

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"GOST_28147wasi.wasm",0,1,4,"i32.load"
"GOST_28147wasi.wasm",1,3,12,"i32.load"
