Input file: s-datawasi.wasm
  binary:    s-datawasi.wasm

Functions:           27
  Imported:           5
  Non-imported:      22
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 14.81% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:       529
  call:              29 (5.48% of all instructions)
  call_indirect:      0 (0.00% of all instructions, 0.00% of all calls)

Globals:
  #0 i32
     init: i32.const 67872
      7 × global.get   10 × global.set   17 total (41/59% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:      7 (31.82% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (4.55%) × [-32]
    3 (13.64%) × [-16]
   18 (81.82%) × []
  functions with stack allocation total: 4 (18.18%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-datawasi.wasm",1,4.5454545,"[-32]",-32,32
sp_csv_line:"s-datawasi.wasm",3,13.636364,"[-16]",-16,16
sp_csv_line:"s-datawasi.wasm",18,81.818184,"[]",0,0

Counts of function types (9 unique types):
    1  (3.70%) × [] -> [i32]
    2  (7.41%) × [i32, i32, i32, i32] -> [i32]
    2  (7.41%) × [i32, i64, i32] -> [i64]
    2  (7.41%) × [i32, i64, i32, i32] -> [i32]
    3 (11.11%) × [i32, i32, i32] -> [i32]
    4 (14.81%) × [] -> []
    4 (14.81%) × [i32] -> []
    4 (14.81%) × [i32, i32] -> [i32]
    5 (18.52%) × [i32] -> [i32]

Functions with at least one call_indirect: 0 (0.00% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
  0 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  total classes: 0

