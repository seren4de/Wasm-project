Input file: datatocwasi.wasm
  binary:    datatocwasi.wasm

Functions:          104
  Imported:          12
  Non-imported:      92
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.81% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     14636
  call:             259 (1.77% of all instructions)
  call_indirect:     23 (0.16% of all instructions, 8.16% of all calls)

Globals:
  #0 i32
     init: i32.const 71088
     23 × global.get   46 × global.set   69 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     23 (25.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.09%) × [-880]
    1  (1.09%) × [-256]
    1  (1.09%) × [-208]
    4  (4.35%) × [-32]
   14 (15.22%) × [-16]
   71 (77.17%) × []
  functions with stack allocation total: 21 (22.83%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"datatocwasi.wasm",1,1.0869565,"[-880]",-880,880
sp_csv_line:"datatocwasi.wasm",1,1.0869565,"[-256]",-256,256
sp_csv_line:"datatocwasi.wasm",1,1.0869565,"[-208]",-208,208
sp_csv_line:"datatocwasi.wasm",4,4.347826,"[-32]",-32,32
sp_csv_line:"datatocwasi.wasm",14,15.217391,"[-16]",-16,16
sp_csv_line:"datatocwasi.wasm",71,77.17391,"[]",0,0

Counts of function types (15 unique types):
    1  (0.96%) × [i32, i32, i32] -> []
    1  (0.96%) × [i32, i32, i32, i32, i32] -> []
    1  (0.96%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.96%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.96%) × [f64, i32] -> [f64]
    2  (1.92%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.92%) × [i32, i64, i32] -> [i64]
    2  (1.92%) × [i32, i64, i32, i32] -> [i32]
    3  (2.88%) × [] -> [i32]
    6  (5.77%) × [i32, i32, i32, i32] -> [i32]
    7  (6.73%) × [i32] -> []
   10  (9.62%) × [] -> []
   21 (20.19%) × [i32] -> [i32]
   21 (20.19%) × [i32, i32, i32] -> [i32]
   25 (24.04%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 10 (10.87% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    14 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     7 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source: local.(get|tee)   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 7
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 14
  total classes: 4

CSV data for further analysis: datatocwasi.wasm,14636,259,23,8.156029,104,5,5,4,1,14,5.75,7,331,51,15.407855,51,15.407855,50,15.105741

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"datatocwasi.wasm",0,1,1,"i32.load"
"datatocwasi.wasm",1,1,1,"local.(get|tee)"
"datatocwasi.wasm",2,1,7,"i32.load"
"datatocwasi.wasm",3,3,14,"i32.load"
