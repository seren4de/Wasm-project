Input file: recursion-formswasi.wasm
  binary:    recursion-formswasi.wasm

Functions:           81
  Imported:           7
  Non-imported:      74
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         10
  Of those, unique functions:    10 (i.e., at least 12.35% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13367
  call:             198 (1.48% of all instructions)
  call_indirect:     14 (0.10% of all instructions, 6.60% of all calls)

Globals:
  #0 i32
     init: i32.const 71104
     30 × global.get   49 × global.set   79 total (38/62% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     30 (40.54% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.35%) × [-880]
    1  (1.35%) × [-256]
    1  (1.35%) × [-208]
    1  (1.35%) × [-32]
    6  (8.11%) × [-16]
   64 (86.49%) × []
  functions with stack allocation total: 10 (13.51%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"recursion-formswasi.wasm",1,1.3513514,"[-880]",-880,880
sp_csv_line:"recursion-formswasi.wasm",1,1.3513514,"[-256]",-256,256
sp_csv_line:"recursion-formswasi.wasm",1,1.3513514,"[-208]",-208,208
sp_csv_line:"recursion-formswasi.wasm",1,1.3513514,"[-32]",-32,32
sp_csv_line:"recursion-formswasi.wasm",6,8.1081085,"[-16]",-16,16
sp_csv_line:"recursion-formswasi.wasm",64,86.48649,"[]",0,0

Counts of function types (13 unique types):
    1  (1.23%) × [i32, i32, i32] -> []
    1  (1.23%) × [i32, i32, i32, i32, i32] -> []
    1  (1.23%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.23%) × [f64, i32] -> [f64]
    2  (2.47%) × [i32, i64, i32] -> [i64]
    2  (2.47%) × [i32, i64, i32, i32] -> [i32]
    3  (3.70%) × [] -> [i32]
    3  (3.70%) × [i32, i32, i32, i32] -> [i32]
    7  (8.64%) × [] -> []
    8  (9.88%) × [i32] -> []
    9 (11.11%) × [i32, i32, i32] -> [i32]
   21 (25.93%) × [i32] -> [i32]
   22 (27.16%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 5 (6.76% of all functions)

Table elements initialization:
         range: [    1,    7]   length:   7   unique funcs:    7   type: [i32] -> [i32]
         range: [    8,    8]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    9,    9]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [   10,   10]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    7
         functions matching by type and present in permissable table index range:              7
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 7
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 3

CSV data for further analysis: recursion-formswasi.wasm,13367,198,14,6.6037736,81,10,3,3,1,9,4.666666666666667,4,110,29,26.363636,29,26.363636,22,20

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"recursion-formswasi.wasm",0,7,1,"local.(get|tee)"
"recursion-formswasi.wasm",1,1,4,"i32.load"
"recursion-formswasi.wasm",2,2,9,"i32.load"
