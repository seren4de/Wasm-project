Input file: 19wasi.wasm
  binary:    19wasi.wasm

Functions:           70
  Imported:           6
  Non-imported:      64
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         14
  Of those, unique functions:    14 (i.e., at least 20.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      8368
  call:             159 (1.90% of all instructions)
  call_indirect:     16 (0.19% of all instructions, 9.14% of all calls)

Globals:
  #0 i32
     init: i32.const 71792
     16 × global.get   32 × global.set   48 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     16 (25.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.56%) × [-880]
    1  (1.56%) × [-256]
    1  (1.56%) × [-208]
    1  (1.56%) × [-32]
    8 (12.50%) × [-16]
   52 (81.25%) × []
  functions with stack allocation total: 12 (18.75%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"19wasi.wasm",1,1.5625,"[-880]",-880,880
sp_csv_line:"19wasi.wasm",1,1.5625,"[-256]",-256,256
sp_csv_line:"19wasi.wasm",1,1.5625,"[-208]",-208,208
sp_csv_line:"19wasi.wasm",1,1.5625,"[-32]",-32,32
sp_csv_line:"19wasi.wasm",8,12.5,"[-16]",-16,16
sp_csv_line:"19wasi.wasm",52,81.25,"[]",0,0

Counts of function types (14 unique types):
    1  (1.43%) × [i32, i32] -> []
    1  (1.43%) × [i32, i32, i32] -> []
    1  (1.43%) × [i32, i32, i32, i32, i32] -> []
    1  (1.43%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.43%) × [f64, i32] -> [f64]
    2  (2.86%) × [] -> [i32]
    2  (2.86%) × [i32, i64, i32] -> [i64]
    2  (2.86%) × [i32, i64, i32, i32] -> [i32]
    5  (7.14%) × [i32] -> []
    5  (7.14%) × [i32, i32, i32, i32] -> [i32]
    9 (12.86%) × [i32, i32] -> [i32]
   10 (14.29%) × [i32] -> [i32]
   13 (18.57%) × [i32, i32, i32] -> [i32]
   17 (24.29%) × [] -> []

Functions with at least one call_indirect: 7 (10.94% of all functions)

Table elements initialization:
         range: [    1,    9]   length:   9   unique funcs:    9   type: [] -> []
         range: [   10,   10]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [   13,   14]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [] -> []
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    9
         functions matching by type and present in permissable table index range:              9
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 9
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 11
  total classes: 3

CSV data for further analysis: 19wasi.wasm,8368,159,16,9.142858,70,14,4,3,1,11,5.333333333333333,4,168,46,27.380953,46,27.380953,37,22.02381

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"19wasi.wasm",0,9,1,"local.(get|tee)"
"19wasi.wasm",1,1,4,"i32.load"
"19wasi.wasm",2,3,11,"i32.load"
