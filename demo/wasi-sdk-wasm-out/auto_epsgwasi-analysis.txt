Input file: auto_epsgwasi.wasm
  binary:    auto_epsgwasi.wasm

Functions:          137
  Imported:          13
  Non-imported:     124
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 4.38% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     31890
  call:            1190 (3.73% of all instructions)
  call_indirect:     32 (0.10% of all instructions, 2.62% of all calls)

Globals:
  #0 i32
     init: i32.const 99856
     45 × global.get   88 × global.set  133 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     45 (36.29% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.81%) × [-880]
    1  (0.81%) × [-736]
    1  (0.81%) × [-704]
    1  (0.81%) × [-256]
    1  (0.81%) × [-208]
    1  (0.81%) × [-128]
    5  (4.03%) × [-32]
   16 (12.90%) × [-16]
   97 (78.23%) × []
  functions with stack allocation total: 27 (21.77%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"auto_epsgwasi.wasm",1,0.8064516,"[-880]",-880,880
sp_csv_line:"auto_epsgwasi.wasm",1,0.8064516,"[-736]",-736,736
sp_csv_line:"auto_epsgwasi.wasm",1,0.8064516,"[-704]",-704,704
sp_csv_line:"auto_epsgwasi.wasm",1,0.8064516,"[-256]",-256,256
sp_csv_line:"auto_epsgwasi.wasm",1,0.8064516,"[-208]",-208,208
sp_csv_line:"auto_epsgwasi.wasm",1,0.8064516,"[-128]",-128,128
sp_csv_line:"auto_epsgwasi.wasm",5,4.032258,"[-32]",-32,32
sp_csv_line:"auto_epsgwasi.wasm",16,12.903226,"[-16]",-16,16
sp_csv_line:"auto_epsgwasi.wasm",97,78.22581,"[]",0,0

Counts of function types (22 unique types):
    1  (0.73%) × [i32] -> [i64]
    1  (0.73%) × [i32, i32, i32, i32, i32] -> []
    1  (0.73%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.73%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.73%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.73%) × [i64, i32] -> [i32]
    1  (0.73%) × [i64, i32, i32, i32, i32, i32] -> []
    1  (0.73%) × [f64, i32] -> [f64]
    2  (1.46%) × [i32, i32, i32] -> []
    2  (1.46%) × [i32, i32, i32, i32] -> []
    2  (1.46%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.46%) × [i32, i64, i32] -> [i32]
    2  (1.46%) × [i32, i64, i32] -> [i64]
    2  (1.46%) × [i32, i64, i32, i32] -> [i32]
    3  (2.19%) × [i32, i32] -> []
    5  (3.65%) × [] -> [i32]
    8  (5.84%) × [i32, i32, i32, i32] -> [i32]
   10  (7.30%) × [] -> []
   10  (7.30%) × [i32] -> []
   22 (16.06%) × [i32, i32, i32] -> [i32]
   27 (19.71%) × [i32] -> [i32]
   32 (23.36%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 10 (8.06% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    6]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               27
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    12 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               32
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 12
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 13
  total classes: 4

CSV data for further analysis: auto_epsgwasi.wasm,31890,1190,32,2.6186578,137,6,5,4,1,13,8,12,709,58,8.180536,58,8.180536,46,6.4880114

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"auto_epsgwasi.wasm",0,1,1,"i32.load"
"auto_epsgwasi.wasm",1,1,6,"i32.load"
"auto_epsgwasi.wasm",2,1,12,"local.(get|tee)"
"auto_epsgwasi.wasm",3,3,13,"i32.load"
