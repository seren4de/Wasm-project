Input file: access_file_after_heap_resizewasi.wasm
  binary:    access_file_after_heap_resizewasi.wasm

Functions:           92
  Imported:          10
  Non-imported:      82
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 5.43% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13483
  call:             213 (1.58% of all instructions)
  call_indirect:     16 (0.12% of all instructions, 6.99% of all calls)

Globals:
  #0 i32
     init: i32.const 70944
     22 × global.get   43 × global.set   65 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     22 (26.83% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.22%) × [-880]
    1  (1.22%) × [-256]
    1  (1.22%) × [-208]
    4  (4.88%) × [-32]
   14 (17.07%) × [-16]
   61 (74.39%) × []
  functions with stack allocation total: 21 (25.61%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"access_file_after_heap_resizewasi.wasm",1,1.2195122,"[-880]",-880,880
sp_csv_line:"access_file_after_heap_resizewasi.wasm",1,1.2195122,"[-256]",-256,256
sp_csv_line:"access_file_after_heap_resizewasi.wasm",1,1.2195122,"[-208]",-208,208
sp_csv_line:"access_file_after_heap_resizewasi.wasm",4,4.878049,"[-32]",-32,32
sp_csv_line:"access_file_after_heap_resizewasi.wasm",14,17.073172,"[-16]",-16,16
sp_csv_line:"access_file_after_heap_resizewasi.wasm",61,74.39024,"[]",0,0

Counts of function types (16 unique types):
    1  (1.09%) × [i32, i32, i32] -> []
    1  (1.09%) × [i32, i32, i32, i32] -> []
    1  (1.09%) × [i32, i32, i32, i32, i32] -> []
    1  (1.09%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.09%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.09%) × [f64, i32] -> [f64]
    2  (2.17%) × [] -> [i32]
    2  (2.17%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.17%) × [i32, i64, i32] -> [i64]
    2  (2.17%) × [i32, i64, i32, i32] -> [i32]
    6  (6.52%) × [i32] -> []
    6  (6.52%) × [i32, i32, i32, i32] -> [i32]
   10 (10.87%) × [] -> []
   18 (19.57%) × [i32] -> [i32]
   19 (20.65%) × [i32, i32] -> [i32]
   19 (20.65%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 7 (8.54% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 2

CSV data for further analysis: access_file_after_heap_resizewasi.wasm,13483,213,16,6.9868994,92,5,4,2,4,12,8,12,236,40,16.949152,40,16.949152,40,16.949152

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"access_file_after_heap_resizewasi.wasm",0,1,4,"i32.load"
"access_file_after_heap_resizewasi.wasm",1,3,12,"i32.load"
