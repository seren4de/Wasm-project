Input file: test_setenv_leakwasi.wasm
  binary:    test_setenv_leakwasi.wasm

Functions:          120
  Imported:          15
  Non-imported:     105
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 5.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     16199
  call:             294 (1.81% of all instructions)
  call_indirect:     20 (0.12% of all instructions, 6.37% of all calls)

Globals:
  #0 i32
     init: i32.const 72032
     25 × global.get   50 × global.set   75 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     25 (23.81% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.95%) × [-880]
    1  (0.95%) × [-256]
    1  (0.95%) × [-208]
    1  (0.95%) × [-128]
    4  (3.81%) × [-32]
   16 (15.24%) × [-16]
   81 (77.14%) × []
  functions with stack allocation total: 24 (22.86%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_setenv_leakwasi.wasm",1,0.95238096,"[-880]",-880,880
sp_csv_line:"test_setenv_leakwasi.wasm",1,0.95238096,"[-256]",-256,256
sp_csv_line:"test_setenv_leakwasi.wasm",1,0.95238096,"[-208]",-208,208
sp_csv_line:"test_setenv_leakwasi.wasm",1,0.95238096,"[-128]",-128,128
sp_csv_line:"test_setenv_leakwasi.wasm",4,3.8095238,"[-32]",-32,32
sp_csv_line:"test_setenv_leakwasi.wasm",16,15.238095,"[-16]",-16,16
sp_csv_line:"test_setenv_leakwasi.wasm",81,77.14286,"[]",0,0

Counts of function types (16 unique types):
    1  (0.83%) × [i32, i32, i32] -> []
    1  (0.83%) × [i32, i32, i32, i32, i32] -> []
    1  (0.83%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.83%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.83%) × [f64, i32] -> [f64]
    2  (1.67%) × [i32, i32] -> []
    2  (1.67%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.67%) × [i32, i64, i32] -> [i64]
    2  (1.67%) × [i32, i64, i32, i32] -> [i32]
    3  (2.50%) × [] -> [i32]
    7  (5.83%) × [i32] -> []
    7  (5.83%) × [i32, i32, i32, i32] -> [i32]
   12 (10.00%) × [] -> []
   20 (16.67%) × [i32] -> [i32]
   26 (21.67%) × [i32, i32, i32] -> [i32]
   32 (26.67%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 8 (7.62% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    6]   length:   3   unique funcs:    3   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 13
  total classes: 3

CSV data for further analysis: test_setenv_leakwasi.wasm,16199,294,20,6.3694267,120,6,6,3,1,13,6.666666666666667,6,370,59,15.945946,59,15.945946,59,15.945946

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_setenv_leakwasi.wasm",0,1,1,"i32.load"
"test_setenv_leakwasi.wasm",1,1,6,"i32.load"
"test_setenv_leakwasi.wasm",2,4,13,"i32.load"
