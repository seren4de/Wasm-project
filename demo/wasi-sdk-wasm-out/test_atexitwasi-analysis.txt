Input file: test_atexitwasi.wasm
  binary:    test_atexitwasi.wasm

Functions:           56
  Imported:           5
  Non-imported:      51
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          7
  Of those, unique functions:     7 (i.e., at least 12.50% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     10997
  call:             146 (1.33% of all instructions)
  call_indirect:     15 (0.14% of all instructions, 9.32% of all calls)

Globals:
  #0 i32
     init: i32.const 71040
     10 × global.get   20 × global.set   30 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     10 (19.61% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.96%) × [-880]
    1  (1.96%) × [-256]
    1  (1.96%) × [-208]
    1  (1.96%) × [-32]
    5  (9.80%) × [-16]
   42 (82.35%) × []
  functions with stack allocation total: 9 (17.65%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_atexitwasi.wasm",1,1.9607843,"[-880]",-880,880
sp_csv_line:"test_atexitwasi.wasm",1,1.9607843,"[-256]",-256,256
sp_csv_line:"test_atexitwasi.wasm",1,1.9607843,"[-208]",-208,208
sp_csv_line:"test_atexitwasi.wasm",1,1.9607843,"[-32]",-32,32
sp_csv_line:"test_atexitwasi.wasm",5,9.803922,"[-16]",-16,16
sp_csv_line:"test_atexitwasi.wasm",42,82.35294,"[]",0,0

Counts of function types (13 unique types):
    1  (1.79%) × [i32, i32, i32] -> []
    1  (1.79%) × [i32, i32, i32, i32, i32] -> []
    1  (1.79%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.79%) × [f64, i32] -> [f64]
    2  (3.57%) × [] -> [i32]
    2  (3.57%) × [i32, i64, i32] -> [i64]
    2  (3.57%) × [i32, i64, i32, i32] -> [i32]
    3  (5.36%) × [i32, i32, i32, i32] -> [i32]
    5  (8.93%) × [i32] -> []
    9 (16.07%) × [] -> []
    9 (16.07%) × [i32, i32] -> [i32]
    9 (16.07%) × [i32, i32, i32] -> [i32]
   11 (19.64%) × [i32] -> [i32]

Functions with at least one call_indirect: 6 (11.76% of all functions)

Table elements initialization:
         range: [    1,    2]   length:   2   unique funcs:    2   type: [] -> []
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     1 × unrestricted                         source:   i32.load   type [i32] -> []
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #1
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 4

CSV data for further analysis: test_atexitwasi.wasm,10997,146,15,9.316771,56,7,4,4,1,9,3.75,4,103,25,24.271845,25,24.271845,23,22.330097

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_atexitwasi.wasm",0,2,1,"local.(get|tee)"
"test_atexitwasi.wasm",1,1,1,"i32.load"
"test_atexitwasi.wasm",2,1,4,"i32.load"
"test_atexitwasi.wasm",3,2,9,"i32.load"
