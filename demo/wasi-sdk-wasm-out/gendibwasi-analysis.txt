Input file: gendibwasi.wasm
  binary:    gendibwasi.wasm

Functions:          120
  Imported:          12
  Non-imported:     108
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.17% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     21920
  call:             543 (2.48% of all instructions)
  call_indirect:     19 (0.09% of all instructions, 3.38% of all calls)

Globals:
  #0 i32
     init: i32.const 75056
     38 × global.get   74 × global.set  112 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     38 (35.19% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.93%) × [-880]
    1  (0.93%) × [-256]
    1  (0.93%) × [-208]
    1  (0.93%) × [-128]
    4  (3.70%) × [-32]
   14 (12.96%) × [-16]
   86 (79.63%) × []
  functions with stack allocation total: 22 (20.37%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"gendibwasi.wasm",1,0.9259259,"[-880]",-880,880
sp_csv_line:"gendibwasi.wasm",1,0.9259259,"[-256]",-256,256
sp_csv_line:"gendibwasi.wasm",1,0.9259259,"[-208]",-208,208
sp_csv_line:"gendibwasi.wasm",1,0.9259259,"[-128]",-128,128
sp_csv_line:"gendibwasi.wasm",4,3.7037036,"[-32]",-32,32
sp_csv_line:"gendibwasi.wasm",14,12.962963,"[-16]",-16,16
sp_csv_line:"gendibwasi.wasm",86,79.62963,"[]",0,0

Counts of function types (18 unique types):
    1  (0.83%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (0.83%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.83%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.83%) × [f64, i32] -> [f64]
    2  (1.67%) × [i32, i32, i32, i32] -> []
    2  (1.67%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (1.67%) × [i32, i64, i32] -> [i64]
    2  (1.67%) × [i32, i64, i32, i32] -> [i32]
    3  (2.50%) × [] -> [i32]
    4  (3.33%) × [i32, i32] -> []
    4  (3.33%) × [i32, i32, i32] -> []
    4  (3.33%) × [i32, i32, i32, i32, i32] -> []
    7  (5.83%) × [i32, i32, i32, i32] -> [i32]
    9  (7.50%) × [i32] -> []
   10  (8.33%) × [] -> []
   17 (14.17%) × [i32] -> [i32]
   21 (17.50%) × [i32, i32, i32] -> [i32]
   29 (24.17%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 7 (6.48% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               17
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 3

CSV data for further analysis: gendibwasi.wasm,21920,543,19,3.3807828,120,5,5,3,1,12,6.333333333333333,6,281,43,15.302491,43,15.302491,43,15.302491

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"gendibwasi.wasm",0,1,1,"i32.load"
"gendibwasi.wasm",1,1,6,"i32.load"
"gendibwasi.wasm",2,3,12,"i32.load"
