Input file: hello_world_fopenwasi.wasm
  binary:    hello_world_fopenwasi.wasm

Functions:           88
  Imported:          10
  Non-imported:      78
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 4.55% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13355
  call:             213 (1.59% of all instructions)
  call_indirect:     18 (0.13% of all instructions, 7.79% of all calls)

Globals:
  #0 i32
     init: i32.const 69664
     19 × global.get   38 × global.set   57 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     19 (24.36% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.28%) × [-880]
    1  (1.28%) × [-256]
    1  (1.28%) × [-208]
    4  (5.13%) × [-32]
   11 (14.10%) × [-16]
   60 (76.92%) × []
  functions with stack allocation total: 18 (23.08%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"hello_world_fopenwasi.wasm",1,1.2820513,"[-880]",-880,880
sp_csv_line:"hello_world_fopenwasi.wasm",1,1.2820513,"[-256]",-256,256
sp_csv_line:"hello_world_fopenwasi.wasm",1,1.2820513,"[-208]",-208,208
sp_csv_line:"hello_world_fopenwasi.wasm",4,5.1282053,"[-32]",-32,32
sp_csv_line:"hello_world_fopenwasi.wasm",11,14.102564,"[-16]",-16,16
sp_csv_line:"hello_world_fopenwasi.wasm",60,76.92308,"[]",0,0

Counts of function types (15 unique types):
    1  (1.14%) × [i32, i32, i32] -> []
    1  (1.14%) × [i32, i32, i32, i32, i32] -> []
    1  (1.14%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.14%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (1.14%) × [f64, i32] -> [f64]
    2  (2.27%) × [] -> [i32]
    2  (2.27%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.27%) × [i32, i64, i32] -> [i64]
    2  (2.27%) × [i32, i64, i32, i32] -> [i32]
    6  (6.82%) × [i32, i32, i32, i32] -> [i32]
    7  (7.95%) × [i32] -> []
   10 (11.36%) × [] -> []
   16 (18.18%) × [i32] -> [i32]
   18 (20.45%) × [i32, i32] -> [i32]
   18 (20.45%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (7.69% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  3 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               16
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 11
  total classes: 3

CSV data for further analysis: hello_world_fopenwasi.wasm,13355,213,18,7.7922077,88,4,4,3,1,11,6,6,226,29,12.831859,29,12.831859,29,12.831859

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"hello_world_fopenwasi.wasm",0,1,1,"i32.load"
"hello_world_fopenwasi.wasm",1,1,6,"i32.load"
"hello_world_fopenwasi.wasm",2,2,11,"i32.load"
