Input file: divconstwasi.wasm
  binary:    divconstwasi.wasm

Functions:           71
  Imported:           7
  Non-imported:      64
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 5.63% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13236
  call:             183 (1.38% of all instructions)
  call_indirect:     15 (0.11% of all instructions, 7.58% of all calls)

Globals:
  #0 i32
     init: i32.const 71088
     17 × global.get   28 × global.set   45 total (38/62% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     17 (26.56% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.56%) × [-880]
    1  (1.56%) × [-256]
    1  (1.56%) × [-208]
    1  (1.56%) × [-112]
    1  (1.56%) × [-32]
    8 (12.50%) × [-16]
   51 (79.69%) × []
  functions with stack allocation total: 13 (20.31%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"divconstwasi.wasm",1,1.5625,"[-880]",-880,880
sp_csv_line:"divconstwasi.wasm",1,1.5625,"[-256]",-256,256
sp_csv_line:"divconstwasi.wasm",1,1.5625,"[-208]",-208,208
sp_csv_line:"divconstwasi.wasm",1,1.5625,"[-112]",-112,112
sp_csv_line:"divconstwasi.wasm",1,1.5625,"[-32]",-32,32
sp_csv_line:"divconstwasi.wasm",8,12.5,"[-16]",-16,16
sp_csv_line:"divconstwasi.wasm",51,79.6875,"[]",0,0

Counts of function types (16 unique types):
    1  (1.41%) × [i32, i32, i32] -> []
    1  (1.41%) × [i32, i32, i32, i32, i32] -> []
    1  (1.41%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.41%) × [i32, i32, i32, i64] -> [i64]
    1  (1.41%) × [i32, i64] -> []
    1  (1.41%) × [i32, i64, i64, i64, i64] -> []
    1  (1.41%) × [f64, i32] -> [f64]
    2  (2.82%) × [i32, i64, i32] -> [i64]
    2  (2.82%) × [i32, i64, i32, i32] -> [i32]
    3  (4.23%) × [] -> [i32]
    3  (4.23%) × [i32, i32, i32, i32] -> [i32]
    6  (8.45%) × [i32] -> []
    7  (9.86%) × [] -> []
   10 (14.08%) × [i32, i32, i32] -> [i32]
   15 (21.13%) × [i32, i32] -> [i32]
   16 (22.54%) × [i32] -> [i32]

Functions with at least one call_indirect: 6 (9.38% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 11
  total classes: 2

CSV data for further analysis: divconstwasi.wasm,13236,183,15,7.5757575,71,4,3,2,4,11,7.5,11,118,26,22.033897,26,22.033897,26,22.033897

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"divconstwasi.wasm",0,1,4,"i32.load"
"divconstwasi.wasm",1,2,11,"i32.load"
