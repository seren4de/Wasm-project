Input file: bprintwasi.wasm
  binary:    bprintwasi.wasm

Functions:          129
  Imported:          12
  Non-imported:     117
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          9
  Of those, unique functions:     9 (i.e., at least 6.98% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     23088
  call:             357 (1.55% of all instructions)
  call_indirect:     35 (0.15% of all instructions, 8.93% of all calls)

Globals:
  #0 i32
     init: i32.const 71424
     43 × global.get   81 × global.set  124 total (35/65% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     43 (36.75% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.85%) × [-880]
    1  (0.85%) × [-736]
    1  (0.85%) × [-704]
    1  (0.85%) × [-256]
    1  (0.85%) × [-208]
    1  (0.85%) × [-128]
    4  (3.42%) × [-32]
   17 (14.53%) × [-16]
   90 (76.92%) × []
  functions with stack allocation total: 27 (23.08%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"bprintwasi.wasm",1,0.85470086,"[-880]",-880,880
sp_csv_line:"bprintwasi.wasm",1,0.85470086,"[-736]",-736,736
sp_csv_line:"bprintwasi.wasm",1,0.85470086,"[-704]",-704,704
sp_csv_line:"bprintwasi.wasm",1,0.85470086,"[-256]",-256,256
sp_csv_line:"bprintwasi.wasm",1,0.85470086,"[-208]",-208,208
sp_csv_line:"bprintwasi.wasm",1,0.85470086,"[-128]",-128,128
sp_csv_line:"bprintwasi.wasm",4,3.4188035,"[-32]",-32,32
sp_csv_line:"bprintwasi.wasm",17,14.529915,"[-16]",-16,16
sp_csv_line:"bprintwasi.wasm",90,76.92308,"[]",0,0

Counts of function types (19 unique types):
    1  (0.78%) × [i32, i32, i32] -> []
    1  (0.78%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (0.78%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.78%) × [i32, i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.78%) × [i32, i32, i32, i32, i64, i64, i32, i32] -> [i32]
    1  (0.78%) × [f64, i32] -> [f64]
    2  (1.55%) × [i32, i32] -> []
    2  (1.55%) × [i32, i32, i32, i32] -> []
    2  (1.55%) × [i32, i32, i32, i32, i32] -> []
    2  (1.55%) × [i32, i64, i32] -> [i64]
    2  (1.55%) × [i32, i64, i32, i32] -> [i32]
    3  (2.33%) × [i32, i32, i32, i32, i32] -> [i32]
    6  (4.65%) × [] -> [i32]
    7  (5.43%) × [i32, i32, i32, i32] -> [i32]
    8  (6.20%) × [i32] -> []
   10  (7.75%) × [] -> []
   24 (18.60%) × [i32, i32, i32] -> [i32]
   26 (20.16%) × [i32] -> [i32]
   29 (22.48%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 12 (10.26% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    7,    9]   length:   3   unique funcs:    3   type: [i32, i32, i32] -> [i32]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               26
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
    12 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               29
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    14 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               24
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     6 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  5 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 2
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 6
  class #3
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 12
  class #4
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 14
  total classes: 5

CSV data for further analysis: bprintwasi.wasm,23088,357,35,8.928572,129,9,6,5,1,14,7,6,726,79,10.881543,79,10.881543,63,8.677686

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"bprintwasi.wasm",0,1,1,"i32.load"
"bprintwasi.wasm",1,2,2,"local.(get|tee)"
"bprintwasi.wasm",2,1,6,"i32.load"
"bprintwasi.wasm",3,1,12,"local.(get|tee)"
"bprintwasi.wasm",4,4,14,"i32.load"
