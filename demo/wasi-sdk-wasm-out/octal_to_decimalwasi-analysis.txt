Input file: octal_to_decimalwasi.wasm
  binary:    octal_to_decimalwasi.wasm

Functions:           87
  Imported:           6
  Non-imported:      81
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 5.75% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     20416
  call:             260 (1.27% of all instructions)
  call_indirect:     15 (0.07% of all instructions, 5.45% of all calls)

Globals:
  #0 i32
     init: i32.const 78832
     21 × global.get   40 × global.set   61 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     21 (25.93% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.23%) × [-880]
    1  (1.23%) × [-512]
    1  (1.23%) × [-304]
    1  (1.23%) × [-256]
    1  (1.23%) × [-208]
    1  (1.23%) × [-32]
   11 (13.58%) × [-16]
   64 (79.01%) × []
  functions with stack allocation total: 17 (20.99%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"octal_to_decimalwasi.wasm",1,1.2345679,"[-880]",-880,880
sp_csv_line:"octal_to_decimalwasi.wasm",1,1.2345679,"[-512]",-512,512
sp_csv_line:"octal_to_decimalwasi.wasm",1,1.2345679,"[-304]",-304,304
sp_csv_line:"octal_to_decimalwasi.wasm",1,1.2345679,"[-256]",-256,256
sp_csv_line:"octal_to_decimalwasi.wasm",1,1.2345679,"[-208]",-208,208
sp_csv_line:"octal_to_decimalwasi.wasm",1,1.2345679,"[-32]",-32,32
sp_csv_line:"octal_to_decimalwasi.wasm",11,13.580247,"[-16]",-16,16
sp_csv_line:"octal_to_decimalwasi.wasm",64,79.012344,"[]",0,0

Counts of function types (27 unique types):
    1  (1.15%) × [i32] -> [i64]
    1  (1.15%) × [i32, i32] -> []
    1  (1.15%) × [i32, i32] -> [i64]
    1  (1.15%) × [i32, i32, i32] -> []
    1  (1.15%) × [i32, i32, i32] -> [f64]
    1  (1.15%) × [i32, i32, i32, i32, i32] -> []
    1  (1.15%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.15%) × [i32, i32, i32, i32, i32] -> [f64]
    1  (1.15%) × [i32, i32, i32, i64] -> [i64]
    1  (1.15%) × [i32, i64] -> []
    1  (1.15%) × [i32, i64, i64, i64, i64] -> []
    1  (1.15%) × [i32, f64] -> [f64]
    1  (1.15%) × [i64] -> [i32]
    1  (1.15%) × [f64] -> [f64]
    1  (1.15%) × [f64, i64, i64] -> [f64]
    2  (2.30%) × [] -> [i32]
    2  (2.30%) × [i32] -> [f64]
    2  (2.30%) × [i32, i64, i32] -> [i64]
    2  (2.30%) × [i32, i64, i32, i32] -> [i32]
    2  (2.30%) × [f64, i32] -> [f64]
    2  (2.30%) × [f64, f64] -> [f64]
    6  (6.90%) × [i32] -> []
    6  (6.90%) × [i32, i32, i32, i32] -> [i32]
    8  (9.20%) × [] -> []
   12 (13.79%) × [i32, i32] -> [i32]
   13 (14.94%) × [i32, i32, i32] -> [i32]
   15 (17.24%) × [i32] -> [i32]

Functions with at least one call_indirect: 6 (7.41% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 11
  total classes: 2

CSV data for further analysis: octal_to_decimalwasi.wasm,20416,260,15,5.4545455,87,5,4,2,4,11,7.5,11,151,37,24.503311,37,24.503311,37,24.503311

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"octal_to_decimalwasi.wasm",0,1,4,"i32.load"
"octal_to_decimalwasi.wasm",1,3,11,"i32.load"
