Input file: mkkeywordhashwasi.wasm
  binary:    mkkeywordhashwasi.wasm

Functions:           73
  Imported:           7
  Non-imported:      66
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          7
  Of those, unique functions:     7 (i.e., at least 9.59% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     18300
  call:             256 (1.40% of all instructions)
  call_indirect:     25 (0.14% of all instructions, 8.90% of all calls)

Globals:
  #0 i32
     init: i32.const 82096
     19 × global.get   35 × global.set   54 total (35/65% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     19 (28.79% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.52%) × [-880]
    1  (1.52%) × [-736]
    1  (1.52%) × [-704]
    1  (1.52%) × [-256]
    1  (1.52%) × [-208]
    1  (1.52%) × [-32]
    8 (12.12%) × [-16]
   52 (78.79%) × []
  functions with stack allocation total: 14 (21.21%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"mkkeywordhashwasi.wasm",1,1.5151515,"[-880]",-880,880
sp_csv_line:"mkkeywordhashwasi.wasm",1,1.5151515,"[-736]",-736,736
sp_csv_line:"mkkeywordhashwasi.wasm",1,1.5151515,"[-704]",-704,704
sp_csv_line:"mkkeywordhashwasi.wasm",1,1.5151515,"[-256]",-256,256
sp_csv_line:"mkkeywordhashwasi.wasm",1,1.5151515,"[-208]",-208,208
sp_csv_line:"mkkeywordhashwasi.wasm",1,1.5151515,"[-32]",-32,32
sp_csv_line:"mkkeywordhashwasi.wasm",8,12.121212,"[-16]",-16,16
sp_csv_line:"mkkeywordhashwasi.wasm",52,78.78788,"[]",0,0

Counts of function types (15 unique types):
    1  (1.37%) × [i32, i32, i32] -> []
    1  (1.37%) × [i32, i32, i32, i32, i32] -> []
    1  (1.37%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.37%) × [i32, i32, i32, i32, i32, i32, i32] -> []
    1  (1.37%) × [f64, i32] -> [f64]
    2  (2.74%) × [i32, i32, i32, i32] -> []
    2  (2.74%) × [i32, i64, i32] -> [i64]
    2  (2.74%) × [i32, i64, i32, i32] -> [i32]
    3  (4.11%) × [] -> [i32]
    3  (4.11%) × [i32, i32, i32, i32] -> [i32]
    6  (8.22%) × [i32] -> []
    7  (9.59%) × [] -> []
   11 (15.07%) × [i32, i32, i32] -> [i32]
   12 (16.44%) × [i32] -> [i32]
   20 (27.40%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (9.09% of all functions)

Table elements initialization:
         range: [    1,    3]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    12 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  class #2
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 3

CSV data for further analysis: mkkeywordhashwasi.wasm,18300,256,25,8.896797,73,7,3,3,4,12,8.333333333333334,9,347,58,16.714697,58,16.714697,22,6.340058

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"mkkeywordhashwasi.wasm",0,1,4,"i32.load"
"mkkeywordhashwasi.wasm",1,2,9,"i32.load"
"mkkeywordhashwasi.wasm",2,3,12,"local.(get|tee)"
