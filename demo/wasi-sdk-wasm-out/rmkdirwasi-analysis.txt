Input file: rmkdirwasi.wasm
  binary:    rmkdirwasi.wasm

Functions:           90
  Imported:          10
  Non-imported:      80
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 4.44% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15049
  call:             246 (1.63% of all instructions)
  call_indirect:     14 (0.09% of all instructions, 5.38% of all calls)

Globals:
  #0 i32
     init: i32.const 69760
     20 × global.get   38 × global.set   58 total (34/66% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (25.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.25%) × [-880]
    1  (1.25%) × [-256]
    1  (1.25%) × [-208]
    1  (1.25%) × [-160]
    1  (1.25%) × [-96]
   12 (15.00%) × [-16]
   63 (78.75%) × []
  functions with stack allocation total: 17 (21.25%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"rmkdirwasi.wasm",1,1.25,"[-880]",-880,880
sp_csv_line:"rmkdirwasi.wasm",1,1.25,"[-256]",-256,256
sp_csv_line:"rmkdirwasi.wasm",1,1.25,"[-208]",-208,208
sp_csv_line:"rmkdirwasi.wasm",1,1.25,"[-160]",-160,160
sp_csv_line:"rmkdirwasi.wasm",1,1.25,"[-96]",-96,96
sp_csv_line:"rmkdirwasi.wasm",12,15,"[-16]",-16,16
sp_csv_line:"rmkdirwasi.wasm",63,78.75,"[]",0,0

Counts of function types (14 unique types):
    1  (1.11%) × [i32, i32] -> []
    1  (1.11%) × [i32, i32, i32] -> []
    1  (1.11%) × [i32, i32, i32, i32, i32] -> []
    1  (1.11%) × [f64, i32] -> [f64]
    2  (2.22%) × [i32, i64, i32] -> [i64]
    2  (2.22%) × [i32, i64, i32, i32] -> [i32]
    3  (3.33%) × [] -> [i32]
    3  (3.33%) × [i32, i32, i32, i32, i32] -> [i32]
    7  (7.78%) × [i32, i32, i32, i32] -> [i32]
    8  (8.89%) × [i32] -> []
    9 (10.00%) × [] -> []
   13 (14.44%) × [i32] -> [i32]
   15 (16.67%) × [i32, i32, i32] -> [i32]
   24 (26.67%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 5 (6.25% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               15
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: rmkdirwasi.wasm,15049,246,14,5.3846154,90,4,2,2,4,10,7,10,158,14,8.86076,14,8.86076,14,8.86076

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"rmkdirwasi.wasm",0,1,4,"i32.load"
"rmkdirwasi.wasm",1,1,10,"i32.load"
