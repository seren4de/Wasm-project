Input file: test_printf_morewasi.wasm
  binary:    test_printf_morewasi.wasm

Functions:           61
  Imported:           5
  Non-imported:      56
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 8.20% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12246
  call:             160 (1.31% of all instructions)
  call_indirect:     14 (0.11% of all instructions, 8.05% of all calls)

Globals:
  #0 i32
     init: i32.const 70832
     15 × global.get   31 × global.set   46 total (33/67% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     15 (26.79% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.79%) × [-880]
    1  (1.79%) × [-256]
    1  (1.79%) × [-208]
    1  (1.79%) × [-128]
    1  (1.79%) × [-32]
    9 (16.07%) × [-16]
   42 (75.00%) × []
  functions with stack allocation total: 14 (25.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_printf_morewasi.wasm",1,1.7857143,"[-880]",-880,880
sp_csv_line:"test_printf_morewasi.wasm",1,1.7857143,"[-256]",-256,256
sp_csv_line:"test_printf_morewasi.wasm",1,1.7857143,"[-208]",-208,208
sp_csv_line:"test_printf_morewasi.wasm",1,1.7857143,"[-128]",-128,128
sp_csv_line:"test_printf_morewasi.wasm",1,1.7857143,"[-32]",-32,32
sp_csv_line:"test_printf_morewasi.wasm",9,16.071428,"[-16]",-16,16
sp_csv_line:"test_printf_morewasi.wasm",42,75,"[]",0,0

Counts of function types (13 unique types):
    1  (1.64%) × [i32, i32, i32] -> []
    1  (1.64%) × [i32, i32, i32, i32, i32] -> []
    1  (1.64%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.64%) × [f64, i32] -> [f64]
    2  (3.28%) × [] -> [i32]
    2  (3.28%) × [i32, i64, i32] -> [i64]
    2  (3.28%) × [i32, i64, i32, i32] -> [i32]
    5  (8.20%) × [i32, i32, i32, i32] -> [i32]
    6  (9.84%) × [i32] -> []
    7 (11.48%) × [] -> []
    9 (14.75%) × [i32, i32] -> [i32]
   12 (19.67%) × [i32] -> [i32]
   12 (19.67%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 5 (8.93% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: test_printf_morewasi.wasm,12246,160,14,8.045977,61,5,4,2,4,10,7,10,128,34,26.5625,34,26.5625,34,26.5625

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_printf_morewasi.wasm",0,1,4,"i32.load"
"test_printf_morewasi.wasm",1,3,10,"i32.load"
