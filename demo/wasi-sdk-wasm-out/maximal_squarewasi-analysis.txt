Input file: maximal_squarewasi.wasm
  binary:    maximal_squarewasi.wasm

Functions:           65
  Imported:           7
  Non-imported:      58
  Exported:           1

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 6.15% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13218
  call:             174 (1.32% of all instructions)
  call_indirect:     13 (0.10% of all instructions, 6.95% of all calls)

Globals:
  #0 i32
     init: i32.const 70816
     15 × global.get   26 × global.set   41 total (37/63% split)

Likely the stack pointer:       Global #0
Functions using stack pointer:     15 (25.86% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.72%) × [-880]
    1  (1.72%) × [-256]
    1  (1.72%) × [-208]
    1  (1.72%) × [-32]
    7 (12.07%) × [-16]
   47 (81.03%) × []
  functions with stack allocation total: 11 (18.97%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"maximal_squarewasi.wasm",1,1.7241379,"[-880]",-880,880
sp_csv_line:"maximal_squarewasi.wasm",1,1.7241379,"[-256]",-256,256
sp_csv_line:"maximal_squarewasi.wasm",1,1.7241379,"[-208]",-208,208
sp_csv_line:"maximal_squarewasi.wasm",1,1.7241379,"[-32]",-32,32
sp_csv_line:"maximal_squarewasi.wasm",7,12.068966,"[-16]",-16,16
sp_csv_line:"maximal_squarewasi.wasm",47,81.034485,"[]",0,0

Counts of function types (13 unique types):
    1  (1.54%) × [i32, i32, i32] -> []
    1  (1.54%) × [i32, i32, i32, i32, i32] -> []
    1  (1.54%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.54%) × [f64, i32] -> [f64]
    2  (3.08%) × [i32, i64, i32] -> [i64]
    2  (3.08%) × [i32, i64, i32, i32] -> [i32]
    3  (4.62%) × [] -> [i32]
    3  (4.62%) × [i32, i32, i32, i32] -> [i32]
    6  (9.23%) × [i32] -> []
    7 (10.77%) × [] -> []
   11 (16.92%) × [i32] -> [i32]
   11 (16.92%) × [i32, i32, i32] -> [i32]
   16 (24.62%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 4 (6.90% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 2

CSV data for further analysis: maximal_squarewasi.wasm,13218,174,13,6.951872,65,4,3,2,4,9,6.5,9,107,22,20.560747,22,20.560747,22,20.560747

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"maximal_squarewasi.wasm",0,1,4,"i32.load"
"maximal_squarewasi.wasm",1,2,9,"i32.load"
