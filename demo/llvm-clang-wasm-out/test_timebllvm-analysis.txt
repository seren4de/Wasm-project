Input file: test_timebllvm.wasm
  binary:    test_timebllvm.wasm

Functions:           71
  Imported:           6
  Non-imported:      65
  Exported:          63

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 5.63% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12447
  call:             231 (1.86% of all instructions)
  call_indirect:     15 (0.12% of all instructions, 6.10% of all calls)

Globals:
  #0 i32
     init: i32.const 70592
     21 × global.get   63 × global.set   84 total (25/75% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70592
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5052
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 1148
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname"]
     init: i32.const 4668
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname_full"]
     init: i32.const 4672
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__libc"]
     init: i32.const 4676
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__hwcap"]
     init: i32.const 4740
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__sysinfo"]
     init: i32.const 4744
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_short_name"]
     init: i32.const 4668
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_name"]
     init: i32.const 4672
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdin_used"]
     init: i32.const 4664
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stdout_used"]
     init: i32.const 5048
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stderr_used"]
     init: i32.const 4896
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["stdout"]
     init: i32.const 1152
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     21 (32.31% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.54%) × [-8064]
    1  (1.54%) × [-288]
    1  (1.54%) × [-128]
    1  (1.54%) × [-112]
    1  (1.54%) × [-96]
    1  (1.54%) × [-32]
   14 (21.54%) × [-16]
   45 (69.23%) × []
  functions with stack allocation total: 20 (30.77%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_timebllvm.wasm",1,1.5384616,"[-8064]",-8064,8064
sp_csv_line:"test_timebllvm.wasm",1,1.5384616,"[-288]",-288,288
sp_csv_line:"test_timebllvm.wasm",1,1.5384616,"[-128]",-128,128
sp_csv_line:"test_timebllvm.wasm",1,1.5384616,"[-112]",-112,112
sp_csv_line:"test_timebllvm.wasm",1,1.5384616,"[-96]",-96,96
sp_csv_line:"test_timebllvm.wasm",1,1.5384616,"[-32]",-32,32
sp_csv_line:"test_timebllvm.wasm",14,21.538462,"[-16]",-16,16
sp_csv_line:"test_timebllvm.wasm",45,69.23077,"[]",0,0

Counts of function types (18 unique types):
    1  (1.41%) × [i32, i32, i32] -> []
    1  (1.41%) × [i32, i32, i32, i32] -> []
    1  (1.41%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.41%) × [i32, i64, i32] -> [i64]
    1  (1.41%) × [i32, f64] -> []
    2  (2.82%) × [i32, i32] -> []
    2  (2.82%) × [i32, i32, i32, i32] -> [i32]
    2  (2.82%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (4.23%) × [] -> [i32]
    3  (4.23%) × [i32, i64, i64, i32] -> []
    3  (4.23%) × [i32, i64, i64, i64, i64] -> []
    4  (5.63%) × [i64, i64] -> [i32]
    5  (7.04%) × [] -> []
    6  (8.45%) × [i32] -> []
    7  (9.86%) × [i64, i64, i64, i64] -> [i32]
    8 (11.27%) × [i32, i32] -> [i32]
   10 (14.08%) × [i32, i32, i32] -> [i32]
   11 (15.49%) × [i32] -> [i32]

Functions with at least one call_indirect: 5 (7.69% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: test_timebllvm.wasm,12447,231,15,6.097561,71,4,3,2,5,10,7.5,10,105,25,23.809525,25,23.809525,25,23.809525

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_timebllvm.wasm",0,1,5,"i32.load"
"test_timebllvm.wasm",1,2,10,"i32.load"
