Input file: unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm
  binary:    unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm

Functions:          124
  Imported:           7
  Non-imported:     117
  Exported:         109

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.03% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     27552
  call:             652 (2.37% of all instructions)
  call_indirect:     24 (0.09% of all instructions, 3.55% of all calls)

Globals:
  #0 i32
     init: i32.const 72752
      35 × global.get   108 × global.set   143 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 72752
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 7204
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 4848
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 4852
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 4856
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 4920
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 4924
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 4848
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 4852
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["__malloc_replaced"]
     init: i32.const 5976
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["__fsmu8"]
     init: i32.const 4640
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__stdin_used"]
     init: i32.const 5992
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__stdout_used"]
     init: i32.const 7200
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__stderr_used"]
     init: i32.const 5992
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["stdout"]
     init: i32.const 1848
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     35 (29.91% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.85%) × [-9472]
    1  (0.85%) × [-8064]
    1  (0.85%) × [-320]
    1  (0.85%) × [-288]
    1  (0.85%) × [-192]
    1  (0.85%) × [-112]
    1  (0.85%) × [-96]
    1  (0.85%) × [-80]
    2  (1.71%) × [-128]
    3  (2.56%) × [-32]
   21 (17.95%) × [-16]
   83 (70.94%) × []
  functions with stack allocation total: 34 (29.06%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-9472]",-9472,9472
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-8064]",-8064,8064
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-320]",-320,320
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-288]",-288,288
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-192]",-192,192
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-112]",-112,112
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-96]",-96,96
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,0.85470086,"[-80]",-80,80
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",2,1.7094017,"[-128]",-128,128
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",3,2.5641026,"[-32]",-32,32
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",21,17.948717,"[-16]",-16,16
sp_csv_line:"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",83,70.94017,"[]",0,0

Counts of function types (29 unique types):
    1  (0.81%) × [i32, i32] -> [i64]
    1  (0.81%) × [i32, i32, i32] -> []
    1  (0.81%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.81%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.81%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.81%) × [i32, i32, i32, i64] -> [i64]
    1  (0.81%) × [i32, i64] -> []
    1  (0.81%) × [i32, i64, i32] -> [i64]
    1  (0.81%) × [i32, f32] -> []
    1  (0.81%) × [i32, f64] -> []
    1  (0.81%) × [i64, i64] -> [f32]
    1  (0.81%) × [i64, i64] -> [f64]
    1  (0.81%) × [f64] -> [f64]
    1  (0.81%) × [f64, i32] -> [f64]
    2  (1.61%) × [] -> [i32]
    2  (1.61%) × [i32, i32, i32, i32] -> []
    2  (1.61%) × [i32, i64, i32] -> [i32]
    3  (2.42%) × [i32, i32, i32, i32] -> [i32]
    3  (2.42%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (3.23%) × [i32, i32] -> []
    4  (3.23%) × [i32, i64, i64, i32] -> []
    4  (3.23%) × [i64, i64] -> [i32]
    7  (5.65%) × [] -> []
    7  (5.65%) × [i32, i64, i64, i64, i64] -> []
    7  (5.65%) × [i64, i64, i64, i64] -> [i32]
   11  (8.87%) × [i32] -> []
   15 (12.10%) × [i32, i32, i32] -> [i32]
   16 (12.90%) × [i32, i32] -> [i32]
   23 (18.55%) × [i32] -> [i32]

Functions with at least one call_indirect: 11 (9.40% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    15 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               15
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     8 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 8
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 15
  total classes: 3

CSV data for further analysis: unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm,27552,652,24,3.5502958,124,5,5,3,1,15,8,8,256,54,21.09375,54,21.09375,54,21.09375

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",0,1,1,"i32.load"
"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",1,1,8,"i32.load"
"unofficial_unsupported_convert_Gmsh_to_Specfem2D_Nicolas_Massacretllvm.wasm",2,3,15,"i32.load"
