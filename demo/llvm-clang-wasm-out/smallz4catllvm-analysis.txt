Input file: smallz4catllvm.wasm
  binary:    smallz4catllvm.wasm

Functions:           84
  Imported:           7
  Non-imported:      77
  Exported:          69

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          7
  Of those, unique functions:     7 (i.e., at least 8.33% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     10242
  call:             268 (2.62% of all instructions)
  call_indirect:     58 (0.57% of all instructions, 17.79% of all calls)

Globals:
  #0 i32
     init: i32.const 70608
     16 × global.get   44 × global.set   60 total (27/73% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70608
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5068
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 1352
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["stdin"]
     init: i32.const 1356
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["stdout"]
     init: i32.const 1360
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__progname"]
     init: i32.const 1376
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__progname_full"]
     init: i32.const 1380
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__libc"]
     init: i32.const 1384
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["__hwcap"]
     init: i32.const 1448
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__sysinfo"]
     init: i32.const 1452
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1376
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["program_invocation_name"]
     init: i32.const 1380
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__malloc_replaced"]
     init: i32.const 2504
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["__stdin_used"]
     init: i32.const 4912
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["__stdout_used"]
     init: i32.const 5064
      0 × global.get    0 × global.set    0 total
  #17 i32
     export: ["__stderr_used"]
     init: i32.const 4760
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     16 (20.78% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.30%) × [-128]
    9 (11.69%) × [-16]
   67 (87.01%) × []
  functions with stack allocation total: 10 (12.99%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"smallz4catllvm.wasm",1,1.2987013,"[-128]",-128,128
sp_csv_line:"smallz4catllvm.wasm",9,11.688312,"[-16]",-16,16
sp_csv_line:"smallz4catllvm.wasm",67,87.012985,"[]",0,0

Counts of function types (17 unique types):
    1  (1.19%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.19%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.19%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (1.19%) × [i32, i64, i32] -> [i64]
    2  (2.38%) × [] -> [i32]
    2  (2.38%) × [i32] -> [i64]
    2  (2.38%) × [i32, i32] -> []
    2  (2.38%) × [i32, i32, i32] -> []
    2  (2.38%) × [i32, i32, i32, i32] -> []
    2  (2.38%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.38%) × [i32, i64, i32] -> [i32]
    3  (3.57%) × [i32, i32, i32, i32] -> [i32]
    9 (10.71%) × [] -> []
    9 (10.71%) × [i32, i32, i32] -> [i32]
   12 (14.29%) × [i32, i32] -> [i32]
   14 (16.67%) × [i32] -> []
   19 (22.62%) × [i32] -> [i32]

Functions with at least one call_indirect: 16 (20.78% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
    26 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     4 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    15 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     8 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source: local.(get|tee)   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  7 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #3
    type: [i32, i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #4
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 8
  class #5
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 15
  class #6
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 26
  total classes: 7

CSV data for further analysis: smallz4catllvm.wasm,10242,268,58,17.79141,84,7,6,7,1,26,8.285714285714286,4,676,114,16.863905,114,16.863905,55,8.136095

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"smallz4catllvm.wasm",0,0,1,"i32.load"
"smallz4catllvm.wasm",1,2,1,"i32.load"
"smallz4catllvm.wasm",2,1,3,"local.(get|tee)"
"smallz4catllvm.wasm",3,1,4,"local.(get|tee)"
"smallz4catllvm.wasm",4,1,8,"i32.load"
"smallz4catllvm.wasm",5,3,15,"i32.load"
"smallz4catllvm.wasm",6,2,26,"local.(get|tee)"
