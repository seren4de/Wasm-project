Input file: stringifyllvm.wasm
  binary:    stringifyllvm.wasm

Functions:          103
  Imported:           7
  Non-imported:      96
  Exported:          88

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 3.88% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     16495
  call:             399 (2.42% of all instructions)
  call_indirect:     18 (0.11% of all instructions, 4.32% of all calls)

Globals:
  #0 i32
     init: i32.const 70352
     24 × global.get   78 × global.set  102 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70352
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 4816
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 3656
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 3660
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 3664
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 3728
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 3732
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 3656
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 3660
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__malloc_replaced"]
     init: i32.const 4784
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdin_used"]
     init: i32.const 4804
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stdout_used"]
     init: i32.const 4800
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stderr_used"]
     init: i32.const 4804
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     24 (25.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.04%) × [-8064]
    1  (1.04%) × [-288]
    1  (1.04%) × [-128]
    1  (1.04%) × [-112]
    1  (1.04%) × [-96]
    1  (1.04%) × [-32]
   16 (16.67%) × [-16]
   74 (77.08%) × []
  functions with stack allocation total: 22 (22.92%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"stringifyllvm.wasm",1,1.0416666,"[-8064]",-8064,8064
sp_csv_line:"stringifyllvm.wasm",1,1.0416666,"[-288]",-288,288
sp_csv_line:"stringifyllvm.wasm",1,1.0416666,"[-128]",-128,128
sp_csv_line:"stringifyllvm.wasm",1,1.0416666,"[-112]",-112,112
sp_csv_line:"stringifyllvm.wasm",1,1.0416666,"[-96]",-96,96
sp_csv_line:"stringifyllvm.wasm",1,1.0416666,"[-32]",-32,32
sp_csv_line:"stringifyllvm.wasm",16,16.666666,"[-16]",-16,16
sp_csv_line:"stringifyllvm.wasm",74,77.083336,"[]",0,0

Counts of function types (20 unique types):
    1  (0.97%) × [i32, i32, i32] -> []
    1  (0.97%) × [i32, i32, i32, i32] -> []
    1  (0.97%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.97%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.97%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.97%) × [i32, i64, i32] -> [i64]
    1  (0.97%) × [i32, f64] -> []
    2  (1.94%) × [] -> [i32]
    2  (1.94%) × [i32, i32, i32, i32] -> [i32]
    3  (2.91%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (2.91%) × [i32, i64, i64, i32] -> []
    3  (2.91%) × [i32, i64, i64, i64, i64] -> []
    4  (3.88%) × [i32, i32] -> []
    4  (3.88%) × [i64, i64] -> [i32]
    7  (6.80%) × [] -> []
    7  (6.80%) × [i64, i64, i64, i64] -> [i32]
   11 (10.68%) × [i32] -> []
   13 (12.62%) × [i32, i32, i32] -> [i32]
   15 (14.56%) × [i32, i32] -> [i32]
   22 (21.36%) × [i32] -> [i32]

Functions with at least one call_indirect: 8 (8.33% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  3 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               22
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 12
  total classes: 3

CSV data for further analysis: stringifyllvm.wasm,16495,399,18,4.316547,103,4,4,3,1,12,6,5,183,30,16.393442,30,16.393442,30,16.393442

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"stringifyllvm.wasm",0,1,1,"i32.load"
"stringifyllvm.wasm",1,1,5,"i32.load"
"stringifyllvm.wasm",2,2,12,"i32.load"
