Input file: inca-swap-bytesllvm.wasm
  binary:    inca-swap-bytesllvm.wasm

Functions:           38
  Imported:           4
  Non-imported:      34
  Exported:          34

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          3
  Of those, unique functions:     3 (i.e., at least 7.89% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      3071
  call:              66 (2.15% of all instructions)
  call_indirect:     11 (0.36% of all instructions, 14.29% of all calls)

Globals:
  #0 i32
     init: i32.const 68736
      5 × global.get   13 × global.set   18 total (28/72% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 68736
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 3196
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 2964
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 2968
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 2972
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 3036
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 3040
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 2964
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 2968
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 2952
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 2952
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 3192
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stderr"]
     init: i32.const 2940
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:      5 (14.71% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (2.94%) × [-32]
    3  (8.82%) × [-16]
   30 (88.24%) × []
  functions with stack allocation total: 4 (11.76%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"inca-swap-bytesllvm.wasm",1,2.9411764,"[-32]",-32,32
sp_csv_line:"inca-swap-bytesllvm.wasm",3,8.823529,"[-16]",-16,16
sp_csv_line:"inca-swap-bytesllvm.wasm",30,88.23529,"[]",0,0

Counts of function types (10 unique types):
    1  (2.63%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (2.63%) × [i32, i64, i32] -> [i64]
    2  (5.26%) × [i32, i32, i32, i32] -> [i32]
    2  (5.26%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    3  (7.89%) × [] -> [i32]
    4 (10.53%) × [] -> []
    4 (10.53%) × [i32] -> []
    6 (15.79%) × [i32, i32, i32] -> [i32]
    7 (18.42%) × [i32, i32] -> [i32]
    8 (21.05%) × [i32] -> [i32]

Functions with at least one call_indirect: 4 (11.76% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  3 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 8
  total classes: 2

CSV data for further analysis: inca-swap-bytesllvm.wasm,3071,66,11,14.285714,38,3,2,2,3,8,5.5,8,51,11,21.568628,11,21.568628,11,21.568628

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"inca-swap-bytesllvm.wasm",0,1,3,"i32.load"
"inca-swap-bytesllvm.wasm",1,1,8,"i32.load"
