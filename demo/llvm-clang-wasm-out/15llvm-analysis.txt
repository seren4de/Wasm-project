Input file: 15llvm.wasm
  binary:    15llvm.wasm

Functions:           76
  Imported:           3
  Non-imported:      73
  Exported:          71

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 6.58% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12874
  call:             240 (1.86% of all instructions)
  call_indirect:     19 (0.15% of all instructions, 7.34% of all calls)

Globals:
  #0 i32
     init: i32.const 71520
     20 × global.get   65 × global.set   85 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71520
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5972
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stdout"]
     init: i32.const 1044
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname"]
     init: i32.const 5592
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname_full"]
     init: i32.const 5596
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__libc"]
     init: i32.const 5600
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__hwcap"]
     init: i32.const 5664
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__sysinfo"]
     init: i32.const 5668
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_short_name"]
     init: i32.const 5592
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_name"]
     init: i32.const 5596
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdin_used"]
     init: i32.const 5816
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stdout_used"]
     init: i32.const 5968
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stderr_used"]
     init: i32.const 3504
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["stdin"]
     init: i32.const 1040
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (27.40% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.37%) × [-8064]
    1  (1.37%) × [-288]
    1  (1.37%) × [-112]
    1  (1.37%) × [-96]
    1  (1.37%) × [-32]
   14 (19.18%) × [-16]
   54 (73.97%) × []
  functions with stack allocation total: 19 (26.03%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"15llvm.wasm",1,1.369863,"[-8064]",-8064,8064
sp_csv_line:"15llvm.wasm",1,1.369863,"[-288]",-288,288
sp_csv_line:"15llvm.wasm",1,1.369863,"[-112]",-112,112
sp_csv_line:"15llvm.wasm",1,1.369863,"[-96]",-96,96
sp_csv_line:"15llvm.wasm",1,1.369863,"[-32]",-32,32
sp_csv_line:"15llvm.wasm",14,19.178082,"[-16]",-16,16
sp_csv_line:"15llvm.wasm",54,73.9726,"[]",0,0

Counts of function types (17 unique types):
    1  (1.32%) × [i32, i32, i32] -> []
    1  (1.32%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.32%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.32%) × [i32, i64, i32] -> [i64]
    1  (1.32%) × [i32, f64] -> []
    2  (2.63%) × [i32, i32] -> []
    2  (2.63%) × [i32, i32, i32, i32] -> [i32]
    3  (3.95%) × [i32, i64, i64, i32] -> []
    3  (3.95%) × [i32, i64, i64, i64, i64] -> []
    4  (5.26%) × [] -> [i32]
    4  (5.26%) × [i64, i64] -> [i32]
    5  (6.58%) × [i32] -> []
    7  (9.21%) × [] -> []
    7  (9.21%) × [i64, i64, i64, i64] -> [i32]
    9 (11.84%) × [i32, i32, i32] -> [i32]
   11 (14.47%) × [i32, i32] -> [i32]
   14 (18.42%) × [i32] -> [i32]

Functions with at least one call_indirect: 9 (12.33% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                7
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 13
  total classes: 3

CSV data for further analysis: 15llvm.wasm,12874,240,19,7.3359075,76,5,4,3,1,13,6.333333333333333,5,129,44,34.10853,44,34.10853,44,34.10853

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"15llvm.wasm",0,0,1,"i32.load"
"15llvm.wasm",1,1,5,"i32.load"
"15llvm.wasm",2,3,13,"i32.load"
