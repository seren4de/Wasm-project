Input file: infix_to_postfix2llvm.wasm
  binary:    infix_to_postfix2llvm.wasm

Functions:          127
  Imported:           7
  Non-imported:     120
  Exported:         111

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 3.94% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     26562
  call:             605 (2.28% of all instructions)
  call_indirect:     18 (0.07% of all instructions, 2.89% of all calls)

Globals:
  #0 i32
     init: i32.const 73776
      40 × global.get   111 × global.set   151 total (26/74% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 73776
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 8228
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["st"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["stderr"]
     init: i32.const 4668
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["__progname"]
     init: i32.const 3160
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["__progname_full"]
     init: i32.const 3164
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["__libc"]
     init: i32.const 3168
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["__hwcap"]
     init: i32.const 3232
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["__sysinfo"]
     init: i32.const 3236
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["program_invocation_short_name"]
     init: i32.const 3160
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["program_invocation_name"]
     init: i32.const 3164
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__malloc_replaced"]
     init: i32.const 4296
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__fsmu8"]
     init: i32.const 7472
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__stdin_used"]
     init: i32.const 8224
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["__stdout_used"]
     init: i32.const 8072
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["__stderr_used"]
     init: i32.const 7920
       0 × global.get     0 × global.set     0 total
  #18 i32
     export: ["stdout"]
     init: i32.const 4672
       0 × global.get     0 × global.set     0 total
  #19 i32
     export: ["stdin"]
     init: i32.const 7128
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     40 (33.33% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.83%) × [-9472]
    1  (0.83%) × [-8064]
    1  (0.83%) × [-320]
    1  (0.83%) × [-288]
    1  (0.83%) × [-192]
    1  (0.83%) × [-112]
    1  (0.83%) × [-96]
    1  (0.83%) × [-80]
    2  (1.67%) × [-128]
    3  (2.50%) × [-32]
   21 (17.50%) × [-16]
   86 (71.67%) × []
  functions with stack allocation total: 34 (28.33%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-9472]",-9472,9472
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-8064]",-8064,8064
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-320]",-320,320
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-288]",-288,288
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-192]",-192,192
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-112]",-112,112
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-96]",-96,96
sp_csv_line:"infix_to_postfix2llvm.wasm",1,0.8333333,"[-80]",-80,80
sp_csv_line:"infix_to_postfix2llvm.wasm",2,1.6666666,"[-128]",-128,128
sp_csv_line:"infix_to_postfix2llvm.wasm",3,2.5,"[-32]",-32,32
sp_csv_line:"infix_to_postfix2llvm.wasm",21,17.5,"[-16]",-16,16
sp_csv_line:"infix_to_postfix2llvm.wasm",86,71.666664,"[]",0,0

Counts of function types (28 unique types):
    1  (0.79%) × [i32, i32] -> [i64]
    1  (0.79%) × [i32, i32, i32] -> []
    1  (0.79%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.79%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.79%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.79%) × [i32, i32, i32, i64] -> [i64]
    1  (0.79%) × [i32, i64] -> []
    1  (0.79%) × [i32, i64, i32] -> [i64]
    1  (0.79%) × [i32, f32] -> []
    1  (0.79%) × [i32, f64] -> []
    1  (0.79%) × [i64, i64] -> [f32]
    1  (0.79%) × [i64, i64] -> [f64]
    1  (0.79%) × [f64] -> [f64]
    1  (0.79%) × [f64, i32] -> [f64]
    3  (2.36%) × [i32, i32, i32, i32] -> []
    3  (2.36%) × [i32, i32, i32, i32] -> [i32]
    3  (2.36%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (3.15%) × [i32, i32] -> []
    4  (3.15%) × [i32, i64, i64, i32] -> []
    4  (3.15%) × [i64, i64] -> [i32]
    6  (4.72%) × [] -> [i32]
    7  (5.51%) × [i32, i64, i64, i64, i64] -> []
    7  (5.51%) × [i64, i64, i64, i64] -> [i32]
   10  (7.87%) × [] -> []
   13 (10.24%) × [i32] -> []
   13 (10.24%) × [i32, i32, i32] -> [i32]
   14 (11.02%) × [i32, i32] -> [i32]
   22 (17.32%) × [i32] -> [i32]

Functions with at least one call_indirect: 8 (6.67% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 3

CSV data for further analysis: infix_to_postfix2llvm.wasm,26562,605,18,2.8892455,127,5,4,3,1,12,6,5,171,41,23.976608,41,23.976608,41,23.976608

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"infix_to_postfix2llvm.wasm",0,0,1,"i32.load"
"infix_to_postfix2llvm.wasm",1,1,5,"i32.load"
"infix_to_postfix2llvm.wasm",2,3,12,"i32.load"
