Input file: s-structllvm.wasm
  binary:    s-structllvm.wasm

Functions:            3
  Imported:           0
  Non-imported:       3
  Exported:           3

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          0
  Of those, unique functions:     0 (i.e., at least 0.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:       151
  call:               1 (0.66% of all instructions)
  call_indirect:      0 (0.00% of all instructions, 0.00% of all calls)

Globals:
  #0 i32
     init: i32.const 66592
     2 × global.get   2 × global.set   4 total (50/50% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 66592
     0 × global.get   0 × global.set   0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 1051
     0 × global.get   0 × global.set   0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
     0 × global.get   0 × global.set   0 total
  #4 i32
     export: ["g_opt"]
     init: i32.const 1024
     0 × global.get   0 × global.set   0 total
  #5 i32
     export: ["g_index"]
     init: i32.const 1032
     0 × global.get   0 × global.set   0 total
  #6 i32
     export: ["g_value1"]
     init: i32.const 1036
     0 × global.get   0 × global.set   0 total
  #7 i32
     export: ["g_value2"]
     init: i32.const 1040
     0 × global.get   0 × global.set   0 total
  #8 i32
     export: ["g_sr"]
     init: i32.const 1031
     0 × global.get   0 × global.set   0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:      2 (66.67% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    3(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-structllvm.wasm",3,100,"[]",0,0

Counts of function types (3 unique types):
    1 (33.33%) × [] -> []
    1 (33.33%) × [] -> [i32]
    1 (33.33%) × [i32, i32, i32, i32] -> []

Functions with at least one call_indirect: 0 (0.00% of all functions)

Table elements initialization:
  0 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
  0 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  total classes: 0

