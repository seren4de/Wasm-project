Input file: test_ctypellvm.wasm
  binary:    test_ctypellvm.wasm

Functions:           89
  Imported:           3
  Non-imported:      86
  Exported:          83

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         17
  Of those, unique functions:    17 (i.e., at least 19.10% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15166
  call:             379 (2.50% of all instructions)
  call_indirect:     18 (0.12% of all instructions, 4.53% of all calls)

Globals:
  #0 i32
     init: i32.const 72400
     18 × global.get   56 × global.set   74 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 72400
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6852
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 6772
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 6776
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 6780
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 6844
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 6848
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 6772
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 6776
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 6768
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 5720
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 6768
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdout"]
     init: i32.const 3124
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     18 (20.93% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.16%) × [-8064]
    1  (1.16%) × [-288]
    1  (1.16%) × [-112]
    1  (1.16%) × [-96]
    1  (1.16%) × [-32]
   11 (12.79%) × [-16]
   70 (81.40%) × []
  functions with stack allocation total: 16 (18.60%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_ctypellvm.wasm",1,1.1627907,"[-8064]",-8064,8064
sp_csv_line:"test_ctypellvm.wasm",1,1.1627907,"[-288]",-288,288
sp_csv_line:"test_ctypellvm.wasm",1,1.1627907,"[-112]",-112,112
sp_csv_line:"test_ctypellvm.wasm",1,1.1627907,"[-96]",-96,96
sp_csv_line:"test_ctypellvm.wasm",1,1.1627907,"[-32]",-32,32
sp_csv_line:"test_ctypellvm.wasm",11,12.790698,"[-16]",-16,16
sp_csv_line:"test_ctypellvm.wasm",70,81.39535,"[]",0,0

Counts of function types (17 unique types):
    1  (1.12%) × [i32, i32, i32] -> []
    1  (1.12%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.12%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.12%) × [i32, i64, i32] -> [i64]
    1  (1.12%) × [i32, f64] -> []
    2  (2.25%) × [i32, i32] -> []
    2  (2.25%) × [i32, i32, i32, i32] -> [i32]
    3  (3.37%) × [] -> [i32]
    3  (3.37%) × [i32] -> []
    3  (3.37%) × [i32, i64, i64, i32] -> []
    3  (3.37%) × [i32, i64, i64, i64, i64] -> []
    4  (4.49%) × [] -> []
    4  (4.49%) × [i64, i64] -> [i32]
    7  (7.87%) × [i64, i64, i64, i64] -> [i32]
    8  (8.99%) × [i32, i32, i32] -> [i32]
   21 (23.60%) × [i32, i32] -> [i32]
   24 (26.97%) × [i32] -> [i32]

Functions with at least one call_indirect: 5 (5.81% of all functions)

Table elements initialization:
         range: [    1,   13]   length:  13   unique funcs:   13   type: [i32] -> [i32]
         range: [   14,   14]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   15,   15]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   16,   16]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   17,   17]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     7 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               24
         functions matching by type and present in table (regardless at which table index):   14
         functions matching by type and present in permissable table index range:             14
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                8
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 14
    count (how often class appears): 7
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 8
  total classes: 3

CSV data for further analysis: test_ctypellvm.wasm,15166,379,18,4.534005,89,17,3,3,3,8,6,7,235,117,49.787235,117,49.787235,19,8.085107

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_ctypellvm.wasm",0,1,3,"i32.load"
"test_ctypellvm.wasm",1,14,7,"local.(get|tee)"
"test_ctypellvm.wasm",2,2,8,"i32.load"
