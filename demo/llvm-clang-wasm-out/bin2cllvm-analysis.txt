Input file: bin2cllvm.wasm
  binary:    bin2cllvm.wasm

Functions:          134
  Imported:           7
  Non-imported:     127
  Exported:         115

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 4.48% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     20996
  call:             481 (2.29% of all instructions)
  call_indirect:     20 (0.10% of all instructions, 3.99% of all calls)

Globals:
  #0 i32
     init: i32.const 72736
      34 × global.get   100 × global.set   134 total (25/75% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 72736
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 7188
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["stdout"]
     init: i32.const 1308
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["stderr"]
     init: i32.const 1304
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["__environ"]
     init: i32.const 6712
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["___environ"]
     init: i32.const 6712
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["_environ"]
     init: i32.const 6712
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["environ"]
     init: i32.const 6712
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["__progname"]
     init: i32.const 4432
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["__progname_full"]
     init: i32.const 4436
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["__libc"]
     init: i32.const 4440
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__hwcap"]
     init: i32.const 4504
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__sysinfo"]
     init: i32.const 4508
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["program_invocation_short_name"]
     init: i32.const 4432
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["program_invocation_name"]
     init: i32.const 4436
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["__c_dot_utf8"]
     init: i32.const 3780
       0 × global.get     0 × global.set     0 total
  #18 i32
     export: ["__c_locale"]
     init: i32.const 3816
       0 × global.get     0 × global.set     0 total
  #19 i32
     export: ["__c_dot_utf8_locale"]
     init: i32.const 3840
       0 × global.get     0 × global.set     0 total
  #20 i32
     export: ["__malloc_replaced"]
     init: i32.const 5560
       0 × global.get     0 × global.set     0 total
  #21 i32
     export: ["__stdin_used"]
     init: i32.const 5576
       0 × global.get     0 × global.set     0 total
  #22 i32
     export: ["__stdout_used"]
     init: i32.const 7176
       0 × global.get     0 × global.set     0 total
  #23 i32
     export: ["__stderr_used"]
     init: i32.const 7024
       0 × global.get     0 × global.set     0 total
  #24 i32
     export: ["__daylight"]
     init: i32.const 6720
       0 × global.get     0 × global.set     0 total
  #25 i32
     export: ["__timezone"]
     init: i32.const 6716
       0 × global.get     0 × global.set     0 total
  #26 i32
     export: ["__tzname"]
     init: i32.const 6724
       0 × global.get     0 × global.set     0 total
  #27 i32
     export: ["__utc"]
     init: i32.const 4320
       0 × global.get     0 × global.set     0 total
  #28 i32
     export: ["timezone"]
     init: i32.const 6716
       0 × global.get     0 × global.set     0 total
  #29 i32
     export: ["daylight"]
     init: i32.const 6720
       0 × global.get     0 × global.set     0 total
  #30 i32
     export: ["tzname"]
     init: i32.const 6724
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     34 (26.77% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.79%) × [-8064]
    1  (0.79%) × [-304]
    1  (0.79%) × [-288]
    1  (0.79%) × [-160]
    1  (0.79%) × [-144]
    1  (0.79%) × [-128]
    1  (0.79%) × [-112]
    1  (0.79%) × [-96]
    2  (1.57%) × [-32]
   21 (16.54%) × [-16]
   96 (75.59%) × []
  functions with stack allocation total: 31 (24.41%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-8064]",-8064,8064
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-304]",-304,304
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-288]",-288,288
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-160]",-160,160
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-144]",-144,144
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-128]",-128,128
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-112]",-112,112
sp_csv_line:"bin2cllvm.wasm",1,0.78740156,"[-96]",-96,96
sp_csv_line:"bin2cllvm.wasm",2,1.5748031,"[-32]",-32,32
sp_csv_line:"bin2cllvm.wasm",21,16.535433,"[-16]",-16,16
sp_csv_line:"bin2cllvm.wasm",96,75.59055,"[]",0,0

Counts of function types (25 unique types):
    1  (0.75%) × [i32] -> [i64]
    1  (0.75%) × [i32, i32] -> [i64]
    1  (0.75%) × [i32, i32, i32] -> []
    1  (0.75%) × [i32, i32, i32, i32] -> []
    1  (0.75%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.75%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.75%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.75%) × [i32, i64, i32] -> [i64]
    1  (0.75%) × [i32, f64] -> []
    1  (0.75%) × [i64, i32] -> [i32]
    1  (0.75%) × [i64, i32] -> [i64]
    1  (0.75%) × [i64, i32, i32, i32, i32, i32] -> []
    2  (1.49%) × [] -> [i32]
    3  (2.24%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (2.24%) × [i32, i64, i64, i32] -> []
    3  (2.24%) × [i32, i64, i64, i64, i64] -> []
    4  (2.99%) × [i32, i32, i32, i32] -> [i32]
    4  (2.99%) × [i64, i64] -> [i32]
    6  (4.48%) × [i32, i32] -> []
    7  (5.22%) × [i64, i64, i64, i64] -> [i32]
   11  (8.21%) × [] -> []
   13  (9.70%) × [i32] -> []
   15 (11.19%) × [i32, i32, i32] -> [i32]
   24 (17.91%) × [i32, i32] -> [i32]
   27 (20.15%) × [i32] -> [i32]

Functions with at least one call_indirect: 10 (7.87% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    6]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               27
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               15
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 13
  total classes: 4

CSV data for further analysis: bin2cllvm.wasm,20996,481,20,3.992016,134,6,6,4,1,13,5,5,238,58,24.369747,58,24.369747,58,24.369747

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"bin2cllvm.wasm",0,0,1,"i32.load"
"bin2cllvm.wasm",1,1,1,"i32.load"
"bin2cllvm.wasm",2,1,5,"i32.load"
"bin2cllvm.wasm",3,4,13,"i32.load"
