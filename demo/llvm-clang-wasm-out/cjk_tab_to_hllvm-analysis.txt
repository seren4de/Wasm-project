Input file: cjk_tab_to_hllvm.wasm
  binary:    cjk_tab_to_hllvm.wasm

Functions:          200
  Imported:           7
  Non-imported:     193
  Exported:         120

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:         42
  Of those, unique functions:    42 (i.e., at least 21.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     58667
  call:            1371 (2.34% of all instructions)
  call_indirect:     50 (0.09% of all instructions, 3.52% of all calls)

Globals:
  #0 i32
     init: i32.const 84192
     107 × global.get   176 × global.set   283 total (38/62% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 84192
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 18644
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["stdin"]
     init: i32.const 11836
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["stderr"]
     init: i32.const 11832
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["__progname"]
     init: i32.const 14944
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["__progname_full"]
     init: i32.const 14948
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["__libc"]
     init: i32.const 14952
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["__hwcap"]
     init: i32.const 15016
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["__sysinfo"]
     init: i32.const 15020
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["program_invocation_short_name"]
     init: i32.const 14944
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["program_invocation_name"]
     init: i32.const 14948
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__malloc_replaced"]
     init: i32.const 18176
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__fsmu8"]
     init: i32.const 14640
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__stdin_used"]
     init: i32.const 18488
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["__stdout_used"]
     init: i32.const 18640
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["__stderr_used"]
     init: i32.const 18336
       0 × global.get     0 × global.set     0 total
  #18 i32
     export: ["stdout"]
     init: i32.const 11840
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:    107 (55.44% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.52%) × [-9472]
    1  (0.52%) × [-8064]
    1  (0.52%) × [-320]
    1  (0.52%) × [-288]
    1  (0.52%) × [-192]
    1  (0.52%) × [-160]
    1  (0.52%) × [-112]
    1  (0.52%) × [-96]
    1  (0.52%) × [-80]
    2  (1.04%) × [-128]
    3  (1.55%) × [-32]
    6  (3.11%) × [-144]
   22 (11.40%) × [-16]
  151 (78.24%) × []
  functions with stack allocation total: 42 (21.76%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-9472]",-9472,9472
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-8064]",-8064,8064
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-320]",-320,320
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-288]",-288,288
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-192]",-192,192
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-160]",-160,160
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-112]",-112,112
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-96]",-96,96
sp_csv_line:"cjk_tab_to_hllvm.wasm",1,0.5181347,"[-80]",-80,80
sp_csv_line:"cjk_tab_to_hllvm.wasm",2,1.0362694,"[-128]",-128,128
sp_csv_line:"cjk_tab_to_hllvm.wasm",3,1.5544041,"[-32]",-32,32
sp_csv_line:"cjk_tab_to_hllvm.wasm",6,3.1088083,"[-144]",-144,144
sp_csv_line:"cjk_tab_to_hllvm.wasm",22,11.398964,"[-16]",-16,16
sp_csv_line:"cjk_tab_to_hllvm.wasm",151,78.23834,"[]",0,0

Counts of function types (30 unique types):
    1  (0.50%) × [i32, i32] -> [i64]
    1  (0.50%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.50%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.50%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.50%) × [i32, i32, i32, i64] -> [i64]
    1  (0.50%) × [i32, i64] -> []
    1  (0.50%) × [i32, i64, i32] -> [i64]
    1  (0.50%) × [i32, f32] -> []
    1  (0.50%) × [i32, f64] -> []
    1  (0.50%) × [i64, i64] -> [f32]
    1  (0.50%) × [i64, i64] -> [f64]
    1  (0.50%) × [f64] -> [f64]
    1  (0.50%) × [f64, i32] -> [f64]
    2  (1.00%) × [] -> [i32]
    2  (1.00%) × [i32, i32, i32] -> []
    2  (1.00%) × [i32, i64, i32] -> [i32]
    3  (1.50%) × [i32, i32, i32, i32] -> []
    3  (1.50%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (2.00%) × [i32, i32, i32] -> [i64]
    4  (2.00%) × [i32, i32, i32, i32] -> [i32]
    4  (2.00%) × [i32, i64, i64, i32] -> []
    4  (2.00%) × [i64, i64] -> [i32]
    7  (3.50%) × [i32, i32] -> []
    7  (3.50%) × [i32, i64, i64, i64, i64] -> []
    7  (3.50%) × [i64, i64, i64, i64] -> [i32]
    9  (4.50%) × [] -> []
   16  (8.00%) × [i32, i32] -> [i32]
   20 (10.00%) × [i32, i32, i32] -> [i32]
   35 (17.50%) × [i32] -> []
   58 (29.00%) × [i32] -> [i32]

Functions with at least one call_indirect: 16 (8.29% of all functions)

Table elements initialization:
         range: [    1,   37]   length:  37   unique funcs:   37   type: [i32] -> [i32]
         range: [   38,   38]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   39,   39]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [   40,   42]   length:   3   unique funcs:    3   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
    26 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               58
         functions matching by type and present in table (regardless at which table index):   37
         functions matching by type and present in permissable table index range:             37
    15 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     8 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 8
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 15
  class #3
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 37
    count (how often class appears): 26
  total classes: 4

CSV data for further analysis: cjk_tab_to_hllvm.wasm,58667,1371,50,3.5186489,200,42,5,4,1,26,12.5,15,1825,1030,56.438354,1030,56.438354,68,3.7260275

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"cjk_tab_to_hllvm.wasm",0,0,1,"i32.load"
"cjk_tab_to_hllvm.wasm",1,1,8,"i32.load"
"cjk_tab_to_hllvm.wasm",2,4,15,"i32.load"
"cjk_tab_to_hllvm.wasm",3,37,26,"local.(get|tee)"
