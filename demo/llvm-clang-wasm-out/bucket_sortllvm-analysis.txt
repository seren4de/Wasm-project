Input file: bucket_sortllvm.wasm
  binary:    bucket_sortllvm.wasm

Functions:           93
  Imported:           7
  Non-imported:      86
  Exported:          79

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 4.30% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     16431
  call:             369 (2.25% of all instructions)
  call_indirect:     15 (0.09% of all instructions, 3.91% of all calls)

Globals:
  #0 i32
     init: i32.const 71856
     28 × global.get   79 × global.set  107 total (26/74% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71856
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6316
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 1344
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname"]
     init: i32.const 3808
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname_full"]
     init: i32.const 3812
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__libc"]
     init: i32.const 3816
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__hwcap"]
     init: i32.const 3880
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__sysinfo"]
     init: i32.const 3884
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_short_name"]
     init: i32.const 3808
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_name"]
     init: i32.const 3812
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__malloc_replaced"]
     init: i32.const 4936
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stdin_used"]
     init: i32.const 6008
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stdout_used"]
     init: i32.const 6312
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["__stderr_used"]
     init: i32.const 6160
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["stdout"]
     init: i32.const 1348
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     28 (32.56% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.16%) × [-8064]
    1  (1.16%) × [-288]
    1  (1.16%) × [-128]
    1  (1.16%) × [-112]
    1  (1.16%) × [-96]
    1  (1.16%) × [-32]
   16 (18.60%) × [-16]
   64 (74.42%) × []
  functions with stack allocation total: 22 (25.58%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"bucket_sortllvm.wasm",1,1.1627907,"[-8064]",-8064,8064
sp_csv_line:"bucket_sortllvm.wasm",1,1.1627907,"[-288]",-288,288
sp_csv_line:"bucket_sortllvm.wasm",1,1.1627907,"[-128]",-128,128
sp_csv_line:"bucket_sortllvm.wasm",1,1.1627907,"[-112]",-112,112
sp_csv_line:"bucket_sortllvm.wasm",1,1.1627907,"[-96]",-96,96
sp_csv_line:"bucket_sortllvm.wasm",1,1.1627907,"[-32]",-32,32
sp_csv_line:"bucket_sortllvm.wasm",16,18.60465,"[-16]",-16,16
sp_csv_line:"bucket_sortllvm.wasm",64,74.4186,"[]",0,0

Counts of function types (20 unique types):
    1  (1.08%) × [i32, i32, i32] -> []
    1  (1.08%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.08%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.08%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (1.08%) × [i32, i64, i32] -> [i64]
    1  (1.08%) × [i32, f64] -> []
    2  (2.15%) × [i32, i32, i32, i32] -> []
    2  (2.15%) × [i32, i32, i32, i32] -> [i32]
    3  (3.23%) × [] -> [i32]
    3  (3.23%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (3.23%) × [i32, i64, i64, i32] -> []
    3  (3.23%) × [i32, i64, i64, i64, i64] -> []
    4  (4.30%) × [i32, i32] -> []
    4  (4.30%) × [i64, i64] -> [i32]
    6  (6.45%) × [] -> []
    7  (7.53%) × [i64, i64, i64, i64] -> [i32]
   10 (10.75%) × [i32, i32] -> [i32]
   11 (11.83%) × [i32, i32, i32] -> [i32]
   13 (13.98%) × [i32] -> []
   16 (17.20%) × [i32] -> [i32]

Functions with at least one call_indirect: 5 (5.81% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: bucket_sortllvm.wasm,16431,369,15,3.90625,93,4,3,2,5,10,7.5,10,115,25,21.73913,25,21.73913,25,21.73913

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"bucket_sortllvm.wasm",0,1,5,"i32.load"
"bucket_sortllvm.wasm",1,2,10,"i32.load"
