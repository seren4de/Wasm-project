Input file: 2llvm.wasm
  binary:    2llvm.wasm

Functions:           82
  Imported:           5
  Non-imported:      77
  Exported:          75

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 4.88% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     14406
  call:             269 (1.87% of all instructions)
  call_indirect:     13 (0.09% of all instructions, 4.61% of all calls)

Globals:
  #0 i32
     init: i32.const 70816
     32 × global.get   88 × global.set  120 total (27/73% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70816
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5268
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 5188
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 5192
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 5196
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 5260
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 5264
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 5188
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 5192
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 5184
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 4128
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 5184
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdout"]
     init: i32.const 1252
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     32 (41.56% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.30%) × [-8064]
    1  (1.30%) × [-288]
    1  (1.30%) × [-112]
    1  (1.30%) × [-96]
    1  (1.30%) × [-48]
    6  (7.79%) × [-144]
    6  (7.79%) × [-32]
   14 (18.18%) × [-16]
   46 (59.74%) × []
  functions with stack allocation total: 31 (40.26%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"2llvm.wasm",1,1.2987013,"[-8064]",-8064,8064
sp_csv_line:"2llvm.wasm",1,1.2987013,"[-288]",-288,288
sp_csv_line:"2llvm.wasm",1,1.2987013,"[-112]",-112,112
sp_csv_line:"2llvm.wasm",1,1.2987013,"[-96]",-96,96
sp_csv_line:"2llvm.wasm",1,1.2987013,"[-48]",-48,48
sp_csv_line:"2llvm.wasm",6,7.7922077,"[-144]",-144,144
sp_csv_line:"2llvm.wasm",6,7.7922077,"[-32]",-32,32
sp_csv_line:"2llvm.wasm",14,18.181818,"[-16]",-16,16
sp_csv_line:"2llvm.wasm",46,59.74026,"[]",0,0

Counts of function types (21 unique types):
    1  (1.22%) × [i32, i32, i32] -> []
    1  (1.22%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.22%) × [i32, i32, i32, i64] -> [i64]
    1  (1.22%) × [i32, i64] -> []
    1  (1.22%) × [i32, i64, i32] -> [i64]
    1  (1.22%) × [i32, f64] -> []
    2  (2.44%) × [i32, i32] -> []
    2  (2.44%) × [i32, i32, i32, i32] -> [i32]
    2  (2.44%) × [i32, i32, i32, i32, i32] -> [i32]
    2  (2.44%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    3  (3.66%) × [] -> [i32]
    3  (3.66%) × [i32] -> []
    3  (3.66%) × [i32, i64, i64, i32] -> []
    3  (3.66%) × [i32, i64, i64, i64, i64] -> []
    4  (4.88%) × [i32, i32, i32] -> [i64]
    4  (4.88%) × [i64, i64] -> [i32]
    5  (6.10%) × [] -> []
    7  (8.54%) × [i64, i64, i64, i64] -> [i32]
   10 (12.20%) × [i32, i32] -> [i32]
   12 (14.63%) × [i32] -> [i32]
   14 (17.07%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (7.79% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: 2llvm.wasm,14406,269,13,4.609929,82,4,3,2,3,10,6.5,10,143,23,16.083916,23,16.083916,23,16.083916

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"2llvm.wasm",0,1,3,"i32.load"
"2llvm.wasm",1,2,10,"i32.load"
