Input file: anagramsllvm.wasm
  binary:    anagramsllvm.wasm

Functions:           73
  Imported:           4
  Non-imported:      69
  Exported:          64

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 6.85% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15486
  call:             240 (1.55% of all instructions)
  call_indirect:     24 (0.15% of all instructions, 9.09% of all calls)

Globals:
  #0 i32
     init: i32.const 70368
     24 × global.get   69 × global.set   93 total (26/74% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70368
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 4828
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 3520
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 3524
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 3528
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 3592
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 3596
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 3520
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 3524
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 4672
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 4824
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 4672
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdout"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     24 (34.78% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.45%) × [-8064]
    1  (1.45%) × [-736]
    1  (1.45%) × [-688]
    1  (1.45%) × [-288]
    1  (1.45%) × [-112]
    1  (1.45%) × [-96]
    1  (1.45%) × [-32]
   13 (18.84%) × [-16]
   49 (71.01%) × []
  functions with stack allocation total: 20 (28.99%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"anagramsllvm.wasm",1,1.4492754,"[-8064]",-8064,8064
sp_csv_line:"anagramsllvm.wasm",1,1.4492754,"[-736]",-736,736
sp_csv_line:"anagramsllvm.wasm",1,1.4492754,"[-688]",-688,688
sp_csv_line:"anagramsllvm.wasm",1,1.4492754,"[-288]",-288,288
sp_csv_line:"anagramsllvm.wasm",1,1.4492754,"[-112]",-112,112
sp_csv_line:"anagramsllvm.wasm",1,1.4492754,"[-96]",-96,96
sp_csv_line:"anagramsllvm.wasm",1,1.4492754,"[-32]",-32,32
sp_csv_line:"anagramsllvm.wasm",13,18.84058,"[-16]",-16,16
sp_csv_line:"anagramsllvm.wasm",49,71.014496,"[]",0,0

Counts of function types (21 unique types):
    1  (1.37%) × [i32, i32, i32] -> []
    1  (1.37%) × [i32, i32, i32, i32] -> []
    1  (1.37%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.37%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.37%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.37%) × [i32, i32, i32, i32, i32, i32, i32, i32] -> []
    1  (1.37%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (1.37%) × [i32, i64, i32] -> [i64]
    1  (1.37%) × [i32, f64] -> []
    2  (2.74%) × [] -> [i32]
    2  (2.74%) × [i32, i32] -> []
    3  (4.11%) × [i32] -> []
    3  (4.11%) × [i32, i32, i32, i32] -> [i32]
    3  (4.11%) × [i32, i64, i64, i32] -> []
    3  (4.11%) × [i32, i64, i64, i64, i64] -> []
    4  (5.48%) × [i64, i64] -> [i32]
    5  (6.85%) × [] -> []
    7  (9.59%) × [i64, i64, i64, i64] -> [i32]
    8 (10.96%) × [i32, i32, i32] -> [i32]
   10 (13.70%) × [i32] -> [i32]
   14 (19.18%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (8.70% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    13 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                8
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 8
  class #2
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 13
  total classes: 3

CSV data for further analysis: anagramsllvm.wasm,15486,240,24,9.090909,73,5,3,3,3,13,8,8,249,32,12.851406,32,12.851406,19,7.6305223

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"anagramsllvm.wasm",0,1,3,"i32.load"
"anagramsllvm.wasm",1,2,8,"i32.load"
"anagramsllvm.wasm",2,1,13,"local.(get|tee)"
