Input file: rechollvm.wasm
  binary:    rechollvm.wasm

Functions:           66
  Imported:           3
  Non-imported:      63
  Exported:          61

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 6.06% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12449
  call:             221 (1.78% of all instructions)
  call_indirect:     13 (0.10% of all instructions, 5.56% of all calls)

Globals:
  #0 i32
     init: i32.const 70320
     19 × global.get   60 × global.set   79 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70320
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 4780
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 4552
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 4556
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 4560
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 4624
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 4628
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 4552
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 4556
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 3512
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 4776
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 3512
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdout"]
     init: i32.const 1040
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     19 (30.16% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.59%) × [-8064]
    1  (1.59%) × [-288]
    1  (1.59%) × [-112]
    1  (1.59%) × [-96]
    1  (1.59%) × [-32]
   12 (19.05%) × [-16]
   46 (73.02%) × []
  functions with stack allocation total: 17 (26.98%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"rechollvm.wasm",1,1.5873016,"[-8064]",-8064,8064
sp_csv_line:"rechollvm.wasm",1,1.5873016,"[-288]",-288,288
sp_csv_line:"rechollvm.wasm",1,1.5873016,"[-112]",-112,112
sp_csv_line:"rechollvm.wasm",1,1.5873016,"[-96]",-96,96
sp_csv_line:"rechollvm.wasm",1,1.5873016,"[-32]",-32,32
sp_csv_line:"rechollvm.wasm",12,19.047619,"[-16]",-16,16
sp_csv_line:"rechollvm.wasm",46,73.01588,"[]",0,0

Counts of function types (17 unique types):
    1  (1.52%) × [i32, i32, i32] -> []
    1  (1.52%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.52%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.52%) × [i32, i64, i32] -> [i64]
    1  (1.52%) × [i32, f64] -> []
    2  (3.03%) × [] -> [i32]
    2  (3.03%) × [i32, i32] -> []
    2  (3.03%) × [i32, i32, i32, i32] -> [i32]
    3  (4.55%) × [i32, i64, i64, i32] -> []
    3  (4.55%) × [i32, i64, i64, i64, i64] -> []
    4  (6.06%) × [i64, i64] -> [i32]
    6  (9.09%) × [] -> []
    6  (9.09%) × [i32] -> []
    7 (10.61%) × [i64, i64, i64, i64] -> [i32]
    8 (12.12%) × [i32] -> [i32]
    8 (12.12%) × [i32, i32, i32] -> [i32]
   10 (15.15%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (9.52% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                8
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 9
  total classes: 3

CSV data for further analysis: rechollvm.wasm,12449,221,13,5.5555553,66,4,3,3,1,9,4.333333333333333,3,81,21,25.925926,21,25.925926,21,25.925926

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"rechollvm.wasm",0,0,1,"i32.load"
"rechollvm.wasm",1,1,3,"i32.load"
"rechollvm.wasm",2,2,9,"i32.load"
