Input file: bin2hexllvm.wasm
  binary:    bin2hexllvm.wasm

Functions:           70
  Imported:           3
  Non-imported:      67
  Exported:          65

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 7.14% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12612
  call:             227 (1.80% of all instructions)
  call_indirect:     14 (0.11% of all instructions, 5.81% of all calls)

Globals:
  #0 i32
     init: i32.const 71808
     20 × global.get   64 × global.set   84 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71808
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6268
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 1180
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname"]
     init: i32.const 5736
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname_full"]
     init: i32.const 5740
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__libc"]
     init: i32.const 5744
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__hwcap"]
     init: i32.const 5808
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__sysinfo"]
     init: i32.const 5812
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_short_name"]
     init: i32.const 5736
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_name"]
     init: i32.const 5740
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdin_used"]
     init: i32.const 6112
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stdout_used"]
     init: i32.const 6264
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stderr_used"]
     init: i32.const 5960
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["stdin"]
     init: i32.const 1184
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["stdout"]
     init: i32.const 1188
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     20 (29.85% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.49%) × [-8064]
    1  (1.49%) × [-288]
    1  (1.49%) × [-112]
    1  (1.49%) × [-96]
    1  (1.49%) × [-32]
   14 (20.90%) × [-16]
   48 (71.64%) × []
  functions with stack allocation total: 19 (28.36%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"bin2hexllvm.wasm",1,1.4925373,"[-8064]",-8064,8064
sp_csv_line:"bin2hexllvm.wasm",1,1.4925373,"[-288]",-288,288
sp_csv_line:"bin2hexllvm.wasm",1,1.4925373,"[-112]",-112,112
sp_csv_line:"bin2hexllvm.wasm",1,1.4925373,"[-96]",-96,96
sp_csv_line:"bin2hexllvm.wasm",1,1.4925373,"[-32]",-32,32
sp_csv_line:"bin2hexllvm.wasm",14,20.895523,"[-16]",-16,16
sp_csv_line:"bin2hexllvm.wasm",48,71.64179,"[]",0,0

Counts of function types (17 unique types):
    1  (1.43%) × [i32, i32, i32] -> []
    1  (1.43%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.43%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.43%) × [i32, i64, i32] -> [i64]
    1  (1.43%) × [i32, f64] -> []
    2  (2.86%) × [i32, i32] -> []
    2  (2.86%) × [i32, i32, i32, i32] -> [i32]
    3  (4.29%) × [] -> [i32]
    3  (4.29%) × [i32, i64, i64, i32] -> []
    3  (4.29%) × [i32, i64, i64, i64, i64] -> []
    4  (5.71%) × [i64, i64] -> [i32]
    5  (7.14%) × [i32] -> []
    7 (10.00%) × [] -> []
    7 (10.00%) × [i64, i64, i64, i64] -> [i32]
    9 (12.86%) × [i32, i32] -> [i32]
   10 (14.29%) × [i32] -> [i32]
   10 (14.29%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 7 (10.45% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                7
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 10
  total classes: 3

CSV data for further analysis: bin2hexllvm.wasm,12612,227,14,5.8091288,70,5,4,3,1,10,4.666666666666667,3,110,33,30,33,30,33,30

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"bin2hexllvm.wasm",0,0,1,"i32.load"
"bin2hexllvm.wasm",1,1,3,"i32.load"
"bin2hexllvm.wasm",2,3,10,"i32.load"
