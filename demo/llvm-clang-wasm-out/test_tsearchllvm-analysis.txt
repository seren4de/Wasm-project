Input file: test_tsearchllvm.wasm
  binary:    test_tsearchllvm.wasm

Functions:          100
  Imported:           7
  Non-imported:      93
  Exported:          79

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          7
  Of those, unique functions:     7 (i.e., at least 7.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     16474
  call:             371 (2.25% of all instructions)
  call_indirect:     23 (0.14% of all instructions, 5.84% of all calls)

Globals:
  #0 i32
     init: i32.const 71792
     27 × global.get   81 × global.set  108 total (25/75% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71792
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6244
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 3488
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname"]
     init: i32.const 1076
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname_full"]
     init: i32.const 1080
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__libc"]
     init: i32.const 1084
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__hwcap"]
     init: i32.const 1148
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__sysinfo"]
     init: i32.const 1152
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1076
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_name"]
     init: i32.const 1080
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__malloc_replaced"]
     init: i32.const 2208
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stdin_used"]
     init: i32.const 3272
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stdout_used"]
     init: i32.const 6240
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["__stderr_used"]
     init: i32.const 6088
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["stdout"]
     init: i32.const 3492
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     27 (29.03% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.08%) × [-8064]
    1  (1.08%) × [-288]
    1  (1.08%) × [-128]
    1  (1.08%) × [-112]
    1  (1.08%) × [-96]
    1  (1.08%) × [-32]
   18 (19.35%) × [-16]
   69 (74.19%) × []
  functions with stack allocation total: 24 (25.81%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_tsearchllvm.wasm",1,1.0752689,"[-8064]",-8064,8064
sp_csv_line:"test_tsearchllvm.wasm",1,1.0752689,"[-288]",-288,288
sp_csv_line:"test_tsearchllvm.wasm",1,1.0752689,"[-128]",-128,128
sp_csv_line:"test_tsearchllvm.wasm",1,1.0752689,"[-112]",-112,112
sp_csv_line:"test_tsearchllvm.wasm",1,1.0752689,"[-96]",-96,96
sp_csv_line:"test_tsearchllvm.wasm",1,1.0752689,"[-32]",-32,32
sp_csv_line:"test_tsearchllvm.wasm",18,19.35484,"[-16]",-16,16
sp_csv_line:"test_tsearchllvm.wasm",69,74.19355,"[]",0,0

Counts of function types (20 unique types):
    1  (1.00%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.00%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.00%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (1.00%) × [i32, i64, i32] -> [i64]
    1  (1.00%) × [i32, f64] -> []
    2  (2.00%) × [i32, i32, i32, i32] -> []
    3  (3.00%) × [] -> [i32]
    3  (3.00%) × [i32, i32, i32] -> []
    3  (3.00%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (3.00%) × [i32, i64, i64, i32] -> []
    3  (3.00%) × [i32, i64, i64, i64, i64] -> []
    4  (4.00%) × [i32, i32, i32, i32] -> [i32]
    4  (4.00%) × [i64, i64] -> [i32]
    6  (6.00%) × [] -> []
    6  (6.00%) × [i32, i32] -> []
    7  (7.00%) × [i64, i64, i64, i64] -> [i32]
   10 (10.00%) × [i32] -> []
   12 (12.00%) × [i32, i32] -> [i32]
   14 (14.00%) × [i32, i32, i32] -> [i32]
   15 (15.00%) × [i32] -> [i32]

Functions with at least one call_indirect: 10 (10.75% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> []
         functions matching by type (regardless whether they are in the table):               10
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     4 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                3
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  5 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #2
    type: [i32, i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #3
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #4
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 10
  total classes: 5

CSV data for further analysis: test_tsearchllvm.wasm,16474,371,23,5.8375635,100,7,3,5,1,10,4.6,4,203,33,16.256157,33,16.256157,25,12.315271

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_tsearchllvm.wasm",0,1,1,"local.(get|tee)"
"test_tsearchllvm.wasm",1,1,3,"local.(get|tee)"
"test_tsearchllvm.wasm",2,1,4,"local.(get|tee)"
"test_tsearchllvm.wasm",3,1,5,"i32.load"
"test_tsearchllvm.wasm",4,2,10,"i32.load"
