Input file: hppllvm.wasm
  binary:    hppllvm.wasm

Functions:          147
  Imported:           7
  Non-imported:     140
  Exported:         132

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 2.72% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     28315
  call:             658 (2.32% of all instructions)
  call_indirect:     29 (0.10% of all instructions, 4.22% of all calls)

Globals:
  #0 i32
     init: i32.const 71024
      44 × global.get   115 × global.set   159 total (28/72% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71024
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5484
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 2824
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["gpDefines"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["iLine"]
     init: i32.const 1028
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["gpszCurFile"]
     init: i32.const 1032
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["__progname"]
     init: i32.const 1036
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["__progname_full"]
     init: i32.const 1040
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["__libc"]
     init: i32.const 1044
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["__hwcap"]
     init: i32.const 1108
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["__sysinfo"]
     init: i32.const 1112
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1036
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["program_invocation_name"]
     init: i32.const 1040
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__malloc_replaced"]
     init: i32.const 2168
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["__stdin_used"]
     init: i32.const 2188
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["__stdout_used"]
     init: i32.const 2184
       0 × global.get     0 × global.set     0 total
  #18 i32
     export: ["__stderr_used"]
     init: i32.const 5480
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     44 (31.43% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.71%) × [-9472]
    1  (0.71%) × [-8064]
    1  (0.71%) × [-288]
    1  (0.71%) × [-192]
    1  (0.71%) × [-112]
    1  (0.71%) × [-96]
    1  (0.71%) × [-80]
    2  (1.43%) × [-128]
    3  (2.14%) × [-160]
    3  (2.14%) × [-32]
   16 (11.43%) × [-16]
  109 (77.86%) × []
  functions with stack allocation total: 31 (22.14%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"hppllvm.wasm",1,0.71428573,"[-9472]",-9472,9472
sp_csv_line:"hppllvm.wasm",1,0.71428573,"[-8064]",-8064,8064
sp_csv_line:"hppllvm.wasm",1,0.71428573,"[-288]",-288,288
sp_csv_line:"hppllvm.wasm",1,0.71428573,"[-192]",-192,192
sp_csv_line:"hppllvm.wasm",1,0.71428573,"[-112]",-112,112
sp_csv_line:"hppllvm.wasm",1,0.71428573,"[-96]",-96,96
sp_csv_line:"hppllvm.wasm",1,0.71428573,"[-80]",-80,80
sp_csv_line:"hppllvm.wasm",2,1.4285715,"[-128]",-128,128
sp_csv_line:"hppllvm.wasm",3,2.142857,"[-160]",-160,160
sp_csv_line:"hppllvm.wasm",3,2.142857,"[-32]",-32,32
sp_csv_line:"hppllvm.wasm",16,11.428572,"[-16]",-16,16
sp_csv_line:"hppllvm.wasm",109,77.85714,"[]",0,0

Counts of function types (31 unique types):
    1  (0.68%) × [i32, i32] -> [i64]
    1  (0.68%) × [i32, i32] -> [f32]
    1  (0.68%) × [i32, i32] -> [f64]
    1  (0.68%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.68%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.68%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.68%) × [i32, i64] -> []
    1  (0.68%) × [i32, i64, i32] -> [i64]
    1  (0.68%) × [i32, f32] -> []
    1  (0.68%) × [i32, f64] -> []
    1  (0.68%) × [i64, i64] -> [f32]
    1  (0.68%) × [i64, i64] -> [f64]
    1  (0.68%) × [f64] -> [f64]
    1  (0.68%) × [f64, i32] -> [f64]
    2  (1.36%) × [] -> [i32]
    2  (1.36%) × [i32] -> [i64]
    2  (1.36%) × [i32, i32, i32] -> []
    2  (1.36%) × [i32, i32, i32, i32] -> []
    2  (1.36%) × [i32, i64, i32] -> [i32]
    3  (2.04%) × [i32, i32, i32, i32] -> [i32]
    3  (2.04%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (2.72%) × [i32, i64, i64, i32] -> []
    4  (2.72%) × [i64, i64] -> [i32]
    5  (3.40%) × [i32, i32] -> []
    7  (4.76%) × [i32, i64, i64, i64, i64] -> []
    7  (4.76%) × [i64, i64, i64, i64] -> [i32]
    9  (6.12%) × [] -> []
   13  (8.84%) × [i32] -> []
   14  (9.52%) × [i32, i32, i32] -> [i32]
   23 (15.65%) × [i32, i32] -> [i32]
   31 (21.09%) × [i32] -> [i32]

Functions with at least one call_indirect: 16 (11.43% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  3 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               31
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    16 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     8 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source: local.(get|tee)   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  5 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #3
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 8
  class #4
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 16
  total classes: 5

CSV data for further analysis: hppllvm.wasm,28315,658,29,4.221252,147,4,4,5,1,16,5.8,3,275,44,16,44,16,41,14.909091

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"hppllvm.wasm",0,0,1,"i32.load"
"hppllvm.wasm",1,1,1,"i32.load"
"hppllvm.wasm",2,1,3,"local.(get|tee)"
"hppllvm.wasm",3,1,8,"i32.load"
"hppllvm.wasm",4,2,16,"i32.load"
