Input file: centrino-decodellvm.wasm
  binary:    centrino-decodellvm.wasm

Functions:           84
  Imported:           4
  Non-imported:      80
  Exported:          74

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 5.95% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     14392
  call:             264 (1.83% of all instructions)
  call_indirect:     13 (0.09% of all instructions, 4.69% of all calls)

Globals:
  #0 i32
     init: i32.const 70800
     32 × global.get   87 × global.set  119 total (27/73% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70800
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5252
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 5172
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 5176
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 5180
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 5244
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 5248
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 5172
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 5176
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 5168
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 4112
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 5168
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdout"]
     init: i32.const 1240
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     32 (40.00% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.25%) × [-8064]
    1  (1.25%) × [-288]
    1  (1.25%) × [-160]
    1  (1.25%) × [-112]
    1  (1.25%) × [-96]
    2  (2.50%) × [-32]
    6  (7.50%) × [-144]
   15 (18.75%) × [-16]
   52 (65.00%) × []
  functions with stack allocation total: 28 (35.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"centrino-decodellvm.wasm",1,1.25,"[-8064]",-8064,8064
sp_csv_line:"centrino-decodellvm.wasm",1,1.25,"[-288]",-288,288
sp_csv_line:"centrino-decodellvm.wasm",1,1.25,"[-160]",-160,160
sp_csv_line:"centrino-decodellvm.wasm",1,1.25,"[-112]",-112,112
sp_csv_line:"centrino-decodellvm.wasm",1,1.25,"[-96]",-96,96
sp_csv_line:"centrino-decodellvm.wasm",2,2.5,"[-32]",-32,32
sp_csv_line:"centrino-decodellvm.wasm",6,7.5,"[-144]",-144,144
sp_csv_line:"centrino-decodellvm.wasm",15,18.75,"[-16]",-16,16
sp_csv_line:"centrino-decodellvm.wasm",52,65,"[]",0,0

Counts of function types (21 unique types):
    1  (1.19%) × [i32, i32, i32] -> []
    1  (1.19%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.19%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.19%) × [i32, i32, i32, i64] -> [i64]
    1  (1.19%) × [i32, i64] -> []
    1  (1.19%) × [i32, f64] -> []
    2  (2.38%) × [] -> [i32]
    2  (2.38%) × [i32, i32] -> []
    2  (2.38%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    2  (2.38%) × [i32, i64, i32] -> [i64]
    3  (3.57%) × [i32, i64, i64, i32] -> []
    3  (3.57%) × [i32, i64, i64, i64, i64] -> []
    4  (4.76%) × [i32] -> []
    4  (4.76%) × [i32, i32, i32] -> [i64]
    4  (4.76%) × [i32, i32, i32, i32] -> [i32]
    4  (4.76%) × [i64, i64] -> [i32]
    5  (5.95%) × [] -> []
    7  (8.33%) × [i64, i64, i64, i64] -> [i32]
    9 (10.71%) × [i32, i32] -> [i32]
   12 (14.29%) × [i32] -> [i32]
   15 (17.86%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (7.50% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               15
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: centrino-decodellvm.wasm,14392,264,13,4.693141,84,5,4,2,3,10,6.5,10,156,33,21.153847,33,21.153847,33,21.153847

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"centrino-decodellvm.wasm",0,1,3,"i32.load"
"centrino-decodellvm.wasm",1,3,10,"i32.load"
