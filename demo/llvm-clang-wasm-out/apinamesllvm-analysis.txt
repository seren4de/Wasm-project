Input file: apinamesllvm.wasm
  binary:    apinamesllvm.wasm

Functions:          120
  Imported:           7
  Non-imported:     113
  Exported:          98

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 5.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     21070
  call:             461 (2.19% of all instructions)
  call_indirect:     32 (0.15% of all instructions, 6.49% of all calls)

Globals:
  #0 i32
     init: i32.const 75024
     32 × global.get   94 × global.set  126 total (25/75% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 75024
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 9484
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stdout"]
     init: i32.const 2240
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["stderr"]
     init: i32.const 2232
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["stdin"]
     init: i32.const 2236
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__progname"]
     init: i32.const 5788
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__progname_full"]
     init: i32.const 5792
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__libc"]
     init: i32.const 5796
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["__hwcap"]
     init: i32.const 5860
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__sysinfo"]
     init: i32.const 5864
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["program_invocation_short_name"]
     init: i32.const 5788
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["program_invocation_name"]
     init: i32.const 5792
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__malloc_replaced"]
     init: i32.const 6920
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["__stdin_used"]
     init: i32.const 9328
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["__stdout_used"]
     init: i32.const 9480
      0 × global.get    0 × global.set    0 total
  #17 i32
     export: ["__stderr_used"]
     init: i32.const 9176
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     32 (28.32% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.88%) × [-8064]
    1  (0.88%) × [-736]
    1  (0.88%) × [-688]
    1  (0.88%) × [-288]
    1  (0.88%) × [-128]
    1  (0.88%) × [-112]
    1  (0.88%) × [-96]
    1  (0.88%) × [-32]
   17 (15.04%) × [-16]
   88 (77.88%) × []
  functions with stack allocation total: 25 (22.12%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-8064]",-8064,8064
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-736]",-736,736
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-688]",-688,688
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-288]",-288,288
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-128]",-128,128
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-112]",-112,112
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-96]",-96,96
sp_csv_line:"apinamesllvm.wasm",1,0.88495576,"[-32]",-32,32
sp_csv_line:"apinamesllvm.wasm",17,15.044248,"[-16]",-16,16
sp_csv_line:"apinamesllvm.wasm",88,77.87611,"[]",0,0

Counts of function types (21 unique types):
    1  (0.83%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.83%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.83%) × [i32, i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.83%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.83%) × [i32, i64, i32] -> [i64]
    1  (0.83%) × [i32, f64] -> []
    2  (1.67%) × [] -> [i32]
    2  (1.67%) × [i32, i32, i32] -> []
    2  (1.67%) × [i32, i32, i32, i32] -> []
    2  (1.67%) × [i32, i32, i32, i32] -> [i32]
    3  (2.50%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (2.50%) × [i32, i64, i64, i32] -> []
    3  (2.50%) × [i32, i64, i64, i64, i64] -> []
    4  (3.33%) × [i64, i64] -> [i32]
    5  (4.17%) × [i32, i32] -> []
    7  (5.83%) × [i64, i64, i64, i64] -> [i32]
   11  (9.17%) × [] -> []
   14 (11.67%) × [i32] -> []
   14 (11.67%) × [i32, i32, i32] -> [i32]
   19 (15.83%) × [i32, i32] -> [i32]
   23 (19.17%) × [i32] -> [i32]

Functions with at least one call_indirect: 11 (9.73% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    3,    4]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               19
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  5 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  class #4
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 13
  total classes: 5

CSV data for further analysis: apinamesllvm.wasm,21070,461,32,6.4908724,120,6,5,5,1,13,6.4,5,454,55,12.114537,55,12.114537,42,9.2511015

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"apinamesllvm.wasm",0,0,1,"i32.load"
"apinamesllvm.wasm",1,1,1,"i32.load"
"apinamesllvm.wasm",2,1,5,"i32.load"
"apinamesllvm.wasm",3,3,12,"i32.load"
"apinamesllvm.wasm",4,1,13,"local.(get|tee)"
