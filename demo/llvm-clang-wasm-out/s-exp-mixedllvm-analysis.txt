Input file: s-exp-mixedllvm.wasm
  binary:    s-exp-mixedllvm.wasm

Functions:           60
  Imported:           1
  Non-imported:      59
  Exported:          56

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          1
  Of those, unique functions:     1 (i.e., at least 1.67% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     13560
  call:             213 (1.57% of all instructions)
  call_indirect:     11 (0.08% of all instructions, 4.91% of all calls)

Globals:
  #0 i32
     init: i32.const 69168
     22 × global.get   60 × global.set   82 total (27/73% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 69168
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 3621
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 1068
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 1072
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 1076
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 1140
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 1144
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1068
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 1072
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 1064
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 1064
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 1064
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     22 (37.29% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.69%) × [-8064]
    1  (1.69%) × [-288]
    1  (1.69%) × [-192]
    1  (1.69%) × [-160]
    1  (1.69%) × [-112]
    1  (1.69%) × [-96]
    1  (1.69%) × [-32]
    9 (15.25%) × [-16]
   43 (72.88%) × []
  functions with stack allocation total: 16 (27.12%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-exp-mixedllvm.wasm",1,1.6949153,"[-8064]",-8064,8064
sp_csv_line:"s-exp-mixedllvm.wasm",1,1.6949153,"[-288]",-288,288
sp_csv_line:"s-exp-mixedllvm.wasm",1,1.6949153,"[-192]",-192,192
sp_csv_line:"s-exp-mixedllvm.wasm",1,1.6949153,"[-160]",-160,160
sp_csv_line:"s-exp-mixedllvm.wasm",1,1.6949153,"[-112]",-112,112
sp_csv_line:"s-exp-mixedllvm.wasm",1,1.6949153,"[-96]",-96,96
sp_csv_line:"s-exp-mixedllvm.wasm",1,1.6949153,"[-32]",-32,32
sp_csv_line:"s-exp-mixedllvm.wasm",9,15.254237,"[-16]",-16,16
sp_csv_line:"s-exp-mixedllvm.wasm",43,72.881355,"[]",0,0

Counts of function types (20 unique types):
    1  (1.67%) × [i32, i32, i32] -> []
    1  (1.67%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.67%) × [i32, i64] -> []
    1  (1.67%) × [i32, i64, i64, i64, i32] -> []
    1  (1.67%) × [i32, f32] -> [f64]
    1  (1.67%) × [i32, f64] -> []
    1  (1.67%) × [i32, f64] -> [i32]
    1  (1.67%) × [f64, i64] -> [i64]
    2  (3.33%) × [] -> [i32]
    2  (3.33%) × [i32, i32] -> []
    3  (5.00%) × [i32] -> []
    3  (5.00%) × [i32, i64, i64, i32] -> []
    4  (6.67%) × [] -> []
    4  (6.67%) × [i32] -> [i32]
    4  (6.67%) × [i32, i32, i32, i32] -> [i32]
    4  (6.67%) × [i64, i64] -> [i32]
    5  (8.33%) × [i32, i64, i64, i64, i64] -> []
    7 (11.67%) × [i32, i32] -> [i32]
    7 (11.67%) × [i32, i32, i32] -> [i32]
    7 (11.67%) × [i64, i64, i64, i64] -> [i32]

Functions with at least one call_indirect: 4 (6.78% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  1 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                7
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                0
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 8
  total classes: 2

CSV data for further analysis: s-exp-mixedllvm.wasm,13560,213,11,4.910714,60,1,1,2,3,8,5.5,8,56,8,14.285714,8,14.285714,8,14.285714

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"s-exp-mixedllvm.wasm",0,0,3,"i32.load"
"s-exp-mixedllvm.wasm",1,1,8,"i32.load"
