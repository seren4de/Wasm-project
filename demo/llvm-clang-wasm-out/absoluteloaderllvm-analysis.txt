Input file: absoluteloaderllvm.wasm
  binary:    absoluteloaderllvm.wasm

Functions:          123
  Imported:           7
  Non-imported:     116
  Exported:         108

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.07% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     26634
  call:             612 (2.30% of all instructions)
  call_indirect:     18 (0.07% of all instructions, 2.86% of all calls)

Globals:
  #0 i32
     init: i32.const 73296
      35 × global.get   108 × global.set   143 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 73296
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 7748
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 4224
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 4228
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 4232
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 4296
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 4300
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 4224
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 4228
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["__malloc_replaced"]
     init: i32.const 5352
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["__fsmu8"]
     init: i32.const 4016
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__stdin_used"]
     init: i32.const 7744
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__stdout_used"]
     init: i32.const 7592
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__stderr_used"]
     init: i32.const 6408
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["stdout"]
     init: i32.const 1224
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["stdin"]
     init: i32.const 4220
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     35 (30.17% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.86%) × [-9472]
    1  (0.86%) × [-8064]
    1  (0.86%) × [-320]
    1  (0.86%) × [-288]
    1  (0.86%) × [-192]
    1  (0.86%) × [-112]
    1  (0.86%) × [-96]
    1  (0.86%) × [-80]
    2  (1.72%) × [-128]
    3  (2.59%) × [-32]
   21 (18.10%) × [-16]
   82 (70.69%) × []
  functions with stack allocation total: 34 (29.31%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-9472]",-9472,9472
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-8064]",-8064,8064
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-320]",-320,320
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-288]",-288,288
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-192]",-192,192
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-112]",-112,112
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-96]",-96,96
sp_csv_line:"absoluteloaderllvm.wasm",1,0.86206895,"[-80]",-80,80
sp_csv_line:"absoluteloaderllvm.wasm",2,1.7241379,"[-128]",-128,128
sp_csv_line:"absoluteloaderllvm.wasm",3,2.586207,"[-32]",-32,32
sp_csv_line:"absoluteloaderllvm.wasm",21,18.103449,"[-16]",-16,16
sp_csv_line:"absoluteloaderllvm.wasm",82,70.68965,"[]",0,0

Counts of function types (28 unique types):
    1  (0.81%) × [i32, i32] -> [i64]
    1  (0.81%) × [i32, i32, i32] -> []
    1  (0.81%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.81%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.81%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.81%) × [i32, i32, i32, i64] -> [i64]
    1  (0.81%) × [i32, i64] -> []
    1  (0.81%) × [i32, i64, i32] -> [i64]
    1  (0.81%) × [i32, f32] -> []
    1  (0.81%) × [i32, f64] -> []
    1  (0.81%) × [i64, i64] -> [f32]
    1  (0.81%) × [i64, i64] -> [f64]
    1  (0.81%) × [f64] -> [f64]
    1  (0.81%) × [f64, i32] -> [f64]
    2  (1.63%) × [] -> [i32]
    2  (1.63%) × [i32, i32, i32, i32] -> []
    3  (2.44%) × [i32, i32, i32, i32] -> [i32]
    3  (2.44%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (3.25%) × [i32, i32] -> []
    4  (3.25%) × [i32, i64, i64, i32] -> []
    4  (3.25%) × [i64, i64] -> [i32]
    7  (5.69%) × [i32, i64, i64, i64, i64] -> []
    7  (5.69%) × [i64, i64, i64, i64] -> [i32]
    8  (6.50%) × [] -> []
   11  (8.94%) × [i32] -> []
   13 (10.57%) × [i32, i32, i32] -> [i32]
   17 (13.82%) × [i32, i32] -> [i32]
   24 (19.51%) × [i32] -> [i32]

Functions with at least one call_indirect: 8 (6.90% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               24
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    12 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               13
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 12
  total classes: 3

CSV data for further analysis: absoluteloaderllvm.wasm,26634,612,18,2.857143,123,5,5,3,1,12,6,5,185,42,22.702703,42,22.702703,42,22.702703

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"absoluteloaderllvm.wasm",0,1,1,"i32.load"
"absoluteloaderllvm.wasm",1,1,5,"i32.load"
"absoluteloaderllvm.wasm",2,3,12,"i32.load"
