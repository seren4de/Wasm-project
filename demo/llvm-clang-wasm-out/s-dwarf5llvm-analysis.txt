Input file: s-dwarf5llvm.wasm
  binary:    s-dwarf5llvm.wasm

Functions:           58
  Imported:           1
  Non-imported:      57
  Exported:          56

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          0
  Of those, unique functions:     0 (i.e., at least 0.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     11767
  call:             221 (1.88% of all instructions)
  call_indirect:      8 (0.07% of all instructions, 3.49% of all calls)

Globals:
  #0 i32
     init: i32.const 66736
     27 × global.get   37 × global.set   64 total (42/58% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 66736
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 1188
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 1108
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 1112
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 1116
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 1180
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 1184
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1108
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 1112
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 1104
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 1104
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 1104
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     27 (47.37% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.75%) × [-9472]
    1  (1.75%) × [-192]
    1  (1.75%) × [-128]
    1  (1.75%) × [-112]
    1  (1.75%) × [-96]
    1  (1.75%) × [-80]
    2  (3.51%) × [-32]
    3  (5.26%) × [-160]
    6 (10.53%) × [-16]
   40 (70.18%) × []
  functions with stack allocation total: 17 (29.82%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-dwarf5llvm.wasm",1,1.754386,"[-9472]",-9472,9472
sp_csv_line:"s-dwarf5llvm.wasm",1,1.754386,"[-192]",-192,192
sp_csv_line:"s-dwarf5llvm.wasm",1,1.754386,"[-128]",-128,128
sp_csv_line:"s-dwarf5llvm.wasm",1,1.754386,"[-112]",-112,112
sp_csv_line:"s-dwarf5llvm.wasm",1,1.754386,"[-96]",-96,96
sp_csv_line:"s-dwarf5llvm.wasm",1,1.754386,"[-80]",-80,80
sp_csv_line:"s-dwarf5llvm.wasm",2,3.508772,"[-32]",-32,32
sp_csv_line:"s-dwarf5llvm.wasm",3,5.263158,"[-160]",-160,160
sp_csv_line:"s-dwarf5llvm.wasm",6,10.526316,"[-16]",-16,16
sp_csv_line:"s-dwarf5llvm.wasm",40,70.17544,"[]",0,0

Counts of function types (29 unique types):
    1  (1.72%) × [i32] -> [f64]
    1  (1.72%) × [i32, i32] -> [i32]
    1  (1.72%) × [i32, i32] -> [i64]
    1  (1.72%) × [i32, i32] -> [f32]
    1  (1.72%) × [i32, i32] -> [f64]
    1  (1.72%) × [i32, i32, i32] -> []
    1  (1.72%) × [i32, i32, i32] -> [i32]
    1  (1.72%) × [i32, i32, i32, i32] -> []
    1  (1.72%) × [i32, i32, i32, i32] -> [i32]
    1  (1.72%) × [i32, i32, i32, f64] -> [f64]
    1  (1.72%) × [i32, i64] -> []
    1  (1.72%) × [i32, f32] -> []
    1  (1.72%) × [i32, f64] -> []
    1  (1.72%) × [i64, i64] -> [i32]
    1  (1.72%) × [i64, i64] -> [f32]
    1  (1.72%) × [i64, i64] -> [f64]
    1  (1.72%) × [f64] -> [f64]
    1  (1.72%) × [f64, i32] -> [f64]
    1  (1.72%) × [f64, i32, i32, f64] -> [f64]
    2  (3.45%) × [] -> [i32]
    2  (3.45%) × [i32, i32] -> []
    2  (3.45%) × [i32, i32, i32, f64] -> [f32]
    3  (5.17%) × [i32] -> []
    3  (5.17%) × [i32, i64, i64, i32] -> []
    4  (6.90%) × [] -> []
    4  (6.90%) × [i32] -> [i32]
    5  (8.62%) × [i32, i32, i32, f64] -> [i32]
    7 (12.07%) × [i32, i64, i64, i64, i64] -> []
    7 (12.07%) × [i64, i64, i64, i64] -> [i32]

Functions with at least one call_indirect: 3 (5.26% of all functions)

Table elements initialization:
  0 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     5 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                0
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 5
  total classes: 2

CSV data for further analysis: s-dwarf5llvm.wasm,11767,221,8,3.4934497,58,0,0,2,3,5,4,5,5,0,0,0,0,0,0

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"s-dwarf5llvm.wasm",0,0,3,"i32.load"
"s-dwarf5llvm.wasm",1,0,5,"i32.load"
