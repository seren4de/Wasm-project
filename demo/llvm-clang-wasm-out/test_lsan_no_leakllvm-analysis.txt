Input file: test_lsan_no_leakllvm.wasm
  binary:    test_lsan_no_leakllvm.wasm

Functions:           38
  Imported:           7
  Non-imported:      31
  Exported:          26

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          0
  Of those, unique functions:     0 (i.e., at least 0.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      4121
  call:             143 (3.47% of all instructions)
  call_indirect:      0 (0.00% of all instructions, 0.00% of all calls)

Globals:
  #0 i32
     init: i32.const 67824
      5 × global.get   16 × global.set   21 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 67824
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 2288
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["global_ptr"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname"]
     init: i32.const 1028
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname_full"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__libc"]
     init: i32.const 1036
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__hwcap"]
     init: i32.const 1100
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__sysinfo"]
     init: i32.const 1104
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1028
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_name"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__malloc_replaced"]
     init: i32.const 2160
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:      5 (16.13% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (3.23%) × [-128]
    3  (9.68%) × [-16]
   27 (87.10%) × []
  functions with stack allocation total: 4 (12.90%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_lsan_no_leakllvm.wasm",1,3.2258065,"[-128]",-128,128
sp_csv_line:"test_lsan_no_leakllvm.wasm",3,9.67742,"[-16]",-16,16
sp_csv_line:"test_lsan_no_leakllvm.wasm",27,87.09677,"[]",0,0

Counts of function types (13 unique types):
    1  (2.63%) × [] -> [i32]
    1  (2.63%) × [i32, i32, i32, i32] -> []
    1  (2.63%) × [i32, i32, i32, i32] -> [i32]
    1  (2.63%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (2.63%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (2.63%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    2  (5.26%) × [i32, i32] -> []
    2  (5.26%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (7.89%) × [] -> []
    4 (10.53%) × [i32, i32, i32] -> [i32]
    5 (13.16%) × [i32, i32] -> [i32]
    7 (18.42%) × [i32] -> [i32]
    9 (23.68%) × [i32] -> []

Functions with at least one call_indirect: 0 (0.00% of all functions)

Table elements initialization:
  0 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
  0 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  total classes: 0

