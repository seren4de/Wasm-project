Input file: 0015llvm.wasm
  binary:    0015llvm.wasm

Functions:           16
  Imported:           3
  Non-imported:      13
  Exported:          13

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          0
  Of those, unique functions:     0 (i.e., at least 0.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      1679
  call:              24 (1.43% of all instructions)
  call_indirect:      0 (0.00% of all instructions, 0.00% of all calls)

Globals:
  #0 i32
     init: i32.const 66672
      5 × global.get   11 × global.set   16 total (31/69% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 66672
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 1132
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["t"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["N"]
     init: i32.const 1028
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__progname_full"]
     init: i32.const 1036
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__libc"]
     init: i32.const 1040
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__hwcap"]
     init: i32.const 1104
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["__sysinfo"]
     init: i32.const 1108
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["program_invocation_name"]
     init: i32.const 1036
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:      5 (38.46% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    2 (15.38%) × [-16]
   11 (84.62%) × []
  functions with stack allocation total: 2 (15.38%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"0015llvm.wasm",2,15.384615,"[-16]",-16,16
sp_csv_line:"0015llvm.wasm",11,84.61539,"[]",0,0

Counts of function types (9 unique types):
    1  (6.25%) × [i32, i32, i32] -> [i32]
    1  (6.25%) × [i32, i32, i32, i32] -> [i32]
    1  (6.25%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (6.25%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    2 (12.50%) × [] -> []
    2 (12.50%) × [] -> [i32]
    2 (12.50%) × [i32] -> []
    3 (18.75%) × [i32] -> [i32]
    3 (18.75%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 0 (0.00% of all functions)

Table elements initialization:
  0 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
  0 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  total classes: 0

