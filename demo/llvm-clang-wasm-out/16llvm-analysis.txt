Input file: 16llvm.wasm
  binary:    16llvm.wasm

Functions:          147
  Imported:           6
  Non-imported:     141
  Exported:         134

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          8
  Of those, unique functions:     8 (i.e., at least 5.44% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     27358
  call:             521 (1.90% of all instructions)
  call_indirect:     30 (0.11% of all instructions, 5.44% of all calls)

Globals:
  #0 i32
     init: i32.const 71664
      57 × global.get   175 × global.set   232 total (25/75% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71664
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6116
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 3796
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["__progname"]
     init: i32.const 4656
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["__progname_full"]
     init: i32.const 4660
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["__libc"]
     init: i32.const 4664
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["__hwcap"]
     init: i32.const 4728
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["__sysinfo"]
     init: i32.const 4732
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["program_invocation_short_name"]
     init: i32.const 4656
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["program_invocation_name"]
     init: i32.const 4660
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["__fsmu8"]
     init: i32.const 3264
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__stdin_used"]
     init: i32.const 4756
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__stdout_used"]
     init: i32.const 6112
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__stderr_used"]
     init: i32.const 5960
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["stdout"]
     init: i32.const 3800
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     57 (40.43% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.71%) × [-8064]
    1  (0.71%) × [-1712]
    1  (0.71%) × [-1632]
    1  (0.71%) × [-1616]
    1  (0.71%) × [-1312]
    1  (0.71%) × [-1056]
    1  (0.71%) × [-736]
    1  (0.71%) × [-688]
    1  (0.71%) × [-672]
    1  (0.71%) × [-304]
    1  (0.71%) × [-288]
    1  (0.71%) × [-256]
    1  (0.71%) × [-192]
    1  (0.71%) × [-96]
    2  (1.42%) × [-48]
    3  (2.13%) × [-112]
    6  (4.26%) × [-144]
    8  (5.67%) × [-32]
   21 (14.89%) × [-16]
   87 (61.70%) × []
  functions with stack allocation total: 54 (38.30%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-8064]",-8064,8064
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-1712]",-1712,1712
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-1632]",-1632,1632
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-1616]",-1616,1616
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-1312]",-1312,1312
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-1056]",-1056,1056
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-736]",-736,736
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-688]",-688,688
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-672]",-672,672
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-304]",-304,304
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-288]",-288,288
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-256]",-256,256
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-192]",-192,192
sp_csv_line:"16llvm.wasm",1,0.7092199,"[-96]",-96,96
sp_csv_line:"16llvm.wasm",2,1.4184397,"[-48]",-48,48
sp_csv_line:"16llvm.wasm",3,2.1276596,"[-112]",-112,112
sp_csv_line:"16llvm.wasm",6,4.255319,"[-144]",-144,144
sp_csv_line:"16llvm.wasm",8,5.673759,"[-32]",-32,32
sp_csv_line:"16llvm.wasm",21,14.893617,"[-16]",-16,16
sp_csv_line:"16llvm.wasm",87,61.70213,"[]",0,0

Counts of function types (25 unique types):
    1  (0.68%) × [i32, i32, i32, i32] -> []
    1  (0.68%) × [i32, i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.68%) × [i32, i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.68%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.68%) × [i32, i32, i32, i64] -> [i64]
    1  (0.68%) × [i32, i64] -> []
    1  (0.68%) × [i32, i64, i32] -> [i64]
    1  (0.68%) × [i32, f64] -> []
    2  (1.36%) × [] -> [i32]
    2  (1.36%) × [i32, i32, i32] -> []
    3  (2.04%) × [i32, i32] -> []
    3  (2.04%) × [i32, i64, i64, i32] -> []
    3  (2.04%) × [i32, i64, i64, i64, i64] -> []
    4  (2.72%) × [i32, i32, i32] -> [i64]
    4  (2.72%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    4  (2.72%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    4  (2.72%) × [i64, i64] -> [i32]
    7  (4.76%) × [i32, i32, i32, i32] -> [i32]
    7  (4.76%) × [i32, i32, i32, i32, i32] -> [i32]
    7  (4.76%) × [i64, i64, i64, i64] -> [i32]
    8  (5.44%) × [] -> []
    8  (5.44%) × [i32] -> []
   21 (14.29%) × [i32] -> [i32]
   21 (14.29%) × [i32, i32] -> [i32]
   31 (21.09%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 12 (8.51% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    7,    8]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  7 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                8
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32] -> []
         functions matching by type (regardless whether they are in the table):                8
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               21
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               31
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     1 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                7
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  7 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #3
    type: [i32, i32, i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #4
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #5
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 10
  class #6
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 13
  total classes: 7

CSV data for further analysis: 16llvm.wasm,27358,521,30,5.444646,147,8,6,7,1,13,4.285714285714286,1,630,49,7.7777777,49,7.7777777,35,5.5555553

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"16llvm.wasm",0,0,1,"i32.load"
"16llvm.wasm",1,1,1,"i32.load"
"16llvm.wasm",2,1,1,"i32.load"
"16llvm.wasm",3,1,1,"local.(get|tee)"
"16llvm.wasm",4,1,3,"i32.load"
"16llvm.wasm",5,3,10,"i32.load"
"16llvm.wasm",6,1,13,"local.(get|tee)"
