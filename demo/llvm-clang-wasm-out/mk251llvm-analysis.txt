Input file: mk251llvm.wasm
  binary:    mk251llvm.wasm

Functions:           24
  Imported:           3
  Non-imported:      21
  Exported:          21

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 16.67% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      1137
  call:              35 (3.08% of all instructions)
  call_indirect:      7 (0.62% of all instructions, 16.67% of all calls)

Globals:
  #0 i32
     init: i32.const 67840
      5 × global.get   13 × global.set   18 total (28/72% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 67840
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 2304
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 2072
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 2076
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 2080
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 2144
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 2148
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 2072
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 2076
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 2296
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdout"]
     init: i32.const 2300
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:      5 (23.81% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    4 (19.05%) × [-16]
   17 (80.95%) × []
  functions with stack allocation total: 4 (19.05%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"mk251llvm.wasm",4,19.047619,"[-16]",-16,16
sp_csv_line:"mk251llvm.wasm",17,80.95238,"[]",0,0

Counts of function types (9 unique types):
    1  (4.17%) × [i32, i32, i32, i32] -> [i32]
    1  (4.17%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (4.17%) × [i32, i64, i32] -> [i64]
    2  (8.33%) × [i32, i32, i32] -> [i32]
    3 (12.50%) × [] -> [i32]
    3 (12.50%) × [i32] -> []
    3 (12.50%) × [i32, i32] -> [i32]
    4 (16.67%) × [] -> []
    6 (25.00%) × [i32] -> [i32]

Functions with at least one call_indirect: 2 (9.52% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     4 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 4
  total classes: 2

CSV data for further analysis: mk251llvm.wasm,1137,35,7,16.666666,24,4,3,2,3,4,3.5,4,11,11,100,11,100,11,100

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"mk251llvm.wasm",0,1,3,"i32.load"
"mk251llvm.wasm",1,2,4,"i32.load"
