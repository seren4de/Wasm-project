Input file: gen-devlistllvm.wasm
  binary:    gen-devlistllvm.wasm

Functions:          105
  Imported:           7
  Non-imported:      98
  Exported:          90

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          4
  Of those, unique functions:     4 (i.e., at least 3.81% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     17445
  call:             418 (2.40% of all instructions)
  call_indirect:     19 (0.11% of all instructions, 4.35% of all calls)

Globals:
  #0 i32
     init: i32.const 71904
     25 × global.get   83 × global.set  108 total (23/77% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71904
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6356
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["stderr"]
     init: i32.const 1400
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["stdin"]
     init: i32.const 1404
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__progname"]
     init: i32.const 3856
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__progname_full"]
     init: i32.const 3860
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__libc"]
     init: i32.const 3864
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__hwcap"]
     init: i32.const 3928
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["__sysinfo"]
     init: i32.const 3932
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["program_invocation_short_name"]
     init: i32.const 3856
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["program_invocation_name"]
     init: i32.const 3860
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__malloc_replaced"]
     init: i32.const 4984
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stdin_used"]
     init: i32.const 6352
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["__stdout_used"]
     init: i32.const 5000
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["__stderr_used"]
     init: i32.const 6200
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     25 (25.51% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.02%) × [-8064]
    1  (1.02%) × [-288]
    1  (1.02%) × [-128]
    1  (1.02%) × [-112]
    1  (1.02%) × [-96]
    1  (1.02%) × [-32]
   17 (17.35%) × [-16]
   75 (76.53%) × []
  functions with stack allocation total: 23 (23.47%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"gen-devlistllvm.wasm",1,1.0204082,"[-8064]",-8064,8064
sp_csv_line:"gen-devlistllvm.wasm",1,1.0204082,"[-288]",-288,288
sp_csv_line:"gen-devlistllvm.wasm",1,1.0204082,"[-128]",-128,128
sp_csv_line:"gen-devlistllvm.wasm",1,1.0204082,"[-112]",-112,112
sp_csv_line:"gen-devlistllvm.wasm",1,1.0204082,"[-96]",-96,96
sp_csv_line:"gen-devlistllvm.wasm",1,1.0204082,"[-32]",-32,32
sp_csv_line:"gen-devlistllvm.wasm",17,17.34694,"[-16]",-16,16
sp_csv_line:"gen-devlistllvm.wasm",75,76.53061,"[]",0,0

Counts of function types (20 unique types):
    1  (0.95%) × [i32, i32, i32] -> []
    1  (0.95%) × [i32, i32, i32, i32] -> []
    1  (0.95%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.95%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.95%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.95%) × [i32, i64, i32] -> [i64]
    1  (0.95%) × [i32, f64] -> []
    2  (1.90%) × [i32, i32, i32, i32] -> [i32]
    3  (2.86%) × [] -> [i32]
    3  (2.86%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (2.86%) × [i32, i64, i64, i32] -> []
    3  (2.86%) × [i32, i64, i64, i64, i64] -> []
    4  (3.81%) × [i64, i64] -> [i32]
    5  (4.76%) × [i32, i32] -> []
    7  (6.67%) × [] -> []
    7  (6.67%) × [i64, i64, i64, i64] -> [i32]
   11 (10.48%) × [i32] -> []
   12 (11.43%) × [i32, i32, i32] -> [i32]
   18 (17.14%) × [i32, i32] -> [i32]
   20 (19.05%) × [i32] -> [i32]

Functions with at least one call_indirect: 9 (9.18% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
  3 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               20
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               12
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 13
  total classes: 3

CSV data for further analysis: gen-devlistllvm.wasm,17445,418,19,4.347826,105,4,4,3,1,13,6.333333333333333,5,181,32,17.679558,32,17.679558,32,17.679558

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"gen-devlistllvm.wasm",0,1,1,"i32.load"
"gen-devlistllvm.wasm",1,1,5,"i32.load"
"gen-devlistllvm.wasm",2,2,13,"i32.load"
