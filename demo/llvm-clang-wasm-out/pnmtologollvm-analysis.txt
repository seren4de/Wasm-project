Input file: pnmtologollvm.wasm
  binary:    pnmtologollvm.wasm

Functions:          133
  Imported:           7
  Non-imported:     126
  Exported:         102

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 3.76% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     22726
  call:             530 (2.33% of all instructions)
  call_indirect:     20 (0.09% of all instructions, 3.64% of all calls)

Globals:
  #0 i32
     init: i32.const 74224
      40 × global.get   118 × global.set   158 total (25/75% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 74224
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 8684
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["opterr"]
     init: i32.const 8376
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["optarg"]
     init: i32.const 1840
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["optind"]
     init: i32.const 8372
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["stderr"]
     init: i32.const 7768
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["stdout"]
     init: i32.const 7772
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["__progname"]
     init: i32.const 1744
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["__progname_full"]
     init: i32.const 1748
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["__libc"]
     init: i32.const 1752
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["__hwcap"]
     init: i32.const 1816
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__sysinfo"]
     init: i32.const 1820
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["program_invocation_short_name"]
     init: i32.const 1744
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["program_invocation_name"]
     init: i32.const 1748
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["__malloc_replaced"]
     init: i32.const 2888
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["__optreset"]
     init: i32.const 1832
       0 × global.get     0 × global.set     0 total
  #18 i32
     export: ["__optpos"]
     init: i32.const 1836
       0 × global.get     0 × global.set     0 total
  #19 i32
     export: ["optopt"]
     init: i32.const 1844
       0 × global.get     0 × global.set     0 total
  #20 i32
     export: ["optreset"]
     init: i32.const 1832
       0 × global.get     0 × global.set     0 total
  #21 i32
     export: ["__fsmu8"]
     init: i32.const 7440
       0 × global.get     0 × global.set     0 total
  #22 i32
     export: ["__stdin_used"]
     init: i32.const 2904
       0 × global.get     0 × global.set     0 total
  #23 i32
     export: ["__stdout_used"]
     init: i32.const 8680
       0 × global.get     0 × global.set     0 total
  #24 i32
     export: ["__stderr_used"]
     init: i32.const 8528
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     40 (31.75% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.79%) × [-8064]
    1  (0.79%) × [-288]
    1  (0.79%) × [-128]
    1  (0.79%) × [-112]
    1  (0.79%) × [-96]
    1  (0.79%) × [-32]
   20 (15.87%) × [-16]
  100 (79.37%) × []
  functions with stack allocation total: 26 (20.63%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"pnmtologollvm.wasm",1,0.7936508,"[-8064]",-8064,8064
sp_csv_line:"pnmtologollvm.wasm",1,0.7936508,"[-288]",-288,288
sp_csv_line:"pnmtologollvm.wasm",1,0.7936508,"[-128]",-128,128
sp_csv_line:"pnmtologollvm.wasm",1,0.7936508,"[-112]",-112,112
sp_csv_line:"pnmtologollvm.wasm",1,0.7936508,"[-96]",-96,96
sp_csv_line:"pnmtologollvm.wasm",1,0.7936508,"[-32]",-32,32
sp_csv_line:"pnmtologollvm.wasm",20,15.873015,"[-16]",-16,16
sp_csv_line:"pnmtologollvm.wasm",100,79.36508,"[]",0,0

Counts of function types (20 unique types):
    1  (0.75%) × [i32, i32, i32] -> []
    1  (0.75%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.75%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.75%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.75%) × [i32, i64, i32] -> [i64]
    1  (0.75%) × [i32, f64] -> []
    2  (1.50%) × [] -> [i32]
    2  (1.50%) × [i32, i32, i32, i32] -> []
    2  (1.50%) × [i32, i32, i32, i32] -> [i32]
    3  (2.26%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (2.26%) × [i32, i64, i64, i32] -> []
    3  (2.26%) × [i32, i64, i64, i64, i64] -> []
    4  (3.01%) × [i64, i64] -> [i32]
    6  (4.51%) × [i32, i32] -> []
    7  (5.26%) × [i64, i64, i64, i64] -> [i32]
   14 (10.53%) × [i32, i32, i32] -> [i32]
   16 (12.03%) × [i32] -> []
   18 (13.53%) × [] -> []
   20 (15.04%) × [i32, i32] -> [i32]
   27 (20.30%) × [i32] -> [i32]

Functions with at least one call_indirect: 10 (7.94% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               27
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  4 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #3
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 13
  total classes: 4

CSV data for further analysis: pnmtologollvm.wasm,22726,530,20,3.6363637,133,5,5,4,1,13,5,5,232,45,19.396551,45,19.396551,45,19.396551

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"pnmtologollvm.wasm",0,0,1,"i32.load"
"pnmtologollvm.wasm",1,1,1,"i32.load"
"pnmtologollvm.wasm",2,1,5,"i32.load"
"pnmtologollvm.wasm",3,3,13,"i32.load"
