Input file: GOST_28147llvm.wasm
  binary:    GOST_28147llvm.wasm

Functions:           80
  Imported:           3
  Non-imported:      77
  Exported:          74

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 6.25% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     14681
  call:             249 (1.70% of all instructions)
  call_indirect:     14 (0.10% of all instructions, 5.32% of all calls)

Globals:
  #0 i32
     init: i32.const 71744
     33 × global.get   75 × global.set  108 total (31/69% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71744
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6196
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 5816
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 5820
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 5824
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 5888
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 5892
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 5816
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 5820
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 6040
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 6192
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 3728
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdin"]
     init: i32.const 1260
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["stdout"]
     init: i32.const 1264
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     33 (42.86% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.30%) × [-8064]
    1  (1.30%) × [-288]
    1  (1.30%) × [-112]
    1  (1.30%) × [-96]
    1  (1.30%) × [-32]
   14 (18.18%) × [-16]
   58 (75.32%) × []
  functions with stack allocation total: 19 (24.68%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"GOST_28147llvm.wasm",1,1.2987013,"[-8064]",-8064,8064
sp_csv_line:"GOST_28147llvm.wasm",1,1.2987013,"[-288]",-288,288
sp_csv_line:"GOST_28147llvm.wasm",1,1.2987013,"[-112]",-112,112
sp_csv_line:"GOST_28147llvm.wasm",1,1.2987013,"[-96]",-96,96
sp_csv_line:"GOST_28147llvm.wasm",1,1.2987013,"[-32]",-32,32
sp_csv_line:"GOST_28147llvm.wasm",14,18.181818,"[-16]",-16,16
sp_csv_line:"GOST_28147llvm.wasm",58,75.32468,"[]",0,0

Counts of function types (22 unique types):
    1  (1.25%) × [i32] -> [i64]
    1  (1.25%) × [i32, i32] -> [i64]
    1  (1.25%) × [i32, i32, i32] -> []
    1  (1.25%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.25%) × [i32, i64, i32] -> [i64]
    1  (1.25%) × [i32, f64] -> []
    1  (1.25%) × [i64, i32] -> []
    1  (1.25%) × [i64, i32, i32] -> []
    2  (2.50%) × [i32, i32, i32, i32] -> []
    2  (2.50%) × [i32, i32, i32, i32] -> [i32]
    2  (2.50%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (3.75%) × [i32] -> []
    3  (3.75%) × [i32, i64, i64, i32] -> []
    3  (3.75%) × [i32, i64, i64, i64, i64] -> []
    4  (5.00%) × [] -> [i32]
    4  (5.00%) × [i64, i64] -> [i32]
    5  (6.25%) × [] -> []
    6  (7.50%) × [i32, i32] -> []
    7  (8.75%) × [i64, i64, i64, i64] -> [i32]
    9 (11.25%) × [i32, i32, i32] -> [i32]
   10 (12.50%) × [i32, i32] -> [i32]
   12 (15.00%) × [i32] -> [i32]

Functions with at least one call_indirect: 7 (9.09% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    11 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 11
  total classes: 2

CSV data for further analysis: GOST_28147llvm.wasm,14681,249,14,5.323194,80,5,4,2,3,11,7,11,102,36,35.294117,36,35.294117,36,35.294117

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"GOST_28147llvm.wasm",0,1,3,"i32.load"
"GOST_28147llvm.wasm",1,3,11,"i32.load"
