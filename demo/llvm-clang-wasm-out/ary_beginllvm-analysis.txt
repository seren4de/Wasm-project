Input file: ary_beginllvm.wasm
  binary:    ary_beginllvm.wasm

Functions:           68
  Imported:           3
  Non-imported:      65
  Exported:          63

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 7.35% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     12756
  call:             222 (1.74% of all instructions)
  call_indirect:     14 (0.11% of all instructions, 5.93% of all calls)

Globals:
  #0 i32
     init: i32.const 71520
     19 × global.get   61 × global.set   80 total (24/76% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71520
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5972
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 5592
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 5596
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 5600
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 5664
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 5668
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 5592
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 5596
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 5816
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 5968
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 3504
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stdin"]
     init: i32.const 1048
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["stdout"]
     init: i32.const 1052
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     19 (29.23% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.54%) × [-8064]
    1  (1.54%) × [-288]
    1  (1.54%) × [-112]
    1  (1.54%) × [-96]
    1  (1.54%) × [-32]
   13 (20.00%) × [-16]
   47 (72.31%) × []
  functions with stack allocation total: 18 (27.69%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"ary_beginllvm.wasm",1,1.5384616,"[-8064]",-8064,8064
sp_csv_line:"ary_beginllvm.wasm",1,1.5384616,"[-288]",-288,288
sp_csv_line:"ary_beginllvm.wasm",1,1.5384616,"[-112]",-112,112
sp_csv_line:"ary_beginllvm.wasm",1,1.5384616,"[-96]",-96,96
sp_csv_line:"ary_beginllvm.wasm",1,1.5384616,"[-32]",-32,32
sp_csv_line:"ary_beginllvm.wasm",13,20,"[-16]",-16,16
sp_csv_line:"ary_beginllvm.wasm",47,72.30769,"[]",0,0

Counts of function types (17 unique types):
    1  (1.47%) × [i32, i32, i32] -> []
    1  (1.47%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.47%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.47%) × [i32, i64, i32] -> [i64]
    1  (1.47%) × [i32, f64] -> []
    2  (2.94%) × [i32, i32] -> []
    2  (2.94%) × [i32, i32, i32, i32] -> [i32]
    3  (4.41%) × [] -> [i32]
    3  (4.41%) × [i32, i64, i64, i32] -> []
    3  (4.41%) × [i32, i64, i64, i64, i64] -> []
    4  (5.88%) × [i64, i64] -> [i32]
    5  (7.35%) × [i32] -> []
    7 (10.29%) × [] -> []
    7 (10.29%) × [i64, i64, i64, i64] -> [i32]
    8 (11.76%) × [i32, i32] -> [i32]
    9 (13.24%) × [i32, i32, i32] -> [i32]
   10 (14.71%) × [i32] -> [i32]

Functions with at least one call_indirect: 7 (10.77% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                7
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 10
  total classes: 3

CSV data for further analysis: ary_beginllvm.wasm,12756,222,14,5.9322033,68,5,4,3,1,10,4.666666666666667,3,100,33,33,33,33,33,33

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"ary_beginllvm.wasm",0,0,1,"i32.load"
"ary_beginllvm.wasm",1,1,3,"i32.load"
"ary_beginllvm.wasm",2,3,10,"i32.load"
