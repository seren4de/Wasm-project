Input file: bprintllvm.wasm
  binary:    bprintllvm.wasm

Functions:          139
  Imported:           7
  Non-imported:     132
  Exported:         115

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          9
  Of those, unique functions:     9 (i.e., at least 6.47% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     26322
  call:             523 (1.99% of all instructions)
  call_indirect:     35 (0.13% of all instructions, 6.27% of all calls)

Globals:
  #0 i32
     init: i32.const 72304
      48 × global.get   125 × global.set   173 total (28/72% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 72304
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6756
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["filelist"]
     init: i32.const 4112
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["stderr"]
     init: i32.const 1624
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["progname"]
     init: i32.const 4116
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["dirs"]
     init: i32.const 4128
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["number"]
     init: i32.const 4208
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["fcount"]
     init: i32.const 4212
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["fp"]
     init: i32.const 4228
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["__progname"]
     init: i32.const 4244
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["__progname_full"]
     init: i32.const 4248
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__libc"]
     init: i32.const 4252
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__hwcap"]
     init: i32.const 4316
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__sysinfo"]
     init: i32.const 4320
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["program_invocation_short_name"]
     init: i32.const 4244
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["program_invocation_name"]
     init: i32.const 4248
       0 × global.get     0 × global.set     0 total
  #18 i32
     export: ["__malloc_replaced"]
     init: i32.const 5376
       0 × global.get     0 × global.set     0 total
  #19 i32
     export: ["__stdin_used"]
     init: i32.const 5392
       0 × global.get     0 × global.set     0 total
  #20 i32
     export: ["__stdout_used"]
     init: i32.const 6752
       0 × global.get     0 × global.set     0 total
  #21 i32
     export: ["__stderr_used"]
     init: i32.const 6600
       0 × global.get     0 × global.set     0 total
  #22 i32
     export: ["stdout"]
     init: i32.const 1628
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     48 (36.36% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.76%) × [-8064]
    1  (0.76%) × [-736]
    1  (0.76%) × [-688]
    1  (0.76%) × [-288]
    1  (0.76%) × [-160]
    1  (0.76%) × [-128]
    1  (0.76%) × [-112]
    1  (0.76%) × [-96]
    1  (0.76%) × [-32]
   21 (15.91%) × [-16]
  102 (77.27%) × []
  functions with stack allocation total: 30 (22.73%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-8064]",-8064,8064
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-736]",-736,736
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-688]",-688,688
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-288]",-288,288
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-160]",-160,160
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-128]",-128,128
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-112]",-112,112
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-96]",-96,96
sp_csv_line:"bprintllvm.wasm",1,0.75757575,"[-32]",-32,32
sp_csv_line:"bprintllvm.wasm",21,15.909091,"[-16]",-16,16
sp_csv_line:"bprintllvm.wasm",102,77.27273,"[]",0,0

Counts of function types (23 unique types):
    1  (0.72%) × [i32, i32, i32] -> []
    1  (0.72%) × [i32, i32, i32, i32, i32] -> []
    1  (0.72%) × [i32, i32, i32, i32, i32, i32] -> []
    1  (0.72%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.72%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.72%) × [i32, i32, i32, i32, i32, i32, i32, i32] -> []
    1  (0.72%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.72%) × [i32, i64, i32] -> [i64]
    1  (0.72%) × [i32, f64] -> []
    3  (2.16%) × [i32, i32, i32, i32] -> []
    3  (2.16%) × [i32, i32, i32, i32] -> [i32]
    3  (2.16%) × [i32, i64, i64, i32] -> []
    3  (2.16%) × [i32, i64, i64, i64, i64] -> []
    4  (2.88%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (2.88%) × [i64, i64] -> [i32]
    5  (3.60%) × [] -> [i32]
    6  (4.32%) × [i32, i32] -> []
    7  (5.04%) × [i64, i64, i64, i64] -> [i32]
    9  (6.47%) × [] -> []
   14 (10.07%) × [i32] -> []
   18 (12.95%) × [i32, i32, i32] -> [i32]
   23 (16.55%) × [i32, i32] -> [i32]
   28 (20.14%) × [i32] -> [i32]

Functions with at least one call_indirect: 13 (9.85% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [    2,    3]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    5,    6]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
         range: [    7,    7]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    8,    9]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  6 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     1 × unrestricted                         source:   i32.load   type [] -> []
         functions matching by type (regardless whether they are in the table):                9
         functions matching by type and present in table (regardless at which table index):    0
         functions matching by type and present in permissable table index range:              0
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               28
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):                6
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
    13 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               23
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
    13 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     5 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  6 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [] -> []
    start idx: None, end idx: None
    size (of class): 0
    count (how often class appears): 1
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 2
  class #3
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 5
  class #4
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 13
  class #5
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 13
  total classes: 6

CSV data for further analysis: bprintllvm.wasm,26322,523,35,6.2724013,139,9,6,6,1,13,5.833333333333333,5,587,75,12.776832,75,12.776832,58,9.88075

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"bprintllvm.wasm",0,0,1,"i32.load"
"bprintllvm.wasm",1,1,1,"i32.load"
"bprintllvm.wasm",2,2,2,"local.(get|tee)"
"bprintllvm.wasm",3,1,5,"i32.load"
"bprintllvm.wasm",4,1,13,"local.(get|tee)"
"bprintllvm.wasm",5,4,13,"i32.load"
