Input file: testinstrllvm.wasm
  binary:    testinstrllvm.wasm

Functions:          105
  Imported:           8
  Non-imported:      97
  Exported:          89

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          5
  Of those, unique functions:     5 (i.e., at least 4.76% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     15897
  call:             390 (2.45% of all instructions)
  call_indirect:     12 (0.08% of all instructions, 2.99% of all calls)

Globals:
  #0 i32
     init: i32.const 71856
     31 × global.get   91 × global.set  122 total (25/75% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 71856
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 6308
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 3808
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 3812
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 3816
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 3880
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 3884
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 3808
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 3812
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__malloc_replaced"]
     init: i32.const 4936
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdin_used"]
     init: i32.const 4960
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stdout_used"]
     init: i32.const 6304
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["__stderr_used"]
     init: i32.const 6152
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["stderr"]
     init: i32.const 3244
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["stdout"]
     init: i32.const 3248
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     31 (31.96% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.03%) × [-8064]
    1  (1.03%) × [-288]
    1  (1.03%) × [-144]
    1  (1.03%) × [-128]
    1  (1.03%) × [-112]
    1  (1.03%) × [-96]
    2  (2.06%) × [-32]
   19 (19.59%) × [-16]
   70 (72.16%) × []
  functions with stack allocation total: 27 (27.84%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"testinstrllvm.wasm",1,1.0309278,"[-8064]",-8064,8064
sp_csv_line:"testinstrllvm.wasm",1,1.0309278,"[-288]",-288,288
sp_csv_line:"testinstrllvm.wasm",1,1.0309278,"[-144]",-144,144
sp_csv_line:"testinstrllvm.wasm",1,1.0309278,"[-128]",-128,128
sp_csv_line:"testinstrllvm.wasm",1,1.0309278,"[-112]",-112,112
sp_csv_line:"testinstrllvm.wasm",1,1.0309278,"[-96]",-96,96
sp_csv_line:"testinstrllvm.wasm",2,2.0618556,"[-32]",-32,32
sp_csv_line:"testinstrllvm.wasm",19,19.58763,"[-16]",-16,16
sp_csv_line:"testinstrllvm.wasm",70,72.16495,"[]",0,0

Counts of function types (20 unique types):
    1  (0.95%) × [i32, i32, i32] -> []
    1  (0.95%) × [i32, i32, i32, i32] -> []
    1  (0.95%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.95%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.95%) × [i32, f64] -> []
    2  (1.90%) × [] -> [i32]
    2  (1.90%) × [i32, i32, i32, i32] -> [i32]
    2  (1.90%) × [i32, i64, i32] -> [i64]
    3  (2.86%) × [i32, i32, i32, i32, i32] -> [i32]
    3  (2.86%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    3  (2.86%) × [i32, i64, i64, i32] -> []
    3  (2.86%) × [i32, i64, i64, i64, i64] -> []
    4  (3.81%) × [i64, i64] -> [i32]
    5  (4.76%) × [i32, i32] -> []
    7  (6.67%) × [] -> []
    7  (6.67%) × [i64, i64, i64, i64] -> [i32]
   11 (10.48%) × [i32] -> []
   15 (14.29%) × [i32, i32] -> [i32]
   15 (14.29%) × [i32, i32, i32] -> [i32]
   18 (17.14%) × [i32] -> [i32]

Functions with at least one call_indirect: 5 (5.15% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     9 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               15
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 9
  total classes: 2

CSV data for further analysis: testinstrllvm.wasm,15897,390,12,2.9850745,105,5,4,2,3,9,6,9,141,30,21.276596,30,21.276596,30,21.276596

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"testinstrllvm.wasm",0,1,3,"i32.load"
"testinstrllvm.wasm",1,3,9,"i32.load"
