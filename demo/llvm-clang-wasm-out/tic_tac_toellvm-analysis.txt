Input file: tic_tac_toellvm.wasm
  binary:    tic_tac_toellvm.wasm

Functions:          127
  Imported:           7
  Non-imported:     120
  Exported:         106

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 4.72% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     30229
  call:             632 (2.09% of all instructions)
  call_indirect:     13 (0.04% of all instructions, 2.02% of all calls)

Globals:
  #0 i32
     init: i32.const 74016
      44 × global.get   122 × global.set   166 total (27/73% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 74016
       0 × global.get     0 × global.set     0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 8468
       0 × global.get     0 × global.set     0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
       0 × global.get     0 × global.set     0 total
  #4 i32
     export: ["stdin"]
     init: i32.const 4896
       0 × global.get     0 × global.set     0 total
  #5 i32
     export: ["stderr"]
     init: i32.const 4892
       0 × global.get     0 × global.set     0 total
  #6 i32
     export: ["__progname"]
     init: i32.const 3144
       0 × global.get     0 × global.set     0 total
  #7 i32
     export: ["__progname_full"]
     init: i32.const 3148
       0 × global.get     0 × global.set     0 total
  #8 i32
     export: ["__libc"]
     init: i32.const 3152
       0 × global.get     0 × global.set     0 total
  #9 i32
     export: ["__hwcap"]
     init: i32.const 3216
       0 × global.get     0 × global.set     0 total
  #10 i32
     export: ["__sysinfo"]
     init: i32.const 3220
       0 × global.get     0 × global.set     0 total
  #11 i32
     export: ["program_invocation_short_name"]
     init: i32.const 3144
       0 × global.get     0 × global.set     0 total
  #12 i32
     export: ["program_invocation_name"]
     init: i32.const 3148
       0 × global.get     0 × global.set     0 total
  #13 i32
     export: ["__malloc_replaced"]
     init: i32.const 4280
       0 × global.get     0 × global.set     0 total
  #14 i32
     export: ["__fsmu8"]
     init: i32.const 7696
       0 × global.get     0 × global.set     0 total
  #15 i32
     export: ["__stdin_used"]
     init: i32.const 8312
       0 × global.get     0 × global.set     0 total
  #16 i32
     export: ["__stdout_used"]
     init: i32.const 8464
       0 × global.get     0 × global.set     0 total
  #17 i32
     export: ["__stderr_used"]
     init: i32.const 8160
       0 × global.get     0 × global.set     0 total
  #18 i32
     export: ["stdout"]
     init: i32.const 4900
       0 × global.get     0 × global.set     0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     44 (36.67% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.83%) × [-9472]
    1  (0.83%) × [-8064]
    1  (0.83%) × [-320]
    1  (0.83%) × [-288]
    1  (0.83%) × [-192]
    1  (0.83%) × [-144]
    1  (0.83%) × [-112]
    1  (0.83%) × [-96]
    1  (0.83%) × [-80]
    2  (1.67%) × [-128]
    3  (2.50%) × [-32]
   22 (18.33%) × [-16]
   84 (70.00%) × []
  functions with stack allocation total: 36 (30.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-9472]",-9472,9472
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-8064]",-8064,8064
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-320]",-320,320
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-288]",-288,288
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-192]",-192,192
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-144]",-144,144
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-112]",-112,112
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-96]",-96,96
sp_csv_line:"tic_tac_toellvm.wasm",1,0.8333333,"[-80]",-80,80
sp_csv_line:"tic_tac_toellvm.wasm",2,1.6666666,"[-128]",-128,128
sp_csv_line:"tic_tac_toellvm.wasm",3,2.5,"[-32]",-32,32
sp_csv_line:"tic_tac_toellvm.wasm",22,18.333334,"[-16]",-16,16
sp_csv_line:"tic_tac_toellvm.wasm",84,70,"[]",0,0

Counts of function types (29 unique types):
    1  (0.79%) × [i32] -> [i64]
    1  (0.79%) × [i32, i32] -> [i64]
    1  (0.79%) × [i32, i32, i32] -> []
    1  (0.79%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.79%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.79%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (0.79%) × [i32, i32, i32, i64] -> [i64]
    1  (0.79%) × [i32, i64] -> []
    1  (0.79%) × [i32, i64, i32] -> [i64]
    1  (0.79%) × [i32, f32] -> []
    1  (0.79%) × [i32, f64] -> []
    1  (0.79%) × [i64, i64] -> [f32]
    1  (0.79%) × [i64, i64] -> [f64]
    1  (0.79%) × [f64] -> [f64]
    1  (0.79%) × [f64, i32] -> [f64]
    2  (1.57%) × [i32, i32, i32, i32] -> []
    3  (2.36%) × [i32, i32, i32, i32] -> [i32]
    3  (2.36%) × [i32, i32, i32, i32, i32] -> [i32]
    4  (3.15%) × [i32, i32] -> []
    4  (3.15%) × [i32, i64, i64, i32] -> []
    4  (3.15%) × [i64, i64] -> [i32]
    6  (4.72%) × [] -> [i32]
    7  (5.51%) × [i32, i64, i64, i64, i64] -> []
    7  (5.51%) × [i64, i64, i64, i64] -> [i32]
   10  (7.87%) × [] -> []
   13 (10.24%) × [i32] -> []
   13 (10.24%) × [i32, i32] -> [i32]
   18 (14.17%) × [i32] -> [i32]
   18 (14.17%) × [i32, i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (5.00% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
         range: [    4,    6]   length:   3   unique funcs:    3   type: [i32, i32, i32] -> [i32]
  4 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
    10 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               18
         functions matching by type and present in table (regardless at which table index):    4
         functions matching by type and present in permissable table index range:              4
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 4
    count (how often class appears): 10
  total classes: 2

CSV data for further analysis: tic_tac_toellvm.wasm,30229,632,13,2.015504,127,6,5,2,3,10,6.5,10,183,43,23.497269,43,23.497269,43,23.497269

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"tic_tac_toellvm.wasm",0,1,3,"i32.load"
"tic_tac_toellvm.wasm",1,4,10,"i32.load"
