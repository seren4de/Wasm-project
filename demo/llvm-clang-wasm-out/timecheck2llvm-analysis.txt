Input file: timecheck2llvm.wasm
  binary:    timecheck2llvm.wasm

Functions:           90
  Imported:           5
  Non-imported:      85
  Exported:          80

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          6
  Of those, unique functions:     6 (i.e., at least 6.67% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:     17433
  call:             278 (1.59% of all instructions)
  call_indirect:     15 (0.09% of all instructions, 5.12% of all calls)

Globals:
  #0 i32
     init: i32.const 70816
     26 × global.get   74 × global.set  100 total (26/74% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 70816
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 5276
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["Time_Zero"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__environ"]
     init: i32.const 2208
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["___environ"]
     init: i32.const 2208
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["_environ"]
     init: i32.const 2208
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["environ"]
     init: i32.const 2208
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["__progname"]
     init: i32.const 2084
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["__progname_full"]
     init: i32.const 2088
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__libc"]
     init: i32.const 2092
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__hwcap"]
     init: i32.const 2156
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__sysinfo"]
     init: i32.const 2160
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["program_invocation_short_name"]
     init: i32.const 2084
      0 × global.get    0 × global.set    0 total
  #15 i32
     export: ["program_invocation_name"]
     init: i32.const 2088
      0 × global.get    0 × global.set    0 total
  #16 i32
     export: ["__stdin_used"]
     init: i32.const 2080
      0 × global.get    0 × global.set    0 total
  #17 i32
     export: ["__stdout_used"]
     init: i32.const 5264
      0 × global.get    0 × global.set    0 total
  #18 i32
     export: ["__stderr_used"]
     init: i32.const 2080
      0 × global.get    0 × global.set    0 total
  #19 i32
     export: ["stdout"]
     init: i32.const 2496
      0 × global.get    0 × global.set    0 total
  #20 i32
     export: ["__daylight"]
     init: i32.const 2236
      0 × global.get    0 × global.set    0 total
  #21 i32
     export: ["__timezone"]
     init: i32.const 2232
      0 × global.get    0 × global.set    0 total
  #22 i32
     export: ["__tzname"]
     init: i32.const 2240
      0 × global.get    0 × global.set    0 total
  #23 i32
     export: ["__utc"]
     init: i32.const 5024
      0 × global.get    0 × global.set    0 total
  #24 i32
     export: ["timezone"]
     init: i32.const 2232
      0 × global.get    0 × global.set    0 total
  #25 i32
     export: ["daylight"]
     init: i32.const 2236
      0 × global.get    0 × global.set    0 total
  #26 i32
     export: ["tzname"]
     init: i32.const 2240
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:     26 (30.59% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (1.18%) × [-8064]
    1  (1.18%) × [-304]
    1  (1.18%) × [-288]
    1  (1.18%) × [-144]
    1  (1.18%) × [-112]
    1  (1.18%) × [-96]
    1  (1.18%) × [-32]
   14 (16.47%) × [-16]
   64 (75.29%) × []
  functions with stack allocation total: 21 (24.71%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"timecheck2llvm.wasm",1,1.1764706,"[-8064]",-8064,8064
sp_csv_line:"timecheck2llvm.wasm",1,1.1764706,"[-304]",-304,304
sp_csv_line:"timecheck2llvm.wasm",1,1.1764706,"[-288]",-288,288
sp_csv_line:"timecheck2llvm.wasm",1,1.1764706,"[-144]",-144,144
sp_csv_line:"timecheck2llvm.wasm",1,1.1764706,"[-112]",-112,112
sp_csv_line:"timecheck2llvm.wasm",1,1.1764706,"[-96]",-96,96
sp_csv_line:"timecheck2llvm.wasm",1,1.1764706,"[-32]",-32,32
sp_csv_line:"timecheck2llvm.wasm",14,16.470589,"[-16]",-16,16
sp_csv_line:"timecheck2llvm.wasm",64,75.29412,"[]",0,0

Counts of function types (24 unique types):
    1  (1.11%) × [i32, i32] -> [i64]
    1  (1.11%) × [i32, i32, i32] -> []
    1  (1.11%) × [i32, i32, i32, i32, i32] -> [i32]
    1  (1.11%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.11%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (1.11%) × [i32, i32, i32, i32, i32, i64] -> [i32]
    1  (1.11%) × [i32, i64, i32] -> [i64]
    1  (1.11%) × [i32, f64] -> []
    1  (1.11%) × [i64, i32] -> [i32]
    1  (1.11%) × [i64, i32] -> [i64]
    1  (1.11%) × [i64, i32, i32, i32, i32, i32] -> []
    1  (1.11%) × [i64, i64] -> [f64]
    2  (2.22%) × [i32, i32, i32, i32] -> [i32]
    3  (3.33%) × [] -> [i32]
    3  (3.33%) × [i32] -> []
    3  (3.33%) × [i32, i64, i64, i32] -> []
    3  (3.33%) × [i32, i64, i64, i64, i64] -> []
    4  (4.44%) × [i64, i64] -> [i32]
    5  (5.56%) × [i32, i32] -> []
    7  (7.78%) × [] -> []
    7  (7.78%) × [i64, i64, i64, i64] -> [i32]
   11 (12.22%) × [i32, i32, i32] -> [i32]
   14 (15.56%) × [i32] -> [i32]
   16 (17.78%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 6 (7.06% of all functions)

Table elements initialization:
         range: [    1,    2]   length:   2   unique funcs:    2   type: [i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    4,    4]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    5,    5]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    6,    6]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  5 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     4 × unrestricted                         source: local.(get|tee)   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               14
         functions matching by type and present in table (regardless at which table index):    3
         functions matching by type and present in permissable table index range:              3
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               11
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  3 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 3
    count (how often class appears): 4
  class #2
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 8
  total classes: 3

CSV data for further analysis: timecheck2llvm.wasm,17433,278,15,5.119454,90,6,3,3,3,8,5,4,147,31,21.088436,31,21.088436,19,12.92517

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"timecheck2llvm.wasm",0,1,3,"i32.load"
"timecheck2llvm.wasm",1,3,4,"local.(get|tee)"
"timecheck2llvm.wasm",2,2,8,"i32.load"
