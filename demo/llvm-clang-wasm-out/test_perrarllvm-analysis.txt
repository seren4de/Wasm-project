Input file: test_perrarllvm.wasm
  binary:    test_perrarllvm.wasm

Functions:           36
  Imported:           4
  Non-imported:      32
  Exported:          32

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          3
  Of those, unique functions:     3 (i.e., at least 8.33% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      2665
  call:              61 (2.29% of all instructions)
  call_indirect:     11 (0.41% of all instructions, 15.28% of all calls)

Globals:
  #0 i32
     init: i32.const 68768
      6 × global.get   15 × global.set   21 total (29/71% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 68768
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 3228
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["__progname"]
     init: i32.const 2996
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["__progname_full"]
     init: i32.const 3000
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["__libc"]
     init: i32.const 3004
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["__hwcap"]
     init: i32.const 3068
      0 × global.get    0 × global.set    0 total
  #8 i32
     export: ["__sysinfo"]
     init: i32.const 3072
      0 × global.get    0 × global.set    0 total
  #9 i32
     export: ["program_invocation_short_name"]
     init: i32.const 2996
      0 × global.get    0 × global.set    0 total
  #10 i32
     export: ["program_invocation_name"]
     init: i32.const 3000
      0 × global.get    0 × global.set    0 total
  #11 i32
     export: ["__stdin_used"]
     init: i32.const 2984
      0 × global.get    0 × global.set    0 total
  #12 i32
     export: ["__stdout_used"]
     init: i32.const 2984
      0 × global.get    0 × global.set    0 total
  #13 i32
     export: ["__stderr_used"]
     init: i32.const 3224
      0 × global.get    0 × global.set    0 total
  #14 i32
     export: ["stderr"]
     init: i32.const 2972
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:      6 (18.75% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (3.12%) × [-32]
    4 (12.50%) × [-16]
   27 (84.38%) × []
  functions with stack allocation total: 5 (15.62%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"test_perrarllvm.wasm",1,3.125,"[-32]",-32,32
sp_csv_line:"test_perrarllvm.wasm",4,12.5,"[-16]",-16,16
sp_csv_line:"test_perrarllvm.wasm",27,84.375,"[]",0,0

Counts of function types (10 unique types):
    1  (2.78%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    1  (2.78%) × [i32, i64, i32] -> [i64]
    2  (5.56%) × [] -> [i32]
    2  (5.56%) × [i32, i32, i32, i32] -> [i32]
    2  (5.56%) × [i32, i32, i32, i32, i32, i32, i32] -> [i32]
    4 (11.11%) × [] -> []
    4 (11.11%) × [i32] -> []
    4 (11.11%) × [i32, i32, i32] -> [i32]
    8 (22.22%) × [i32] -> [i32]
    8 (22.22%) × [i32, i32] -> [i32]

Functions with at least one call_indirect: 4 (12.50% of all functions)

Table elements initialization:
         range: [    1,    1]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [    2,    2]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  3 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     8 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):                4
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
     3 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                1
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  2 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 3
  class #1
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 8
  total classes: 2

CSV data for further analysis: test_perrarllvm.wasm,2665,61,11,15.277778,36,3,2,2,3,8,5.5,8,35,11,31.428572,11,31.428572,11,31.428572

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"test_perrarllvm.wasm",0,1,3,"i32.load"
"test_perrarllvm.wasm",1,1,8,"i32.load"
