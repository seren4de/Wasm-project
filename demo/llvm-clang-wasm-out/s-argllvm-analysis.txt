Input file: s-argllvm.wasm
  binary:    s-argllvm.wasm

Functions:           17
  Imported:           0
  Non-imported:      17
  Exported:          17

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:          0
  Of those, unique functions:     0 (i.e., at least 0.00% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:      2720
  call:              10 (0.37% of all instructions)
  call_indirect:      0 (0.00% of all instructions, 0.00% of all calls)

Globals:
  #0 i32
     init: i32.const 66656
      6 × global.get   10 × global.set   16 total (38/62% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 66656
      0 × global.get    0 × global.set    0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 1108
      0 × global.get    0 × global.set    0 total
  #3 i32
     export: ["__dso_handle"]
     init: i32.const 1024
      0 × global.get    0 × global.set    0 total
  #4 i32
     export: ["strs"]
     init: i32.const 1096
      0 × global.get    0 × global.set    0 total
  #5 i32
     export: ["ints"]
     init: i32.const 1040
      0 × global.get    0 × global.set    0 total
  #6 i32
     export: ["nr_strs"]
     init: i32.const 1032
      0 × global.get    0 × global.set    0 total
  #7 i32
     export: ["nr_ints"]
     init: i32.const 1088
      0 × global.get    0 × global.set    0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:      6 (35.29% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
   17(100.00%) × []
  functions with stack allocation total: 0 (0.00%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"s-argllvm.wasm",17,100,"[]",0,0

Counts of function types (5 unique types):
    1  (5.88%) × [] -> []
    1  (5.88%) × [i32, i32, i32] -> [i32]
    3 (17.65%) × [i32] -> [i32]
    5 (29.41%) × [i32, i32] -> [i32]
    7 (41.18%) × [i64, i64, i64, i64] -> [i32]

Functions with at least one call_indirect: 0 (0.00% of all functions)

Table elements initialization:
  0 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
  0 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  total classes: 0

